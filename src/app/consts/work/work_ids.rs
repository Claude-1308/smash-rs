use crate::*;

macro_rules! make_work_ids {
    ($ty:ident, $kind:ident, $(($name:ident, $index:literal))*) => {
        $(
            pub const $name: app::WorkId = app::WorkId::from_parts(app::WorkType::$ty, app::WorkKind::$kind, $index);
        )*
    }
}

pub mod fighter {
    use super::*;
    pub mod instance {
        use super::*;
        make_work_ids!(
            Float,
            Instance,
            (LANDING_FRAME, 0x0)
            (FALL_X_ACCEL_MUL, 0x1)
            (FALL_X_MAX_MUL, 0x2)
            (MUL_FALL_X_ACCEL, 0x3)
            (FALL_HOP_Y, 0x4)
            (WALL_JUMP_DIR, 0x5)
            (GUARD_SHIELD, 0x6)
            (GUARD_SHIELD_MIN, 0x7)
            (GUARD_SHIELD_MAX, 0x8)
            (GUARD_SHIELD_LEVEL, 0x9)
            (FLOWER_TOTAL_DAMAGE, 0xa)
            (GEKIKARA_ANGLE, 0xb)
            (GEKIKARA_ANGLE_SPEED, 0xc)
            (SCALING_START_SCALE, 0xd)
            (SCALING_END_SCALE, 0xe)
            (INIT_SCALE, 0xf)
            (METAL_POWER, 0x10)
            (SUCCEED_HIT_DAMAGE, 0x11)
            (REACTION_CHEER, 0x12)
            (DAMAGE_REACTION_FRAME, 0x13)
            (DAMAGE_REACTION_FRAME_LAST, 0x14)
            (DAMAGE_SPEED_RESERVED_X, 0x15)
            (DAMAGE_SPEED_RESERVED_Y, 0x16)
            (DAMAGE_SPEED_UP_MAG, 0x17)
            (DAMAGE_SPEED_UP_MAX_MAG, 0x18)
            (INIT_PITCH, 0x19)
            (CURSOR_OFFSET_Y, 0x1a)
            (STAGE_DAMAGE_REACTION_MIN, 0x1b)
            (STAGE_DAMAGE_REACTION_MAX, 0x1c)
            (STAGE_DAMAGE_REACTION_MUL, 0x1d)
            (SQUAT_WALK_SPEED_FORWARD_MAX, 0x1e)
            (SQUAT_WALK_SPEED_BACK_MAX, 0x1f)
            (WALK_SPEED_MUL, 0x20)
            (REBOUND_ATTACK_SPEED, 0x21)
            (ROCKETBELT_BURNER_ENERGY_VALUE, 0x22)
            (MII_RATE, 0x25)
            (MIIFIGHTER_100KICK_LR, 0x26)
            (PACMAN_EYE_END_SPEED, 0x27)
            (CHECK_DEAD_OFFSET_X, 0x28)
            (CHECK_DEAD_OFFSET_Y, 0x29)
            (DEAD_POS_X, 0x2a)
            (DEAD_POS_Y, 0x2b)
            (DEAD_POS_Z, 0x2c)
            (USED_ESCAPE, 0x2d)
            (USED_ESCAPE_F, 0x2e)
            (USED_ESCAPE_B, 0x2f)
            (USED_ESCAPE_AIR, 0x30)
            (JOSTLE_SPEED_ATTENUATION_RATE, 0x31)
            (CHARGE_FINAL_GAUGE, 0x32)
            (CHARGE_FINAL_ADD_DAMAGE, 0x33)
            (SPIRITS_MACH_STAMP_ATTACK_MUL, 0x34)
            (FORCE_CAPTURE_CUT_SPEED_X, 0x35)
            (CAPTURE_JUMP_SPEED_X, 0x36)
            (CAPTURE_JUMP_SPEED_Y, 0x37)
            (KAWASAKI_FLY_FRAME, 0x38)
            (KAWASAKI_FLY_HEIGHT, 0x39)
            (KAWASAKI_OFFSET_Y, 0x3a)
            (ADJUST_JOINT_POS_X_CHANGE_MOTION, 0x3b)
            (ADJUST_JOINT_POS_Y_CHANGE_MOTION, 0x3c)
            (SUSPEND_FLOWER_CLATTER_FRAME, 0x3d)
            (SUSPEND_FLOWER_TOTAL_DAMAGE, 0x3e)
            (ICE_DAMAGE, 0x3f)
            (OCTOPUS_CAPTURE_PULLED_SPEED, 0x40)
            (ITEM_THROW_COMMAND_LR, 0x41)
            (FINISH_CAMERA_THROW_CHECK_OFFSET_X, 0x42)
            (FINISH_CAMERA_THROW_CHECK_OFFSET_Y, 0x43)
            (FINISH_CAMERA_THROW_RAY_LENGTH, 0x44)
            (FINISH_CAMERA_THROW_RAY_HIT_POS_Y, 0x45)
            (SUCCEED_HIT_COUNT_HIT_STOP_DELAY_MUL, 0x46)
            (SHIELD_REBOUND_SPEED_MUL, 0x47)
            (JUMP_BOARD_SPEED_Y, 0x48)
            (CURRY_PLUS_ATTACK_MUL, 0x49)
            (CURRY_PLUS_SCALE, 0x4a)
            (RESERVE_FURAFURA_CLATTER_TIME, 0x4b)
        );
        make_work_ids!(
            Int,
            Instance,
            (ENTRY_ID, 0x0)
            (KIND, 0x1)
            (JUMP_COUNT, 0x2)
            (JUMP_COUNT_MAX, 0x3)
            (CLIFF_NO_CATCH_FRAME, 0x4)
            (WALL_JUMP_COUNT, 0x5)
            (WALL_JUMP_PAST_FRAME, 0x6)
            (TREAD_JUMP_COUNT, 0x7)
            (NO_TREAD_FRAME, 0x8)
            (TREAD_TARGET_ID, 0x9)
            (TREAD_TARGET_CATEGORY, 0xa)
            (NO_DAMAGE_SLIP_FRAME, 0xb)
            (NO_ATTACH_WALL_FRAME, 0xc)
            (ATTACH_WALL_COUNT, 0xd)
            (SPEED_Y_STABLE_FRAME, 0xe)
            (NO_BARREL_FRAME, 0xf)
            (NO_CATAPULT_FRAME, 0x10)
            (NO_GROUND_DAMAGE_FRAME, 0x11)
            (NO_LADDER_FRAME, 0x12)
            (NO_SPRING_FRAME, 0x13)
            (WATER_JUMP_COUNT, 0x14)
            (WATER_INTO_FRAME, 0x15)
            (GIMMICK_ID, 0x16)
            (GIMMICK_EVENT_MANAGE_ID, 0x17)
            (GIMMICK_KIND, 0x18)
            (FLOWER_COUNTER, 0x19)
            (HEAD_MUSHROOM_COUNTER, 0x1a)
            (GEKIKARA_COUNTER, 0x1b)
            (GEKIKARA_SHOOT_COUNTER, 0x1c)
            (GEKIKARA_SHOOT_DELAY, 0x1d)
            (HAMMER_COUNTER, 0x1e)
            (HAMMER_THROW_COUNTER, 0x1f)
            (HAMMER_SE_HANDLE, 0x20)
            (SUPERSTAR_COUNTER, 0x21)
            (SUPERSTAR_SE_HANDLE, 0x22)
            (CURSOR_FRAME, 0x23)
            (KINOKO_FRAME, 0x24)
            (THUNDER_FRAME, 0x25)
            (THUNDER_REQ_PAUSE_COUNT, 0x26)
            (SCALING_STATUS, 0x27)
            (SCALING_KIND, 0x28)
            (SCALING_FRAME, 0x29)
            (SCALING_TOTAL_FRAME, 0x2a)
            (SCALING_ANIM_KIND, 0x2b)
            (SCALING_HIT_STATUS, 0x2c)
            (METAL_FRAME, 0x2d)
            (GOLD_FRAME, 0x2e)
            (SPYCLOAK_FRAME, 0x2f)
            (INVISIBLE_FRAME, 0x30)
            (NO_HEAL_FRAME, 0x31)
            (NO_WATER_INOUT_FRAME, 0x32)
            (DEAD_REASON, 0x33)
            (DEAD_MODE, 0x34)
            (DEAD_REBIRTH_WAIT_FRAME, 0x35)
            (AUTO_HEAL_COUNT, 0x36)
            (SUCCEED_HIT_COUNT, 0x37)
            (LOUPE_FRAME, 0x38)
            (CURRY_SE_HANDLE, 0x39)
            (HEART_SWAP_TARGET_ENTRY_ID, 0x3a)
            (HEART_SWAP_ITEM_ID, 0x3b)
            (NO_FINAL_FRAME, 0x3c)
            (HEAL_EFF_ID, 0x3d)
            (CATCH_MOTION_OFFSET, 0x3e)
            (CATCH_MOTION_OFFSET_LW, 0x3f)
            (THROWN_MOTION_OFFSET, 0x40)
            (ATTACK_SERIAL, 0x41)
            (COLOR, 0x42)
            (STATUS_START_TURN_FRAME, 0x43)
            (METEOR_COUNTER_FRAME, 0x44)
            (BADGE_STOP_FRAME, 0x45)
            (SCREW_JUMP_COUNT, 0x46)
            (NO_PICKUP_ITEM_FRAME, 0x47)
            (FLY_REFLECT_COUNT, 0x48)
            (AIR_LASSO_COUNT, 0x49)
            (DAMAGE_ENTRY_ID, 0x4a)
            (WAZA_CUSTOMIZE_ORG, 0x4b)
            (WAZA_CUSTOMIZE_TO, 0x4c)
            (CUSTOMIZE_SPECIAL_N_NO, 0x4d)
            (CUSTOMIZE_SPECIAL_S_NO, 0x4e)
            (CUSTOMIZE_SPECIAL_HI_NO, 0x4f)
            (CUSTOMIZE_SPECIAL_LW_NO, 0x50)
            (FRAME_IN_AIR, 0x51)
            (FRAME_RUN_TURN, 0x52)
            (FRAME_CLIFF_ROBBED, 0x53)
            (INVALID_CAPTURE_FRAME, 0x54)
            (YOSHI_EGG_OBJECT_ID, 0x55)
            (YOSHI_EGG_CONSTRAINT_OBJECT_ID, 0x56)
            (ABNORMAL_MINIJUMP_SLOWWALK_FRAME, 0x57)
            (ABNORMAL_FAIL_IN_ATTACK_FRAME, 0x58)
            (BARREL_SOOT_FRAME, 0x59)
            (BARREL_SOOT_EFFECT_HANDLE, 0x5a)
            (HIT_STOP_IGNORE_JOSTLE_FRAME, 0x5b)
            (XERNEAS_ATTACK_REACTION_MUL_FRAME, 0x5c)
            (RIKI_ATTACK_REACTION_MUL_FRAME, 0x5d)
            (LITTLEMAC_KO_CAPTURE_INDEX, 0x5e)
            (FORCE_DAMAGE_MOTION_KIND, 0x5f)
            (ATTACKER_COLOR, 0x60)
            (ITEM_FIREBAR_BALL_NUM, 0x61)
            (KIRBY_ULTRASWORD_HIT_INDEX, 0x62)
            (DAMAGE_BIAS, 0x63)
            (REBIRTH_PLATE_INDEX, 0x64)
            (SUPERLEAF_FALL_SLOWLY_FRAME, 0x65)
            (RESERVE_DEAD_AREA, 0x66)
            (RESERVE_CURRY_AURA_EFFECT_HANDLE, 0x67)
            (RESERVE_FINAL_AURA_EFFECT_HANDLE, 0x68)
            (KNOCK_OUT_HIT_STOP_FRAME, 0x69)
            (DOWN_DAMAGE_COUNT, 0x6a)
            (PACMAN_EYE_DIR, 0x6b)
            (AIR_LASSO_LANDING_FRAME, 0x6c)
            (KO_ENTRY_ID, 0x6d)
            (ATTACK_LW3_HIT_NEAR_COUNT, 0x6e)
            (ATTACK_LW3_HIT_NEAR_COUNT_CLIFF_STOP, 0x6f)
            (ATTACK_LW3_HIT_NEAR_FRAME, 0x70)
            (STICK_JUMP_COMMAND_LIFE, 0x71)
            (TRICK_SUB, 0x72)
            (SWIM_EFFECT_HANDLE_1ST, 0x73)
            (SWIM_EFFECT_HANDLE_2ND, 0x74)
            (SWIM_EFFECT_HANDLE_3RD, 0x75)
            (INVALID_BIND_FRAME, 0x76)
            (IS_SLOW_EXTRA, 0x77)
            (GUARD_INVALID_CAPTURE_FRAME, 0x78)
            (ESCAPE_PENALTY_FRAME, 0x79)
            (ESCAPE_RECOVERY_FRAME, 0x7a)
            (HIT_STOP_ATTACK_SUSPEND_FRAME, 0x7b)
            (INVALID_CATCH_FRAME, 0x7c)
            (INVALID_BURY_FRAME, 0x7d)
            (BURY_STOP_FRAME_COUNTER, 0x7e)
            (SPIRITS_SUPPORT_SKILL_ADDRESS, 0x7f)
            (SPIRITS_STAGE_ATTRIBUTE_ADDRESS, 0x80)
            (SPIRITS_BATTLE_EVENT_ADDRESS, 0x81)
            (ATTACH_ITEM_ON_DEAD, 0x82)
            (BACK_DAMAGE_EFFECTIVE_FRAME, 0x83)
            (HAVE_SMASHBALL_KIND, 0x84)
            (CHARGE_FINAL_ADD_GAUGE_COUNTER, 0x85)
            (METAMON_LIFE, 0x86)
            (METAMON_STAY_FRAME, 0x87)
            (KNOCKOUT_FRAME, 0x88)
            (METAMON_BLINK, 0x89)
            (AIR_ESCAPE_ADD_XLU_START_FRAME, 0x8a)
            (SPIRITS_MACH_STAMP_FRAME, 0x8b)
            (SPIRITS_MACH_STAMP_OBJECT_ID, 0x8c)
            (IK_ARM_LEFT, 0x8d)
            (IK_ARM_RIGHT, 0x8e)
            (DISABLE_WALL_JUMP_FRAME, 0x90)
            (ITEM_SENDER_ID, 0x91)
            (DISABLE_GUARD_FRAME, 0x92)
            (DISABLE_ESCAPE_FRAME, 0x93)
            (DISABLE_JUST_SHIELD_FRAME, 0x94)
            (AIR_LASSO_HANG_DATA, 0x95)
            (METAL_TYPE, 0x96)
            (GOLD_TYPE, 0x97)
            (ADJUST_JOINT_ID_CHANGE_MOTION, 0x98)
            (SHULK_MONAD_ARTS_DAMAGE_FLASH_FRAME, 0x99)
            (DISABLE_SHIELD_RECOVERY_FRAME, 0x9a)
            (FLOWER_TYPE, 0x9b)
            (CURRY_TYPE, 0x9c)
            (SPYCLOAK_TYPE, 0x9d)
            (INVISIBLE_TYPE, 0x9e)
            (ICE_DAMAGE_RESET_FRAME, 0x9f)
            (INVALID_ICE_DAMAGE_FRAME, 0xa0)
            (ICE_DAMAGE_COUNT, 0xa1)
            (INVALID_PARALYZE_FRAME, 0xa2)
            (FACIAL_FLAG, 0xa3)
            (SPECIAL_FACIAL_KIND, 0xa4)
            (FINISH_CAMERA_COUNTER, 0xa5)
            (RUN_BRAKE_FRAME, 0xa6)
            (SUMMON_LIFE, 0xa7)
            (SUICIDE_BOMB_READY_FRAME, 0xa8)
            (SUICIDE_BOMB_READY_EFFECT_HANDLE, 0xa9)
            (BURY_R_THROW_OPPONENT_OBJECT_ID, 0xaa)
            (CLIFF_COUNT, 0xab)
            (METAKNIGHT_SMOKE_HANDLE, 0xac)
            (FINISH_CAMERA_HIT_STOP_FRAME, 0xad)
            (INVALID_POISON_SMASH_FRAME, 0xae)
            (FIXED_SCALING_STATUS, 0xaf)
            (FIXED_SCALING_KIND, 0xb0)
            (FINAL_CHROM_ID, 0xb1)
            (SCALE_SWING_SPECIAL_STATE, 0xb2)
            (SUCCEED_ATTACKER_ENTRY_ID, 0xb3)
            (START_ALLY_NUM, 0xb4)
            (DOLLY_STAGE_LR_DEAD_WAIT, 0xb5)
            (JUMP_BOARD_ACTIVATE_KIND, 0xb6)
            (JUMP_BOARD_AREA_EFFECT_COUNT, 0xb7)
            (JUMP_BOARD_AREA_EFFECT_HANDLE, 0xb8)
            (EDGE_FLARE_PARENT_ID, 0xb9)
            (HIT_STOP_SLOW_FRAME, 0xba)
            (HIT_STOP_SLOW_MAG, 0xbb)
            (TRAIL_REBOUND_OBJECT_ID, 0xbc)
        );
        make_work_ids!(
            Flag,
            Instance,
            (XERNEAS_ATTACK_REACTION_MUL, 0x62)
            (RIKI_ATTACK_REACTION_MUL, 0x63)
            (TERM, 0xe0)
            (ITEM_DEATHSCYTHE_EFFECT, 0xa5)
            (DEAD_END, 0x0)
            (NO_DEAD, 0x1)
            (CATCH_CLIFF, 0x2)
            (DISABLE_LANDING_CANCEL, 0x3)
            (DISABLE_LANDING_TURN, 0x4)
            (NO_PICKUP_ITEM, 0x5)
            (NO_DROP_ITEM, 0x6)
            (TREAD_NO_TRIGGER, 0x7)
            (FINAL, 0x8)
            (FINAL_STATUS, 0x9)
            (FINAL_AVAILABLE, 0xa)
            (FINAL_DISCRETION, 0xb)
            (FINAL_CHARGE, 0xc)
            (DISABLE_FINAL_START_CAMERA, 0xd)
            (ONE_MORE_FINAL, 0xe)
            (RESERVE_ONE_MORE_FINAL, 0xf)
            (RESERVE_ONE_MORE_CHARGE_FINAL, 0x10)
            (ONE_MORE_FINAL_DEAD_FAILED, 0x11)
            (FLOWER, 0x12)
            (FLOWER_SUSPEND, 0x13)
            (HEAD_MUSHROOM, 0x14)
            (GEKIKARA, 0x15)
            (CURRY_SUSPEND, 0x16)
            (HAMMER, 0x17)
            (HAMMER_NO_ATTACK, 0x18)
            (HAMMER_NO_DRIFT, 0x19)
            (STAR, 0x1a)
            (SCREW, 0x1b)
            (PIKMIN_FINAL_NO_REACTION, 0x1c)
            (PARALYZE_DAMAGE, 0x1d)
            (METAL, 0x1e)
            (METAL_SUSPEND, 0x1f)
            (GOLD, 0x20)
            (GOLD_SUSPEND, 0x21)
            (GOLD_NO_REACTION, 0x22)
            (SPYCLOAK, 0x23)
            (SPYCLOAK_SUSPEND, 0x24)
            (INVISIBLE, 0x25)
            (INVISIBLE_SUSPEND, 0x26)
            (RABBIT_CAP, 0x27)
            (KINOKO, 0x28)
            (THUNDER, 0x29)
            (NO_GLIDE, 0x2a)
            (DEAD_AREA_OUT, 0x2b)
            (KNOCKOUT, 0x2c)
            (LOUPE, 0x2d)
            (LOUPE_DAMAGE, 0x2e)
            (IS_LOUPE, 0x2f)
            (CURSOR, 0x30)
            (NAME_CURSOR, 0x31)
            (REBIRTH_NO_MOVE, 0x32)
            (KIRBY_COPY_DEDEDE, 0x33)
            (SPEED_DAMAGE, 0x34)
            (DISABLE_SCALING, 0x35)
            (DISABLE_CLIFF_CATCH, 0x36)
            (DISABLE_OTTOTTO, 0x37)
            (DISABLE_SLIP, 0x38)
            (SLOW, 0x39)
            (SLOW_CAUSE_TIMER, 0x3a)
            (WHOLE_SLOW, 0x3b)
            (WHOLE_SLOW_CAUSE_TIMER, 0x3c)
            (NO_DEAD_UP, 0x3d)
            (NO_DEAD_DOWN, 0x3e)
            (ITEM_THROW_4, 0x3f)
            (ASSIST, 0x40)
            (SPECIALFLAG, 0x41)
            (CHECK_CATCH, 0x42)
            (GENESISSET, 0x43)
            (SUB_FIGHTER, 0x44)
            (NO_SWIM, 0x45)
            (DISABLE_CURRY_SHOT, 0x46)
            (DISABLE_INTERRUPT_SWIM, 0x47)
            (DISABLE_INTERRUPT_SCALING, 0x48)
            (VOICE_MUTE, 0x49)
            (ENABLE_WARP_ON_DAMAGE, 0x4a)
            (POWBLOCK_QUAKE_JUMP, 0x4a)
            (HIT_REFLECTOR, 0x4b)
            (INHALED, 0x4c)
            (PARALYZE_STOP, 0x4d)
            (CALC_CURSOR_POS_FORCE, 0x4e)
            (NO_SPEED_OPERATION_CHK, 0x4f)
            (FORCE_LOUPE, 0x50)
            (CAPTURE_YOSHI, 0x51)
            (CURSOR_ON_POSTURE, 0x52)
            (CATCH_MOTION_HI_LW, 0x53)
            (INSTANT_DEATH_RESERVED, 0x54)
            (DISABLE_INSTANT_DEATH, 0x55)
            (JUMP_NO_LIMIT, 0x56)
            (JUMP_NO_LIMIT_ONCE, 0x57)
            (LIGHT_WEIGHT, 0x58)
            (SUPERLEAF, 0x59)
            (SUPERLEAFTAIL_ANIMATION, 0x5a)
            (POWBLOCK_QUAKE, 0x5b)
            (CATCHED_BUTTERFLYNET, 0x5c)
            (ROCKETBELT, 0x5d)
            (ABNORMAL_MINIJUMP_SLOWWALK, 0x5e)
            (ABNORMAL_FAIL_IN_ATTACK, 0x5f)
            (IGNORE_2ND_MOTION, 0x60)
            (RUN_FALL, 0x61)
            (GANON_SPECIAL_S_DAMAGE_FALL_GROUND, 0x64)
            (GANON_SPECIAL_S_DAMAGE_FALL_AIR, 0x65)
            (MIIFIGHTER_100KICK_SET_REFLECT_ANGLE, 0x66)
            (PEROPPAFU_SLOW_AREA, 0x67)
            (PEROPPAFU_SLOW, 0x68)
            (USE_FAIRY_BOTTLE, 0x69)
            (MASTERCORE, 0x6a)
            (CLIFF_XLU, 0x6b)
            (PACKMAN_EYE, 0x6c)
            (DISABLE_DEAD_UP_FALL, 0x6d)
            (DEAD_UP_FALL, 0x6e)
            (DEAD_UP_FALL_FIRST_LR, 0x6f)
            (DEAD_UP_FALL_KOOPA, 0x70)
            (DEAD_UP_GALAGA, 0x71)
            (DAMAGE_FLY_AIR, 0x72)
            (XERNEAS_ATTACK_REACTION_MUL_IS_MASTER, 0x73)
            (APPEAL_RANDOM, 0x74)
            (FINAL_END_TO_FALL, 0x75)
            (FALL_HOP, 0x76)
            (DAMAGE_PARALYZE_EFFECT, 0x77)
            (IGNORE_DEADUP_PRODUCTION, 0x78)
            (DISABLE_DEAD_UP_FIGHTER, 0x79)
            (DISABLE_DEAD_UP_STAR, 0x7a)
            (IS_DISCRETION_FINAL_USED, 0x7b)
            (SUPPRESS_WEAKEN_EFFECT, 0x7c)
            (BACKSHIELD_INVISIBLE, 0x7d)
            (BACKSHIELD_FORCE_VISIBLE, 0x7e)
            (PIT_FALL_TO_DOWN, 0x7f)
            (REQUEST_DIVE_EFFECT, 0x80)
            (UP_SPEED_DAMAGE, 0x81)
            (NO_DAMGE_TO_BURY, 0x82)
            (REFLECT_LR_REVERSE_MOTION, 0x83)
            (DAMAGE_CLIFF_STOP, 0x84)
            (CAN_SPECIAL_COMMAND, 0x85)
            (SHIELD_FIGHTER_SHOT, 0x86)
            (TO_PIERCE, 0x87)
            (PIERCE_GROUND_DAMAGE, 0x88)
            (DAMAGE_SPEED_UP, 0x89)
            (ROLLERINK_AREA_IN, 0x8a)
            (ROLLERINK_AREA_OUT, 0x8b)
            (ROLLERINK_POWER, 0x8c)
            (DELAY_FLIP, 0x8d)
            (RESERVE_FLIP, 0x8e)
            (BLACKBALL_AREA, 0x8f)
            (DAMAGE_FALL_RESERVE_FLIP, 0x90)
            (INVALID_DROWNED, 0x91)
            (SHIELD_LOCK, 0x92)
            (METAMON, 0x93)
            (METAMON_EXHAUST, 0x94)
            (JUMP_MINI_ATTACK, 0x95)
            (JUMP_MINI_ATTACK_POWER_MUL, 0x96)
            (CAPTURE_SHAKE_INVINCIBLE, 0x97)
            (DISABLE_STICK_REVERSE, 0x98)
            (DISABLE_ESCAPE_AIR, 0x99)
            (DEATH_PREDICTION, 0x9a)
            (FINISH_CAMERA_TARGET, 0x9b)
            (FINISH_CAMERA_TARGET_INITIALIZED, 0x9c)
            (FINISH_CAMERA_TARGET_DAMAGE_FLY, 0x9d)
            (FINISH_CAMERA_TARGET_DAMAGE_ELEC, 0x9e)
            (REQUEST_CHECK_FINISH_CAMERA_THROW, 0x9f)
            (RAY_CHECK_FINISH_CAMERA_THROW, 0xa0)
            (REVERSE_LR_FINISH_CAMERA_THROW_ORBIT, 0xa1)
            (SPIRITS_MACH_STAMP, 0xa2)
            (SPIRITS_STAGE_ATTR_ADHESION, 0xa3)
            (ENABLE_LANDING_CLIFF_STOP, 0xa4)
            (ITEM_DEATHSCYTHE_CUT_IN, 0xa6)
            (ENABLE_TRANSITION_STATUS_STOP, 0xa7)
            (FIRST_BURY_DOWN, 0xa8)
            (HIT_ATTACK, 0xa9)
            (INVALID_CAPTURE, 0xaa)
            (BURY_R, 0xab)
            (KOZUKATA_DAMAGE, 0xac)
            (GAMEWATCH_OCTOPUS_DAMAGE, 0xad)
            (ESCAPE_XLU_START_1F, 0xae)
            (DISABLE_ESCAPE_PENALTY, 0xaf)
            (INFINITY_SMASH_HOLD, 0xb0)
            (SUCCEED_HIT_COUNT_RED, 0xb1)
            (RESERVE_JUMP_MINI_ATTACK, 0xb2)
            (RESULT_FIGHTER_SINGLE, 0xb3)
            (ENABLE_FACIAL_ON_FINAL, 0xb4)
            (DISABLE_MINI_JUMP, 0xb5)
            (DISABLE_GUARD, 0xb6)
            (DISABLE_RUN, 0xb7)
            (DISABLE_BIND, 0xb8)
            (DISABLE_BURY, 0xb9)
            (CAPTURE_JUMP_ENABLE_CONTROL, 0xba)
            (KO_SURVIVE, 0xbb)
            (ON_DAMAGE_FINAL, 0xbc)
            (ON_SCALING, 0xbd)
            (DISABLE_FURAFURA_VOICE_FINAL, 0xbe)
            (DISABLE_CAPTURE_PULLED_SE, 0xbf)
            (DISABLE_SYS_HIT_DEAD, 0xc0)
            (DISABLE_STAGE_GRAVITY, 0xc1)
            (REQ_VC_KNOCKOUT, 0xc2)
            (FIXED_SCALING, 0xc3)
            (ENABLE_ITEM_NO_COUNT, 0xc4)
            (KIRBY_COPY_KROOL, 0xc5)
            (DISABLE_GUARD_HOLD_SPECIAL_BUTTON, 0xc6)
            (KEEP_ESCAPE_PENALTY_FRAME, 0xc7)
            (DISABLE_KINETIC_RESET_PARAM, 0xc8)
            (BRAVE_STEEL, 0xc9)
            (METAL_CRITICAL_SUCCEEDED, 0xca)
            (METAL_CRITICAL_CUT_IN, 0xcb)
            (DEATHBALL_SUCCEEDED, 0xcc)
            (DISABLE_SPECIAL_HI_CONTINUOUS, 0xcd)
            (MODIFY_HIT_DATA, 0xce)
            (SUICIDE_SKILL_RESERVED, 0xcf)
            (SET_RANDOM_DAMAGE_MOTION, 0xd0)
            (ENABLE_DOLLY_STAGE_LR_DEAD, 0xd1)
            (FINISH_CAMERA_DOLLY_STAGE, 0xd2)
            (JUMP_BOARD, 0xd3)
            (JUMP_BOARD_AREA_IN, 0xd4)
            (DISABLE_AIR_GET_ITEM, 0xd5)
            (CURRY_PLUS, 0xd6)
            (CATCHED_PICKEL, 0xd7)
            (IGNORE_LAMDING_RECOVER, 0xd8)
            (SE_MUTE, 0xd9)
            (NO_DAMAGE_DELAY_MOTION_INTP, 0xda)
            (WALK_ANIMCMD_INHERIT, 0xdb)
            (NO_SPECIALFLAG_HOIST, 0xdc)
            (COMMONSND_DEAD_RARE, 0xdd)
            (GROUND_CHECK_FINISH_CAMERA_ORBIT, 0xde)
            (TRAIL_SPECIAL_LW_REBOUND, 0xdf)
        );
    }
    pub mod special_command_user {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (OPPONENT_LR_1ON1, 0x4c)
            );
            make_work_ids!(
                Int,
                Instance,
                (TURN_CANCEL_FRAME, 0xbd)
                (TURN_COMMAND_41236_STEP, 0xbe)
                (TURN_COMMAND_214_STEP, 0xbf)
                (TURN_COMMAND_214214_STEP, 0xc0)
                (TURN_COMMAND_21416_STEP, 0xc1)
                (PASS_CANCEL_FRAME, 0xc2)
                (PASS_COMMAND_236_STEP, 0xc3)
                (PASS_COMMAND_214_STEP, 0xc4)
                (PASS_COMMAND_236236_STEP, 0xc5)
                (PASS_COMMAND_214214_STEP, 0xc6)
                (PASS_COMMAND_21416_STEP, 0xc7)
                (PASS_COMMAND_23634_STEP, 0xc8)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe3)
                (TURN_CANCEL, 0xe0)
                (PASS_CANCEL, 0xe1)
                (AUTO_TURN_END_STATUS, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PASS_FLOAT_START, 0x6)
                (PASS_FLOAT_SPEED_Y, 0x7)
                (PASS_FLOAT_OFFSET_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (PASS_INT_START, 0x5)
                (PASS_INT_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PASS_FLAG_START, 0xc)
                (PASS_FLAG_COMMAND_EXTEND, 0xd)
                (PASS_FLAG_COMMAND_EXTEND2, 0xe)
            );
        }
    }
    pub mod shield {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (WAIT_SHIELD_DAMAGE, 0x4d)
                (WAIT_SHIELD_HIT_STOP_FRAME, 0x4e)
                (WAIT_SHIELD_LR, 0x4f)
                (DELAY_MUL, 0x50)
            );
            make_work_ids!(
                Int,
                Instance,
                (WAIT_OPPONENT_OBJECT_ID, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe4)
                (SHIELD, 0xe1)
                (WAIT_SHIELD, 0xe2)
                (IS_SHIELD_GUARD_REQUESTED, 0xe3)
            );
        }
    }
    pub mod mario {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe3)
                (SPECIAL_S_HOP, 0xe0)
                (SPECIAL_S_REFLECTOR, 0xe1)
                (SPECIAL_S_REFLECTOR_BREAK, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (PRE_START, 0x6)
                    (REFLECT_MOTION_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CONTINUE, 0xc)
                    (SPECIAL_FALL, 0xd)
                    (HOP, 0xe)
                    (REFLECT_SKIP_MOTION, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x11)
                    (CAPPY, 0x12)
                    (TERM, 0x13)
                );
            }
            pub mod pump {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
            pub mod pump_charge {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
            pub mod pump_shoot {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
        }
    }
    pub mod donkey {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4c)
                (TERM, 0x53)
                (FINAL_LR, 0x4d)
                (FINAL_SE_ANGLE, 0x4e)
                (FINAL_SE_POWER_RATIO, 0x4f)
                (FINAL_SE_SPEED_RATIO, 0x50)
                (FINAL_SE_SCALE_RATIO, 0x51)
                (FINAL_NEXT_TIMING_RATE, 0x52)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_COUNT, 0xbe)
                (SPECIAL_N_EFFECT, 0xbf)
                (FINAL_SE_HANDLE, 0xc0)
                (FINAL_NEXT_FRAME, 0xc1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (N_EFFECT, 0xe0)
                (BONUS, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod shoulder_start {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SHOULDER_WAIT, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (MOTION_RATE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PUNCH_COUNT, 0x5)
                    (DEFAULT_POWER_0, 0x6)
                    (DEFAULT_POWER_1, 0x7)
                    (POWER_ADD, 0x8)
                    (SPEED_STEP, 0x9)
                    (CANCEL_TYPE, 0xa)
                    (IGNORE_CRITICAL_ATTACK_ID, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (MAX, 0xd)
                    (CANCEL_FACE, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FALL_START, 0xd)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (YACL_DEFAULT, 0xd)
                    (CLIFF_CHECK, 0xe)
                    (GROUND_SPINEND, 0xf)
                    (GROUND_MOT_FRAME, 0x10)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (GROUND_POS_X, 0x7)
                    (GROUND_POS_Y, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (LOOP, 0xc)
                    (ATTACK, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xb)
                    (ATTACK_TARGET_OFFSET_X, 0x7)
                    (ATTACK_TARGET_OFFSET_Y, 0x8)
                    (FIX_POS_X, 0x9)
                    (FIX_POS_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_REQUEST_LOOP_DAMAGE_MOTION, 0x12)
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (ATTACK_HIT_NUM, 0x7)
                    (ATTACK_HIT_MOVE_NUM, 0x8)
                    (ATTACK_HIT_BATTLE_NUM, 0x9)
                    (ATTACK_HIT_OBJECT_ID, 0xa)
                    (ATTACK_HIT_OBJECT_ID_TERM, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (ATTACK_HIT, 0xd)
                    (HIT_ALL_OPPONENT, 0xe)
                    (TO_ATTACK, 0xf)
                    (ATTACK_END_HIT, 0x11)
                );
            }
        }
    }
    pub mod link {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4c)
                (TERM, 0x58)
                (FINAL_DX, 0x4d)
                (FINAL_DY, 0x4e)
                (ATTACK_AIR_LW2_BLANK_TIME, 0x4f)
                (WAIT_SHIELD_DAMAGE, 0x50)
                (WAIT_SHIELD_LR, 0x51)
                (WAIT_SHIELD_HIT_STOP_FRAME, 0x52)
                (LANDING_PREV_MOTION_FRAME, 0x53)
                (HOOKSHOT_MAP_COLL_OFFSET_X, 0x54)
                (HOOKSHOT_MAP_COLL_OFFSET_Y, 0x55)
                (HOOKSHOT_MAP_COLL_OFFSET_Z, 0x56)
                (DELAY_MUL, 0x57)
            );
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_AIR_LW_HIT_COUNT, 0xbe)
                (BOOMERANG_ARTICLE_ID, 0xbf)
                (BOW_ARTICLE_ID, 0xc0)
                (BOWARROW_ARTICLE_ID, 0xc1)
                (LANDING_PREV_MOTION_KIND, 0xc2)
                (BOMB_OBJECT_ID, 0xc3)
                (WAIT_OPPONENT_OBJECT_ID, 0xc4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (BOOMERANG, 0xe0)
                (ATTACK_AIR_LW_BOUND, 0xe1)
                (ATTACK_AIR_LW_CLEAR, 0xe2)
                (ATTACK_AIR_LW_SET_ATTACK, 0xe3)
                (WAIT_SHIELD, 0xe4)
                (SHIELD, 0xe5)
                (IS_SHIELD_GUARD_REQUESTED, 0xe6)
                (SET_MAP_COLL_OFFSET, 0xe7)
                (OFF_MAP_COLL_OFFSET, 0xe8)
            );
        }
        pub mod status {
            use super::*;
            pub mod rslash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND, 0xc)
                    (RESET_SPEED_MAX_X, 0xd)
                );
            }
            pub mod rslash_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod boomerang {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (FLICK, 0xd)
                );
            }
            pub mod boomerang_catch {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod bow {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (STEP, 0x5)
                    (SHOOT_NUM, 0x6)
                    (DOUBLE_COUNT, 0x7)
                    (MAX_HOLD_COUNT, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_START, 0xc)
                    (CONTINUE, 0xd)
                    (CONTINUE_END, 0xe)
                    (DOUBLE, 0x10)
                    (CHARGE_MAX, 0x11)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (BOMB_START, 0x6)
                (BOMB_TERM, 0x7)
                (FINAL_START, 0x6)
                (FINAL_DISTANCE, 0x7)
                (FINAL_DISTANCE_TO_DESTINATION, 0x8)
                (FINAL_TERM, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (BOMB_MOTION, 0x5)
                (BOMB_MOT_GROUND, 0x6)
                (BOMB_MOT_AIR, 0x7)
                (FINAL_FRAME, 0x5)
                (FINAL_EF_ID_TRIFORCE, 0x6)
                (FINAL_EF_ID_TRIFORCE_BREAK, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (BOMB_MOT_INHERIT, 0xc)
                (BOMB_GENERATE_LINKBOMB, 0xd)
                (BOMB_ALREADY_GENERATED, 0xe)
                (BOMB_BLAST, 0xf)
                (BOMB_SET_ITEM_HOLD_ANIM, 0x10)
                (FINAL_MOT_INHERIT, 0xc)
                (FINAL_WAIT_DASH, 0xd)
                (FINAL_FAILED, 0xe)
                (FINAL_SET_DAMAGE_FLY_N, 0xf)
                (FINAL_SET_DAMAGE_FLY_N_CHECKED, 0x10)
                (FINAL_READY_FINISH, 0x11)
                (FINAL_READY_FINISH_CHECKED, 0x12)
                (FINAL_RAISE_ONOFF, 0x13)
                (FINAL_REQ_CATCH, 0x14)
                (FINAL_RESPOND_CATCH, 0x15)
                (FINAL_CATCH_SUCCESS, 0x16)
            );
        }
    }
    pub mod samus {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CATCH_JOINT_LENGTH, 0x4c)
                (BOMBJUMP_ANG, 0x4d)
                (FINAL_LASER_ANG, 0x4e)
                (GBEAM_MAP_COLL_OFFSET_X, 0x4f)
                (GBEAM_MAP_COLL_OFFSET_Y, 0x50)
                (GBEAM_MAP_COLL_OFFSET_Z, 0x51)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFH_CHARGE_MAX, 0xbd)
                (SPECIAL_N_COUNT, 0xbe)
                (SPECIAL_LW_BODY, 0xbf)
                (FINAL_LASER_C, 0xc0)
                (FINAL_GUN_ID, 0xc1)
                (FINAL_MOT2ND, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe7)
                (FINAL_EXEC, 0xe0)
                (ST_INIT, 0xe1)
                (IS_CHANGE_STATUS_BOMBJUMP, 0xe2)
                (SET_MAP_COLL_OFFSET, 0xe3)
                (OFF_MAP_COLL_OFFSET, 0xe4)
                (ARTICLE_MOTION_RATE_SYNC, 0xe5)
                (WIN_VISOR_MOTION, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (COUNT, 0x5)
                    (CANCEL_TYPE, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_RESTART, 0xc)
                    (BULLET_DISP, 0xd)
                    (SHOOT, 0xe)
                    (CHARGE, 0xf)
                    (AIR_START, 0x10)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (ACC_X, 0xc)
                    (DISABLE_LR, 0xd)
                    (WAIT_TAKEOFF, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (JUMP, 0xc)
                    (MV, 0xd)
                    (MV_CONT, 0xe)
                    (CHK_CROUCH, 0xf)
                    (WEAPON, 0x10)
                    (MOT_RESTART, 0x11)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (ITEM_HOLD_KIND_BACKUP, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (WEAPON, 0xc)
                    (WEAPON_GENERATED, 0xd)
                    (SMASH, 0xe)
                    (MOT_RESTART, 0xf)
                    (AIR_CONTROL, 0x10)
                    (AIR_CONTROL_DONE, 0x11)
                    (MATERIAL_MOTION, 0x12)
                    (GENERATE_SUCCESS, 0x13)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (OY, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_RESTART, 0xc)
                );
            }
        }
    }
    pub mod samusd {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe1)
            );
        }
    }
    pub mod yoshi {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HOP_SPEED, 0x4c)
                (AERIAL_DAMAGE_REACTION, 0x4d)
                (SPECIAL_S_GROUND_ANGLE, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
                (HOP_COUNT, 0xbf)
                (AERIAL_TURN_COUNT, 0xc0)
                (SPECIAL_S_JUMP_WAIT, 0xc1)
                (SPECIAL_S_JUMP_COUNT, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe6)
                (SPECIAL_S_HOP, 0xe0)
                (COLOR_ANIM, 0xe1)
                (JUMP_AERIAL_ARMOR, 0xe2)
                (SPECIAL_S_TOUCH_WALL, 0xe3)
                (SPECIAL_S_JUMP, 0xe4)
                (SPECIAL_LW_KILL_EFFECT, 0xe5)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (CAPTURE_ID, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (CATCH, 0xd)
                    (SWALLOW, 0xe)
                    (SPIT, 0xf)
                    (SPITED, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xd)
                    (SPEED_BACKUP, 0x7)
                    (ANGLE, 0x8)
                    (SPEED, 0x9)
                    (ACCEL, 0xa)
                    (RESERVE_DIR, 0xb)
                    (LIFE, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DISP_INDEX, 0x5)
                    (SCALE_INDEX, 0x6)
                    (ATTACK_COUNT, 0x7)
                    (EFFECT_FRAME, 0x8)
                    (ATTACK_GROUP, 0x9)
                    (TURN_FLAG, 0xa)
                    (CHANGE_STEP, 0xb)
                    (NEXT_STATUS, 0xc)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (DISP_EGG, 0xd)
                    (HIDE_EGG, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (EGG_COUNT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (EGG_APPEAR, 0xc)
                    (EGG_SHOOT, 0xd)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (LANDING_ENABLE, 0xc)
                    (FALL, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xd)
                    (START_X, 0x7)
                    (START_Y, 0x8)
                    (ADD_DAMAGE, 0x9)
                    (CHANGE_SCALE_TARGET, 0xa)
                    (OWNER_SCALE, 0xb)
                    (INIT_SCALE, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DASH_COUNT, 0x5)
                    (ADD_DAMAGE_COUNT, 0x6)
                    (CHANGE_MOTION_TARGET, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (DASH_HIT, 0x13)
                    (TO_VISUAL_SCENE, 0x14)
                );
            }
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (THROWN_VISIBLE, 0xf)
                    (TERM, 0x10)
                );
            }
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xc)
            );
        }
    }
    pub mod kirby {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (COPY_SIZE, 0x1e)
                (STARMISSILE_TARGET_DAMAGE, 0x6a)
                (INKLING_SPECIAL_N_INK, 0x6b)
                (INKLING_SPECIAL_N_INK_R, 0x6c)
                (INKLING_SPECIAL_N_INK_G, 0x6d)
                (INKLING_SPECIAL_N_INK_B, 0x6e)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xf9)
                (AIR_MOT, 0xfa)
                (PREV_STONE, 0xfb)
                (COPY_CHARA, 0xfc)
                (COPY_CHARA_SLOT_NO, 0xfd)
                (WN_STAR_TASK_ID, 0xfe)
                (WN_STAR_KIND, 0xff)
                (WARIO_SPECIAL_N_INTERVAL, 0x100)
                (ROSETTA_SPECIAL_N_INTERVAL, 0x101)
                (INKLING_SPECIAL_N_INK_COLOR, 0x102)
                (SPECIAL_S_CHARGE, 0x103)
                (SPECIAL_S_REMOVE, 0x104)
                (SPECIAL_S_FLASH_COUNT, 0x105)
                (COPY_MODULE_ADDRESS, 0x106)
                (COPY_NO_CANCEL_FRAME, 0x107)
                (SPECIAL_N_HIT_NEAR_COUNT, 0x108)
                (SPECIAL_N_HIT_NEAR_FRAME, 0x109)
            );
            make_work_ids!(
                Flag,
                Instance,
                (COPY_START, 0xe0)
                (COPY_TERM, 0xfe)
                (START, 0xfd)
                (TERM, 0x111)
                (COPY_ABILITY_RESERVE_0, 0xfe)
                (COPY_ABILITY_RESERVE_1, 0xff)
                (COPY_ABILITY_RESERVE_2, 0x100)
                (COPY_ABILITY_RESERVE_3, 0x101)
                (COPY_ABILITY_RESERVE_TERM, 0x102)
                (MOT_FRAME_INHERIT, 0x101)
                (COPY, 0x102)
                (COPY_DAMAGE_NO_CANCEL, 0x103)
                (COPY_ON_START, 0x104)
                (COPY_HAT_RELOAD, 0x105)
                (COPY_STRANS_OFF, 0x106)
                (COPY_METAMON, 0x107)
                (SPECIAL_S_HOLD_MAX, 0x108)
                (SPECIAL_S_NO_MAX_ATTACK_EFFECT, 0x109)
                (MTRANS_SMPL_AIR, 0x10a)
                (MTRANS_SMPL_GROUND, 0x10b)
                (MTRANS_SMPL_MOTION_END, 0x10c)
                (MTRANS_SMPL_EX1, 0x10d)
                (STRANS_0, 0x10e)
                (STRANS_1, 0x10f)
                (FINAL_IS_ROCKET_BELT_ATTACHED, 0x110)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (EAT_WALK_SPEED, 0x7)
                    (EAT_WALK_SPEED_MAX_RATIO, 0x8)
                    (EAT_WAIT_SWALLOWED_STICK_X, 0x9)
                    (EAT_WAIT_SWALLOWED_STICK_Y, 0xa)
                    (SWALLOWED_FLICK_OFFSET_X, 0xb)
                    (SWALLOWED_FLICK_OFFSET_Y, 0xc)
                    (SWALLOWED_FLICK_OFFSET_X_PREV, 0xd)
                    (SWALLOWED_FLICK_OFFSET_Y_PREV, 0xe)
                    (INHALE_WEAPON_SIZE, 0xf)
                    (INHALE_WEAPON_ATTACK_POWER, 0x10)
                    (TERM, 0x11)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (LOOP_COUNT, 0x7)
                    (DRINK_WEAPON_KIND, 0x8)
                    (TARGET_TASK, 0x9)
                    (TARGET_HIT_GROUP, 0xa)
                    (TARGET_HIT_NO, 0xb)
                    (SWALLOWED_FLICK_TIMER, 0xc)
                    (INHALE_OBJECT_ID, 0xd)
                    (INHALE_OBJECT_ID2, 0xe)
                    (INHALE_OBJECT_ID3, 0xf)
                    (INHALE_OBJECT_ID4, 0x10)
                    (INHALE_OBJECT_NUM, 0x11)
                    (INHALE_OBJECT_FRAME, 0x12)
                    (WEAPON_HOLD_FRAME, 0x13)
                    (INHALE_WEAPON_ID, 0x14)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (BUTTON_RELEASE_CHK, 0xd)
                    (INHALE, 0xe)
                    (ITEM_REMOVE, 0xf)
                    (ITEM_USE, 0x10)
                    (SPIT, 0x11)
                    (SPIT_END, 0x12)
                    (SWALLOWED_STICK_ON, 0x13)
                    (SPIT_COPY, 0x14)
                    (SWALLOW_COMP, 0x15)
                    (DARK, 0x16)
                    (SHOOT_PIKMIN, 0x17)
                    (DRINK_WEAPON, 0x18)
                    (SWALLOW_WEAPON, 0x19)
                    (CHANGE_ITEM_USE_STATUS, 0x1a)
                    (CHANGE_ITEM_USE_STATUS_BOMB, 0x1b)
                    (CHANGE_ITEM_USE_STATUS_DRAGOON, 0x1c)
                    (CHANGE_ITEM_USE_STATUS_GENESIS, 0x1d)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HAMMER_SCALE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_MOTION, 0x5)
                    (HOLD_COUNT, 0x6)
                    (JUMP_STEP, 0x7)
                    (HOLD_MAX_DAMAGE_COUNT, 0x8)
                    (HOLD_MAX_DAMAGE_VALUE, 0x9)
                    (SE_HANDLE, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT1, 0xc)
                    (CONTINUE_MOT2, 0xd)
                    (CONTINUE_MOT3, 0xe)
                    (HOLD_MAX, 0xf)
                    (HOLD_MAX_CHK_END, 0x10)
                    (HOLD_QUARTER, 0x11)
                    (HOLD_START, 0x12)
                    (CHANGE_SE_HOLD_MAX, 0x13)
                    (NO_CHANGE, 0x14)
                    (GROUND_KILL_EFFECT, 0x15)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x7)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (SECOND_DAMAGE, 0x7)
                (STONE_CUR_NORMAL_X, 0x8)
                (STONE_CUR_NORMAL_Y, 0x9)
                (STONE_CUR_ANGLE, 0xa)
                (STONE_BUF_A1_NORMAL_X, 0xb)
                (STONE_BUF_A1_NORMAL_Y, 0xc)
                (STONE_BUF_A1_ANGLE, 0xd)
                (STONE_BUF_A2_NORMAL_X, 0xe)
                (STONE_BUF_A2_NORMAL_Y, 0xf)
                (STONE_BUF_A2_ANGLE, 0x10)
                (STONE_BUF_A3_NORMAL_X, 0x11)
                (STONE_BUF_A3_NORMAL_Y, 0x12)
                (STONE_BUF_A3_ANGLE, 0x13)
                (STONE_BUF_A4_NORMAL_X, 0x14)
                (STONE_BUF_A4_NORMAL_Y, 0x15)
                (STONE_BUF_A4_ANGLE, 0x16)
                (STONE_ALL_A1_NORMAL_X, 0x17)
                (STONE_ALL_A1_NORMAL_Y, 0x18)
                (STONE_ALL_A1_ANGLE, 0x19)
                (STONE_ALL_A2_NORMAL_X, 0x1a)
                (STONE_ALL_A2_NORMAL_Y, 0x1b)
                (STONE_ALL_A2_ANGLE, 0x1c)
                (STONE_ALL_A3_NORMAL_X, 0x1d)
                (STONE_ALL_A3_NORMAL_Y, 0x1e)
                (STONE_ALL_A3_ANGLE, 0x1f)
                (STONE_ALL_A4_NORMAL_X, 0x20)
                (STONE_ALL_A4_NORMAL_Y, 0x21)
                (STONE_ALL_A4_ANGLE, 0x22)
                (STONE_BG_FLAG, 0x23)
                (STONE_GROUND_SPEED, 0x24)
                (STONE_GROUND_ACCEL, 0x25)
                (FINALCUTTER_START, 0x6)
                (FINAL_START, 0x6)
            );
            make_work_ids!(
                Int,
                Status,
                (STONE_HOLD_FRAME, 0x5)
                (STONE_FALL_MIN_CANCEL_FRAME, 0x6)
                (STONE_PREV_SITUATION, 0x7)
                (STONE_BLINK_COUNTER, 0x8)
                (STONE_EFFECT_HANDLE, 0x9)
                (STONE_COL_LOG_GROUP, 0xa)
                (FINALCUTTER_GROUND_MOT, 0x5)
                (FINALCUTTER_AIR_MOT, 0x6)
                (FINALCUTTER_START_SITUATION, 0x7)
                (FINALCUTTER_METEOR_HIT_NUM, 0x8)
                (FINALCUTTER_METEOR_TARGET_ID, 0x9)
                (FINALCUTTER_METEOR_TARGET_ID_MAX, 0x10)
                (FINAL_HIT_COUNT, 0x5)
                (FINAL_HIT_MOTION_INDEX, 0x6)
                (FINAL_CHANGE_STATUS_NUM, 0x7)
                (FINAL_CHANGE_STATUS_QUE, 0x8)
                (FINAL_CHANGE_STATUS_ID_1, 0x9)
                (FINAL_CHANGE_STATUS_ID_2, 0xa)
                (FINAL_CHANGE_STATUS_ID_3, 0xb)
                (FINAL_CHANGE_STATUS_ID_4, 0xc)
                (FINAL_CHANGE_STATUS_ID_5, 0xd)
                (FINAL_CHANGE_STATUS_ID_6, 0xe)
                (FINAL_CHANGE_STATUS_ID_7, 0xf)
                (FINAL_CHANGE_STATUS_ID_8, 0x10)
            );
            make_work_ids!(
                Flag,
                Status,
                (STONE_START, 0xb)
                (STONE_BLINK_TABLE_SELECT, 0xc)
                (STONE_BLINK_ONOFF, 0xd)
                (STONE_PREV_BLINK_ONOFF, 0xe)
                (STONE_EFFECT_ONOFF, 0xf)
                (STONE_PREV_EFFECT_ONOFF, 0x10)
                (FINALCUTTER_FLAG_START, 0xb)
                (FINALCUTTER_MOT_FRAME_INHERIT, 0xc)
                (FINALCUTTER_REVERSE, 0xd)
                (FINALCUTTER_CANCEL, 0xe)
                (FINAL_HIT, 0xc)
                (FINAL_RELEASE, 0xd)
                (FINAL_SWING_HOLD, 0xe)
            );
        }
    }
    pub mod fox {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POSTURE_LOG_POS_X_START, 0x4c)
                (POSTURE_LOG_POS_X_0, 0x4c)
                (POSTURE_LOG_POS_X_1, 0x4d)
                (POSTURE_LOG_POS_X_2, 0x4e)
                (POSTURE_LOG_POS_X_3, 0x4f)
                (POSTURE_LOG_POS_Y_START, 0x50)
                (POSTURE_LOG_POS_Y_0, 0x50)
                (POSTURE_LOG_POS_Y_1, 0x51)
                (POSTURE_LOG_POS_Y_2, 0x52)
                (POSTURE_LOG_POS_Y_3, 0x53)
                (POSTURE_LOG_POS_Z_START, 0x54)
                (POSTURE_LOG_POS_Z_0, 0x54)
                (POSTURE_LOG_POS_Z_1, 0x55)
                (POSTURE_LOG_POS_Z_2, 0x56)
                (POSTURE_LOG_POS_Z_3, 0x57)
                (POSTURE_LOG_ROT_X_START, 0x58)
                (POSTURE_LOG_ROT_X_0, 0x58)
                (POSTURE_LOG_ROT_X_1, 0x59)
                (POSTURE_LOG_ROT_X_2, 0x5a)
                (POSTURE_LOG_ROT_X_3, 0x5b)
                (FIRE_DECIDE_STICK_X, 0x5c)
                (FIRE_DECIDE_STICK_Y, 0x5d)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe4)
                (REFLECTOR, 0xe0)
                (REFLECTOR_BREAK, 0xe1)
                (ILLUSION_LANDING, 0xe2)
                (REFLECTOR_LANDING, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (LANDING_DISABLE_ATTACK, 0xf)
                    (TERM, 0x10)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
                (FINAL_FOV_RATE_SCENE_ATTACK, 0xb)
                (FINAL_OWNER_SCALE, 0xc)
                (FINAL_INIT_SCALE, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_COUNT, 0x6)
                (FINAL_END, 0x7)
                (FINAL_ARIGNWSHOT_TYPE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_TERM, 0x29)
                (FINAL_SUCCESS, 0xc)
                (FINAL_RESERVE_CLEAR_SLOW, 0xd)
                (FINAL_ABS_SET, 0xe)
                (FINAL_ABS_GET, 0xf)
                (FINAL_ABS_HIT, 0x10)
                (FINAL_CLEAR_SLOW, 0x11)
                (FINAL_NO_DEAD_OFF, 0x12)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x13)
                (FINAL_END_GROUND_CORRECT_ON, 0x14)
                (FINAL_END_GROUND_CORRECT_SET, 0x15)
                (FINAL_SUCCESS_FRAME, 0x16)
                (FINAL_MOT_CHANGE, 0x17)
                (FINAL_ZOOM_START, 0x18)
                (FINAL_CLEAR_ATTACK, 0x19)
                (FINAL_FOV_CHANGE, 0x1a)
                (FINAL_START_CAPTION, 0x1b)
                (FINAL_END_CAPTION, 0x1c)
                (FINAL_SPECIAL_CAPTION, 0x1d)
                (FINAL_END_EXIT, 0x1e)
                (FINAL_END_EXIT_FINISH, 0x1f)
                (FINAL_END_SCREEN_EFFECT, 0x20)
                (FINAL_ARIGNWSHOT_SELF_1, 0x21)
                (FINAL_ARIGNWSHOT_SELF_2, 0x22)
                (FINAL_ARIGNWSHOT_CONSORT_1_1, 0x23)
                (FINAL_ARIGNWSHOT_CONSORT_1_2, 0x24)
                (FINAL_ARIGNWSHOT_CONSORT_2_1, 0x25)
                (FINAL_ARIGNWSHOT_CONSORT_2_2, 0x26)
                (FINAL_ARIGNWSHOT_CONSORT_3_1, 0x27)
                (FINAL_ARIGNWSHOT_CONSORT_3_2, 0x28)
            );
        }
    }
    pub mod pikachu {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
                (UNIQ_ID, 0xbf)
                (KAMINARI_CLOUD_ADDRESS, 0xc0)
                (FIGHTER_CATEGORY, 0xc1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe8)
                (MOT_INHERIT, 0xe0)
                (MTRANS_SMPL_AIR, 0xe1)
                (MTRANS_SMPL_GROUND, 0xe2)
                (MTRANS_SMPL_MOTION_END, 0xe3)
                (MTRANS_SMPL_EX1, 0xe4)
                (STRANS_0, 0xe5)
                (STRANS_1, 0xe6)
                (PAUSE, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ATTACK_TARGET_LR, 0x8)
                    (ATTACK_TARGET_BASE_X, 0x9)
                    (ATTACK_TARGET_BASE_Y, 0xa)
                    (ATTACK_TARGET_OFFSET_X, 0xb)
                    (ATTACK_TARGET_OFFSET_Y, 0xc)
                    (FIX_POS_X, 0xd)
                    (FIX_POS_Y, 0xe)
                    (HIT_POS_X, 0xf)
                    (HIT_POS_Y, 0x10)
                    (REFLECT_ANGLE, 0x11)
                    (ROT_ANGLE, 0x12)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DASH_COUNT, 0x6)
                    (DASH_CLIFF_CHECK_COUNT, 0x7)
                    (ATTACK_HIT_NUM, 0x8)
                    (ATTACK_HIT_MOVE_NUM, 0x9)
                    (ATTACK_HIT_OBJECT_ID, 0xa)
                    (ATTACK_HIT_OBJECT_ID_TERM, 0x11)
                    (ATTACK_HIT_BATTLE_NUM, 0x13)
                    (REFLECT_COUNT_TOTAL, 0x14)
                    (REFLECT_COUNT_ATTACK_2, 0x15)
                    (VORTEX_TIME_COUNT, 0x16)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK_REQUEST_LOOP_DAMAGE_MOTION, 0x10)
                    (TERM, 0x13)
                    (ATTACK_HIT, 0xd)
                    (ATTACK_END_HIT, 0xe)
                    (REQUESTED_FINAL_FINISH, 0xf)
                    (HIT_ALL_OPPONENT, 0x11)
                    (OPPONETN_DEAD, 0x12)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (QUICK_ATTACK_PREV_STICK_X, 0x7)
                (QUICK_ATTACK_PREV_STICK_Y, 0x8)
                (QUICK_ATTACK_WARP_SPEED_X, 0x9)
                (QUICK_ATTACK_WARP_SPEED_Y, 0xa)
                (SKULL_BASH_CHARGE_RATE, 0x7)
                (SKULL_BASH_DEGREE, 0x8)
                (SKULL_BASH_TARGET_DEGREE, 0x9)
                (SKULL_BASH_START_DEGREE, 0xa)
                (SKULL_BASH_ATTACK_SPEED_X, 0xb)
                (FINAL_CURSOR_MUL, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (QUICK_ATTACK_COUNT, 0x5)
                (QUICK_ATTACK_MOVE_TIME_COUNTER, 0x6)
                (QUICK_ATTACK_FALL_STOP_COUNTER, 0x7)
                (QUICK_ATTACK_FLOOR_PASS_COUNTER, 0x8)
                (QUICK_ATTACK_PHASE, 0x9)
                (QUICK_ATTACK_GUIDE_EFFECT_HANDLE, 0xa)
                (SKULL_BASH_HOLD_COUNT, 0x5)
                (SKULL_BASH_WEAK_FRAME, 0x6)
                (SKULL_BASH_PREV_SITUATION, 0x7)
                (KAMINARI_DUMMY_ENTRY, 0x5)
                (KAMINARI_DUMMY_ENTRY2, 0x6)
                (KAMINARI_SITUATION, 0x7)
                (KAMINARI_COL_LOG_GROUP, 0x8)
                (FINAL_WEAPON_TASK_ID, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (QUICK_ATTACK, 0xb)
                (QUICK_ATTACK_GUIDE_EFFECT_LAST_VISIBLE, 0xc)
                (QUICK_ATTACK_END, 0xd)
                (SKULL_BASH, 0xb)
                (SKULL_BASH_FLICK, 0xc)
                (SKULL_BASH_ATTACK_TRIGGER, 0xd)
                (SKULL_BASH_BRAKE_TRIGGER, 0xe)
                (SKULL_BASH_ATTACK_POWER_MODIFY, 0xf)
                (SKULL_BASH_HIT, 0x10)
                (SKULL_BASH_CHG_SA, 0x11)
                (SKULL_BASH_AIR, 0x12)
                (SKULL_BASH_ATTACK_NO_STOP, 0x13)
                (SKULL_BASH_INHERIT_MOTION, 0x14)
                (SKULL_BASH_CALC_ATTACK_POWER, 0x15)
                (SKULL_BASH_CHARGE_LEVEL_1, 0x16)
                (SKULL_BASH_CHARGE_LEVEL_2, 0x17)
                (SKULL_BASH_CHARGE_LEVEL_3, 0x18)
                (SKULL_BASH_MISS_END_RUMBLE_2, 0x19)
                (SKULL_BASH_END, 0x1a)
                (KAMINARI, 0xb)
                (KAMINARI_GENERATE, 0xc)
                (KAMINARI_GENERATED, 0xd)
                (KAMINARI_REF_LOG_GROUP, 0xe)
                (KAMINARI_ATTACK_HIT, 0xf)
                (KAMINARI_END, 0x10)
                (FINAL, 0xb)
                (FINAL_GRAVITY_ONOFF, 0xc)
            );
        }
    }
    pub mod luigi {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_START, 0xbd)
                (SPECIAL_HI_HIT_FRAME, 0xbe)
                (SPECIAL_LW_CHARGE, 0xbf)
                (SPECIAL_LW_REMOVE, 0xc0)
                (OBAKYUMU_OBJECT_ID, 0xc1)
                (OBAKYUMU_CONNECTOR_OBJECT_ID, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe7)
                (SPECIAL_S_HOP, 0xe0)
                (SPECIAL_S_CHARGE_MELEE_NO_RANDOM, 0xe1)
                (SPECIAL_LW_BUOYANCY, 0xe2)
                (FINAL_IS_ROCKET_BELT_ATTACHED, 0xe3)
                (CRITICAL_HIT_CAMERA, 0xe4)
                (SPECIAL_S_DEBUG_DISCHARGE, 0xe5)
                (CATCH_SEARCH, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (BONUS, 0xd)
                    (REVERSE_LR, 0xe)
                );
            }
            pub mod special_s_charge {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (BONUS, 0xd)
                    (DISCHARGE, 0xe)
                    (FLASHING, 0xf)
                );
            }
            pub mod special_s_ram {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (DISCHARGE, 0xe)
                    (HIT, 0xf)
                    (BRAKE, 0x10)
                    (SET_ATTACK_POWER, 0x11)
                    (LAST_STRANS, 0x12)
                    (GROUND_CHECK, 0x13)
                );
            }
            pub mod special_s_breath {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
            pub mod special_s_end {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xf)
                    (FIRST, 0x10)
                    (STRANS_WAIT, 0x11)
                    (STRANS_FALL, 0x12)
                );
            }
            pub mod special_s_wall {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (DETACH, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x11)
                    (CRITICAL_HIT, 0x12)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (LIMIT_X_DEC, 0x7)
                    (RISE_Y, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (RISE, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (SHOOT_NUM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (RESHOOT, 0xc)
                );
            }
            pub mod air_lasso {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHOOT_PLUNGER, 0x12)
                );
            }
        }
    }
    pub mod ness {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (PHY_MAGNET_LR, 0x4c)
                (FINAL_ANGLE_ADJUST, 0x4d)
                (FINAL_ANGLE_MAX, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (FINAL_SHOOT_COUNT, 0xbd)
                (FINAL_SERIAL, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe3)
                (FINAL_START, 0xe0)
                (REFLECTOR, 0xe1)
                (REFLECTOR_BREAK, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_TIME, 0x6)
                    (STOP_Y_TIME, 0x7)
                    (NOBANG_TIME, 0x8)
                    (NEXT_STATUS, 0x9)
                    (WAIT_MTRANS_KIND, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (GENERATE_ARTICLE, 0xd)
                    (ALREADY_GENERATED, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_SITUATION, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHOOT, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xd)
                    (DIR, 0x7)
                    (UD, 0x8)
                    (ANGLE, 0x9)
                    (TARGET_ANGLE, 0xa)
                    (START_ANGLE, 0xb)
                    (DEC_ANGLE, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_TIME, 0x6)
                    (STOP_Y_TIME, 0x7)
                    (HIT_STEP, 0x8)
                    (WEAPON_ID, 0x9)
                    (NEXT_STATUS, 0xa)
                    (WAIT_MTRANS_KIND, 0xb)
                    (NUM, 0xc)
                    (GUIDE_EFFECT_HANDLE, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (ATTACK_AIR, 0xd)
                    (ATTACK_FALL_START, 0xe)
                    (LANDING_ENABLE, 0xf)
                    (THUNDER_VANISH, 0x10)
                    (REFLECT_GROUND, 0x11)
                    (CRITICAL, 0x12)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_Y_TIME, 0x6)
                    (SE_HANDLE, 0x7)
                    (EFFECT_HANDLE, 0x8)
                    (WAIT_MTRANS_KIND, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (BUTTON_RELEASE, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (ANGLE, 0x7)
                    (INTERVAL_FRAME, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SHOOT_NUM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                );
            }
            pub mod attack_s4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (REFLECT_START, 0xc)
                    (REFLECT_END, 0xd)
                );
            }
            pub mod attack_hi4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (YOYO_GROUND, 0xc)
                    (LAST_TERM_ATTACK, 0xd)
                );
            }
            pub mod attack_lw4 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (LAST_TERM_ATTACK, 0xc)
                    (TERM, 0xd)
                );
            }
        }
    }
    pub mod captain {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe2)
                (MOT_FRAME_INHERIT, 0xe0)
                (CRITICAL_HIT_CAMERA, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (CRITICAL_ATTACK_ID, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (CRITICAL, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x11)
                    (IS_CHECK_DIVE, 0x12)
                );
            }
            pub mod special_hi_throw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (LINK_EVENT_1, 0x6)
                    (LINK_EVENT_2, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (LINK_EVENT_0, 0xe)
                    (CHANGE_KINE, 0xc)
                    (FALL, 0xd)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FALCON_PUNCH_START_CHARA_DIR, 0x7)
                (FALCON_KICK_SPEED_COEFFICIENT, 0x7)
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (FALCON_PUNCH_AIR_PHASE, 0x5)
                (FALCON_PUNCH_PREV_AIR_PHASE, 0x6)
                (FALCON_PUNCH_PREV_SITUATION, 0x7)
                (FALCON_KNUCKLE_START_SITUATION, 0x5)
                (FALCON_KICK_START_SITUATION, 0x5)
                (FALCON_KICK_REDUCTION_LEFT, 0x6)
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_BLUEFALCON_TASK_ID, 0x6)
                (FINAL_COUNT, 0x7)
                (FINAL_END, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (HOGE_END, 0xc)
                (FALCON_PUNCH_START, 0xb)
                (FALCON_PUNCH_TURN, 0xc)
                (FALCON_PUNCH_CHECK_END, 0xd)
                (FALCON_PUNCH_DIR_DECIDE, 0xe)
                (FALCON_PUNCH_DIR_DECIDE_END, 0xf)
                (FALCON_PUNCH_BRAKE_FALL, 0x10)
                (FALCON_PUNCH_NORMAL_FALL, 0x11)
                (FALCON_PUNCH_GENERATE_BIRD, 0x12)
                (FALCON_PUNCH_VISIBLE_BIRD, 0x13)
                (FALCON_PUNCH_HIT, 0x14)
                (FALCON_KNUCKLE_START, 0xb)
                (FALCON_KNUCKLE_HIT, 0xc)
                (FALCON_KNUCKLE_HIT_CHECK_ONOFF, 0xd)
                (FALCON_KNUCKLE_CLIFF_FALL_ONOFF, 0xe)
                (FALCON_KNUCKLE_GRAVITY_ONOFF, 0xf)
                (FALCON_KICK_START, 0xb)
                (FALCON_KICK_SP_BRAKE, 0xc)
                (FALCON_KICK_CLIFF_CHECK, 0xd)
                (FALCON_KICK_WALL_CHECK, 0xe)
                (FALCON_KICK_FALL_ONOFF, 0xf)
                (FINAL_START, 0xb)
                (FINAL_SUCCESS, 0xc)
                (FINAL_ABS_SET, 0xd)
                (FINAL_ABS_GET, 0xe)
                (FINAL_CLEAR_SLOW, 0xf)
                (FINAL_NO_DEAD_OFF, 0x10)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x11)
                (FINAL_STEREO_FADE_OUT_START, 0x12)
                (FINAL_STEREO_FADE_IN_START, 0x13)
                (FINAL_STEREO_FADE_FLAG, 0x14)
                (FINAL_END_GROUND_CORRECT_ON, 0x15)
                (FINAL_END_GROUND_CORRECT_SET, 0x16)
                (FINAL_SUCCESS_FRAME, 0x17)
                (FINAL_END_EXIT, 0x18)
                (FINAL_END_EXIT_FINISH, 0x19)
                (FINAL_SITUATION_GROUND, 0x1a)
            );
        }
    }
    pub mod purin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe1)
                (SPECIAL_S_HOP, 0xe0)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x1b)
                    (MOVE_DIR, 0x7)
                    (RESERVE_DIR, 0x8)
                    (START_LR, 0x9)
                    (ACCEL, 0xa)
                    (COUNT, 0xb)
                    (CHARGE_COUNT, 0xc)
                    (SPEED, 0xd)
                    (SPEED_BACKUP, 0xe)
                    (PREV_ANGLE, 0xf)
                    (ANGLE, 0x10)
                    (ANGLE_NEXT, 0x11)
                    (ADD_ANGLE, 0x12)
                    (TURN_SPEED_GROUND, 0x13)
                    (SCALE_BACKUP_X, 0x14)
                    (SCALE_BACKUP_Y, 0x15)
                    (SCALE_BACKUP_Z, 0x16)
                    (MOTION_RATE, 0x17)
                    (TURN_STICK, 0x18)
                    (TURN_ROLL_DIR, 0x19)
                    (HIT_END_DEGREE_SPEED, 0x1a)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TURN, 0xa)
                    (HOLD, 0x5)
                    (HOLD_MAX, 0x6)
                    (ROLL, 0x7)
                    (ROLL_AIR, 0x8)
                    (START_TURN_FRAME, 0x9)
                    (END, 0xb)
                    (HIT_END, 0xc)
                    (SITUATION_PRE, 0xd)
                    (EFFECT_COUNT1, 0xe)
                    (EFFECT_COUNT2, 0xf)
                    (EFFECT_COUNT3, 0x10)
                    (EFFECT_COUNT4, 0x11)
                    (EFFECT_COUNT5, 0x12)
                    (EFFECT_FRAME, 0x13)
                    (ATTACK_COUNT, 0x14)
                    (ATTACK_GROUP, 0x15)
                    (LIFE, 0x16)
                    (SCALE_IDX, 0x17)
                    (STATUS_PRE, 0x18)
                    (DISP_IDX, 0x19)
                    (MOTION_KIND_GROUND, 0x1a)
                    (MOTION_KIND_AIR, 0x1b)
                    (CONTROL_RUMBLE_COUNT, 0x1c)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK_HIT, 0xc)
                    (START_TURN, 0xd)
                    (MAX_FLAG, 0xe)
                    (CHANGE_END, 0xf)
                    (CHANGE_STATUS, 0x10)
                    (FLUSHING_EFFECT_ON, 0x11)
                    (CONTINUE_MOT, 0x12)
                    (CROWN_EFFECT_ENABLE, 0x13)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x8)
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (HOLD, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SONG_EFFECT, 0xc)
                    (ATTACK_WHOLE, 0xd)
                    (CONTINUE_MOT, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ENERGY_MODE, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (CLIFF_START, 0xd)
                    (INPUT, 0xe)
                    (CHANGE_ENERGY, 0xf)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (MOTION_RATE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (ENABLE_HIT_CANCEL_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (HIT, 0xd)
                    (HIT_CANCEL_OK, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (COUNT_COMMON, 0x7)
                    (ATTACK_SCALE, 0x8)
                    (MOTION_RATE, 0x9)
                    (INIT_CAMERA_RATE_MOTION_FRAME, 0xa)
                    (INIT_SCALE, 0xb)
                    (LAST_SCALE, 0xc)
                    (TERM, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (COMMON, 0xd)
                    (SET_MOTION_RATE, 0xe)
                    (INIT_CAMERA_RATE, 0xf)
                );
            }
        }
    }
    pub mod peach {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x4d)
                (JUMP_START_Y_FROM_WATER, 0x4c)
            );
            make_work_ids!(
                Int,
                Instance,
                (SMASH_ITEM, 0xbd)
                (KINOPIOSPORE_SHOOT_NUM, 0xbe)
                (WINDOW_ID, 0xbf)
                (WINDOW_EFFECT_ID, 0xc0)
                (WINDOW_LEFT_EFFECT_ID, 0xc1)
                (WINDOW_RIGHT_EFFECT_ID, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_N_RAISE, 0xe0)
                (UNIQ_FLOAT, 0xe1)
                (UNIQ_FLOAT_RAY_CHECK, 0xe2)
                (JUMP_FROM_WATER, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SHIELD_LR, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (COLLISION_SHIELD_GROUP, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHIELD_HIT, 0xd)
                    (GENERATE_ARTICLE, 0xe)
                );
            }
            pub mod special_s_jump {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (TOUCH_SEARCH, 0xe)
                    (START_CONTROLLER_MOVE, 0xf)
                    (DONE_CONTROLLER_MOVE, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (ENABLE_UNIQ, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLICK_START, 0xd)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (ENABLE_UNIQ, 0x8)
                    (PARASOL_LIMIT_TIME_COUNTER, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOVE_TRANS, 0xd)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (UNIQ_ITEM_KIND, 0x8)
                    (IS_DAIKON_GENERATABLE, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIX_RAND, 0xd)
                );
            }
            pub mod uniq {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (WORK_INT_START, 0x7)
                    (WORK_INT_FLOAT_FRAME, 0x8)
                    (WORK_INT_ENABLE_UNIQ, 0x9)
                    (WORK_INT_MTRANS, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLAG_START, 0xc)
                    (FLAG_ENABLE_LANDING, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TRANSN_ROT_SPEED_X, 0x7)
                    (TRANSN_ROT_SPEED_Y, 0x8)
                    (TRANSN_ROT_SPEED_Z, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FLOAT_ITEM_PEACH_COUNTER, 0x8)
                    (FLOAT_ITEM_PEACH_INTERVAL_COUNTER, 0x9)
                    (SE_HANDLE, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (AFFECT_ENABLE, 0xd)
                    (OUT_FRAME, 0xe)
                    (IS_ROCKET_BELT_ATTACHED, 0xf)
                    (TERM, 0x10)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (END, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (MOT_KIND, 0x5)
                (MOT_AIR_KIND, 0x6)
                (MTRANS, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (MOTION_TRANSITION_TERM_ID_MOT_END, 0xc)
            );
        }
    }
    pub mod koopa {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4b)
                (TERM, 0x4e)
                (BREATH_SPEED_MUL, 0x4c)
                (BREATH_SCALE, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (PREV_BREATH_KIND, 0xbd)
                (BREATH_NEAR_COUNT, 0xbe)
                (BREATH_NEAR_FRAME, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ST_INIT, 0xe0)
                (THROW_NO_CHANGE, 0xe1)
                (SP_HI_LAND, 0xe2)
                (MTRANS_SMPL_AIR, 0xe3)
                (MTRANS_SMPL_GROUND, 0xe4)
                (MTRANS_SMPL_MOTION_END, 0xe5)
                (MTRANS_SMPL_EX1, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod breath {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (GENE_ANGLE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MAIN_COUNT, 0x5)
                    (LOOP_COUNT, 0x6)
                    (STEP, 0x7)
                    (PREV_STEP, 0x8)
                    (GENERATE_COUNT, 0x9)
                    (PREV_GENERATE_KIND, 0xa)
                    (SE1_ID, 0xb)
                    (SE2_ID, 0xc)
                    (SE1_HANDLE, 0xd)
                    (SE2_HANDLE, 0xe)
                    (HEAD_NODE, 0xf)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_START, 0xc)
                    (CONTINUE, 0xd)
                    (CONTINUE_END, 0xe)
                    (GENE_BREATH, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (JUMP_RESTART_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (F, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLAG1, 0xc)
                    (FLAG1SET, 0xd)
                    (FLAG2, 0xe)
                    (FLAG3, 0xf)
                    (FLAG4, 0x10)
                    (MOT_RESTART, 0x11)
                    (BONUS, 0x12)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLAG1, 0xc)
                    (FLAG2, 0xd)
                    (FROM_GR, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (CAPTURED_STICK_X, 0x8)
                    (CAPTURED_DAMAGE, 0x9)
                    (START_Y, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CAPTURED_TASK_ID, 0xe)
                    (CAPTURE_FRAME, 0xf)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xf)
                    (CAPTURE, 0x10)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHANGE_WAIT_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (WAIT_CHANGE, 0xc)
                    (GENERATE_KOOPAG, 0xd)
                    (AIR, 0xe)
                );
            }
        }
    }
    pub mod sheik {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (NEEDLE_COUNT, 0xbd)
                (FINAL_HIT_NUM, 0xbe)
                (FINAL_TARGET_OBJECT_ID_0, 0xbf)
                (FINAL_TARGET_OBJECT_ID_LAST, 0xc6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe8)
                (CHARGE_MAX, 0xe0)
                (MTRANS_WAIT_AIR, 0xe1)
                (MTRANS_WAIT_GROUND, 0xe2)
                (STRANS_GROUND, 0xe3)
                (STRANS_TEMP_0, 0xe4)
                (DISABLE_AIR_SPECIAL_LW, 0xe5)
                (FINAL_HIT, 0xe6)
                (SPECIAL_N_LANDING_DISGUISE, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_COUNT, 0x5)
                    (CANCEL_STATUS, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (EFFECT, 0xd)
                    (INTERRUPT, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x8)
                    (EFFECT_HANDLE, 0x9)
                    (POWERUP_OBJECT_ID, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FAIL, 0x12)
                    (SKIP_HOLD, 0x13)
                    (THROW, 0x14)
                    (INHERIT_SPEED, 0x15)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xc)
                    (STICK_X, 0x7)
                    (STICK_Y, 0x8)
                    (SPEED_X, 0x9)
                    (SPEED_Y, 0xa)
                    (SPEED_G, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x5)
                    (XLU_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FALL, 0xd)
                    (MOVE_END, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WALL_JUMP_NUM, 0x5)
                    (RETURN_TO_ATTACK_NUM, 0x6)
                    (FRAME, 0x7)
                    (TURN_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (RETURN, 0xc)
                    (ACCEL, 0xd)
                    (LANDING_NORMAL, 0xe)
                    (TOUCH_WALL, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (HIT_DISTANCE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x7)
                    (DASH_COUNT, 0x5)
                    (OPPONENT_NUM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FINISH, 0xc)
                    (HIT_ALL_OPPONENT, 0xd)
                );
            }
        }
    }
    pub mod zelda {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (PHANTOM_EFFECT_HANDLE, 0xbd)
                (PHANTOM_SOUND_HANDLE, 0xbe)
                (RUMBLE_HIT_KIND_1, 0xbf)
                (RUMBLE_HIT_KIND_2, 0xc0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe5)
                (REFLECTOR, 0xe0)
                (REFLECTOR_BREAK, 0xe1)
                (ATTACK_AIR_TOE, 0xe2)
                (SPECIAL_S_DISABLE_GRAVITY, 0xe3)
                (SPECIAL_LW_BUILD_PHANTOM, 0xe4)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x6)
                    (STOP_Y, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (REFLECTOR_START, 0xd)
                    (REFLECTOR_END, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x8)
                    (STOP_TIME, 0x5)
                    (STOP_Y, 0x6)
                    (NO_BANG, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FLAG_1, 0xd)
                    (FLAG_2, 0xe)
                    (DISABLE_GRAVITY, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x8)
                    (FRAME, 0x5)
                    (START_SITUATION, 0x6)
                    (CLIFF_CHECK, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FLAG_1, 0xd)
                    (END, 0xe)
                    (CHECK_GROUND, 0xf)
                    (DIVE, 0x10)
                    (CONTROL, 0x11)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (CHARGE_LEVEL, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_CHARGE, 0xc)
                    (CHARGE_SKIP, 0xd)
                    (FAIL, 0xe)
                    (MAX, 0xf)
                    (ATTACK_PRECEDE, 0x10)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOVE_POS_X, 0x7)
                    (TARGET_DISTANCE, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x1f)
                    (TRIFORCE_LIFE, 0x5)
                    (TARGET_OBJECT_ID, 0x6)
                    (HIT_NUM, 0x7)
                    (HIT_ID0, 0x8)
                    (HIT_ID1, 0x9)
                    (HIT_ID2, 0xa)
                    (HIT_ID3, 0xb)
                    (HIT_ID4, 0xc)
                    (HIT_ID5, 0xd)
                    (HIT_ID6, 0xe)
                    (HIT_GROUP0, 0xf)
                    (HIT_GROUP1, 0x10)
                    (HIT_GROUP2, 0x11)
                    (HIT_GROUP3, 0x12)
                    (HIT_GROUP4, 0x13)
                    (HIT_GROUP5, 0x14)
                    (HIT_GROUP6, 0x15)
                    (HIT_NO0, 0x16)
                    (HIT_NO1, 0x17)
                    (HIT_NO2, 0x18)
                    (HIT_NO3, 0x19)
                    (HIT_NO4, 0x1a)
                    (HIT_NO5, 0x1b)
                    (HIT_NO6, 0x1c)
                    (ZOOM_FRAME, 0x1d)
                    (ZOOM_NO, 0x1e)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xc)
                    (SEAL, 0xd)
                    (FINISH, 0xe)
                    (MOT_CHANGE, 0xf)
                    (SHOOT, 0x10)
                    (SEARCH_END, 0x11)
                );
            }
        }
    }
    pub mod mariod {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4c)
                (ATTACK_MUL, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbe)
                (SPECIAL_LW_REMOVE, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe5)
                (SPECIAL_S_HOP, 0xe0)
                (SPECIAL_S_REFLECTOR, 0xe1)
                (SEPCIAL_S_REFLECTOR_BREAK, 0xe2)
                (SPECIAL_LW_BUOYANCY, 0xe3)
                (SETUP_ADJUST_PARAM, 0xe4)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (PRE_START, 0x6)
                    (REFLECT_MOTION_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CONTINUE, 0xc)
                    (SPECIAL_FALL, 0xd)
                    (HOP, 0xe)
                    (REFLECT_SKIP_MOTION, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (LIMIT_X_DEC, 0x7)
                    (RISE_Y, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MTRANS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (RISE, 0xe)
                    (RISE_PRECEDE, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
        }
    }
    pub mod falco {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POSTURE_LOG_POS_X_START, 0x4c)
                (POSTURE_LOG_POS_X_0, 0x4c)
                (POSTURE_LOG_POS_X_1, 0x4d)
                (POSTURE_LOG_POS_X_2, 0x4e)
                (POSTURE_LOG_POS_X_3, 0x4f)
                (POSTURE_LOG_POS_Y_START, 0x50)
                (POSTURE_LOG_POS_Y_0, 0x50)
                (POSTURE_LOG_POS_Y_1, 0x51)
                (POSTURE_LOG_POS_Y_2, 0x52)
                (POSTURE_LOG_POS_Y_3, 0x53)
                (POSTURE_LOG_POS_Z_START, 0x54)
                (POSTURE_LOG_POS_Z_0, 0x54)
                (POSTURE_LOG_POS_Z_1, 0x55)
                (POSTURE_LOG_POS_Z_2, 0x56)
                (POSTURE_LOG_POS_Z_3, 0x57)
                (POSTURE_LOG_ROT_X_START, 0x58)
                (POSTURE_LOG_ROT_X_0, 0x58)
                (POSTURE_LOG_ROT_X_1, 0x59)
                (POSTURE_LOG_ROT_X_2, 0x5a)
                (POSTURE_LOG_ROT_X_3, 0x5b)
                (FIRE_DECIDE_STICK_X, 0x5c)
                (FIRE_DECIDE_STICK_Y, 0x5d)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe4)
                (REFLECTOR, 0xe0)
                (REFLECTOR_BREAK, 0xe1)
                (ILLUSION_LANDING, 0xe2)
                (ILLUSION_FALL_LANDING, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
                (FINAL_FOV_RATE_SCENE_ATTACK, 0xb)
                (FINAL_OWNER_SCALE, 0xc)
                (FINAL_INIT_SCALE, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_COUNT, 0x6)
                (FINAL_END, 0x7)
                (FINAL_ARIGNWSHOT_TYPE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_TERM, 0x28)
                (FINAL_SUCCESS, 0xc)
                (FINAL_RESERVE_CLEAR_SLOW, 0xd)
                (FINAL_ABS_SET, 0xe)
                (FINAL_ABS_GET, 0xf)
                (FINAL_ABS_HIT, 0x10)
                (FINAL_CLEAR_SLOW, 0x11)
                (FINAL_NO_DEAD_OFF, 0x12)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x13)
                (FINAL_END_GROUND_CORRECT_ON, 0x14)
                (FINAL_END_GROUND_CORRECT_SET, 0x15)
                (FINAL_SUCCESS_FRAME, 0x16)
                (FINAL_MOT_CHANGE, 0x17)
                (FINAL_ZOOM_START, 0x18)
                (FINAL_CLEAR_ATTACK, 0x19)
                (FINAL_FOV_CHANGE, 0x1a)
                (FINAL_START_CAPTION, 0x1b)
                (FINAL_END_CAPTION, 0x1c)
                (FINAL_SPECIAL_CAPTION, 0x1d)
                (FINAL_END_EXIT, 0x1e)
                (FINAL_END_EXIT_FINISH, 0x1f)
                (FINAL_ARIGNWSHOT_SELF_1, 0x20)
                (FINAL_ARIGNWSHOT_SELF_2, 0x21)
                (FINAL_ARIGNWSHOT_CONSORT_1_1, 0x22)
                (FINAL_ARIGNWSHOT_CONSORT_1_2, 0x23)
                (FINAL_ARIGNWSHOT_CONSORT_2_1, 0x24)
                (FINAL_ARIGNWSHOT_CONSORT_2_2, 0x25)
                (FINAL_ARIGNWSHOT_CONSORT_3_1, 0x26)
                (FINAL_ARIGNWSHOT_CONSORT_3_2, 0x27)
            );
        }
    }
    pub mod marth {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe1)
                (SPECIAL_S_HOP, 0xe0)
            );
        }
        pub mod status {
            use super::*;
            pub mod result {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TWIST_SWORD, 0xc)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_COUNT, 0x5)
                    (CHARGE_COUNT_MAX, 0x6)
                    (SITUATION_PREV, 0x7)
                    (END_MOTION, 0x8)
                    (END_AIR_MOTION, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (CHARGE_MAX, 0xd)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (CHANGE_STATUS, 0x7)
                    (SITUATION_PREV, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (INPUT_CHECK, 0xd)
                    (INPUT_SUCCESS, 0xe)
                    (INPUT_FAILURE, 0xf)
                    (MOTION_CHANGE_ENABLE, 0x10)
                    (INPUT_HI, 0x11)
                    (INPUT_LW, 0x12)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (STICK_CONTROL_ANGLE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TRANS_MOVE, 0xc)
                    (SPECIAL_HI_SET_LR, 0xd)
                    (KINETIC_CHANGE, 0xe)
                    (FREE_FALL, 0xf)
                    (FREE_FALL_CHK, 0x10)
                    (TRANS_MOVE_SET_ANGLE, 0x11)
                    (STICK_CONTROL_ANGLE_CHK_END, 0x12)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (APPLY_POWERUP_MOTION_RATE, 0x10)
                    (APPLIED_POWERUP_MOTION_RATE, 0x11)
                    (IS_ATTACK_ENEMY, 0x12)
                    (SPECIAL_EFFECT, 0x13)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x20)
                    (POS_X, 0x7)
                    (POS_X_01, 0x8)
                    (POS_X_02, 0x9)
                    (POS_X_03, 0xa)
                    (POS_X_04, 0xb)
                    (POS_X_05, 0xc)
                    (POS_X_06, 0xd)
                    (POS_X_07, 0xe)
                    (POS_Y, 0xf)
                    (POS_Y_01, 0x10)
                    (POS_Y_02, 0x11)
                    (POS_Y_03, 0x12)
                    (POS_Y_04, 0x13)
                    (POS_Y_05, 0x14)
                    (POS_Y_06, 0x15)
                    (POS_Y_07, 0x16)
                    (POS_Z, 0x17)
                    (POS_Z_01, 0x18)
                    (POS_Z_02, 0x19)
                    (POS_Z_03, 0x1a)
                    (POS_Z_04, 0x1b)
                    (POS_Z_05, 0x1c)
                    (POS_Z_06, 0x1d)
                    (POS_Z_07, 0x1e)
                    (SCALE, 0x1f)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (DASH_COUNT, 0x7)
                    (SITUATION_PREV, 0x8)
                    (INFO_TASK_ID, 0x9)
                    (INFO_TASK_ID_01, 0xa)
                    (INFO_TASK_ID_02, 0xb)
                    (INFO_TASK_ID_03, 0xc)
                    (INFO_TASK_ID_04, 0xd)
                    (INFO_TASK_ID_05, 0xe)
                    (INFO_TASK_ID_06, 0xf)
                    (INFO_TASK_ID_07, 0x10)
                    (INFO_DISP_COUNT, 0x11)
                    (INFO_DISP_COUNT_01, 0x12)
                    (INFO_DISP_COUNT_02, 0x13)
                    (INFO_DISP_COUNT_03, 0x14)
                    (INFO_DISP_COUNT_04, 0x15)
                    (INFO_DISP_COUNT_05, 0x16)
                    (INFO_DISP_COUNT_06, 0x17)
                    (INFO_DISP_COUNT_07, 0x18)
                    (INFO_NUM, 0x19)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (DASH_HIT, 0xd)
                    (END_HIT, 0xe)
                );
            }
        }
    }
    pub mod ganon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe1)
                (MOT_FRAME_INHERIT, 0xe0)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (IGNORE_CRITICAL_ATTACK_ID, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (CRITICAL, 0x21)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x11)
                    (IS_CHECK_DIVE, 0x12)
                    (TERM, 0x13)
                );
            }
            pub mod special_hi_throw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x11)
                    (CHANGE_KINE, 0x12)
                    (FALL, 0x13)
                    (TERM, 0x14)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (GANON_PUNCH_START_CHARA_DIR, 0x7)
                (EXPLOSION_AIR_SPEED_X, 0x7)
                (EXPLOSION_AIR_SPEED_Y, 0x8)
                (GANON_KICK_SPEED_COEFFICIENT, 0x7)
                (GANON_KICK_START_LR, 0x8)
                (GANON_KICK_SPEED, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (GANON_PUNCH_AIR_PHASE, 0x5)
                (GANON_PUNCH_PREV_AIR_PHASE, 0x6)
                (GANON_PUNCH_PREV_SITUATION, 0x7)
                (EXPLOSION_START_SITUATION, 0xe)
                (EXPLOSION_PHASE, 0xf)
                (EXPLOSION_FRAME, 0x10)
                (EXPLOSION_FALL_SETTING, 0x11)
                (EXPLOSION_PREV_FALL_SETTING, 0x12)
                (EXPLOSION_PADDING, 0x13)
                (EXPLOSION_TARGET_TASK_ID, 0x14)
                (GANON_KICK_START_SITUATION, 0x5)
                (GANON_KICK_END_SITUATION, 0x6)
                (GANON_KICK_REDUCTION_LEFT, 0x7)
                (BEAST_BEAST_TASK_ID, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (GANON_PUNCH_START, 0xb)
                (GANON_PUNCH_TURN, 0xc)
                (GANON_PUNCH_CHECK_END, 0xd)
                (GANON_PUNCH_DIR_DECIDE, 0xe)
                (GANON_PUNCH_DIR_DECIDE_END, 0xf)
                (GANON_PUNCH_BRAKE_FALL, 0x10)
                (GANON_PUNCH_NORMAL_FALL, 0x11)
                (EXPLOSION_START, 0xb)
                (EXPLOSION_CLIFF_FALL_ONOFF, 0xc)
                (EXPLOSION_GRAVITY_ONOFF, 0xd)
                (EXPLOSION_PHASE_NEXT, 0xe)
                (EXPLOSION_TRANS_TO_CATCH, 0xf)
                (EXPLOSION_TRANS_TO_AIR_CATCH, 0x10)
                (EXPLOSION_SET_THROW_WORK, 0x11)
                (EXPLOSION_SET_DAMAGE, 0x12)
                (EXPLOSION_SET_FALL, 0x13)
                (EXPLOSION_SET_FALL_CHECKED, 0x14)
                (EXPLOSION_GET_TARGET_TASK_ID, 0x15)
                (GANON_KICK_START, 0xb)
                (GANON_KICK_SP_BRAKE, 0xc)
                (GANON_KICK_CLIFF_CHECK, 0xd)
                (GANON_KICK_WALL_CHECK, 0xe)
                (GANON_KICK_FALL_ONOFF, 0xf)
                (BEAST_START, 0xb)
                (BEAST_FINAL_AURA, 0xc)
                (BEAST_FINAL_AURA_CHECKED, 0xd)
                (BEAST_STEPPING, 0xe)
                (BEAST_STEPPING_CHECKED, 0xf)
                (BEAST_DASH, 0x10)
                (BEAST_DASH_CHECKED, 0x11)
                (BEAST_END, 0x12)
                (BEAST_END_FINAL, 0x13)
            );
        }
    }
    pub mod mewtwo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4b)
                (TERM, 0x4f)
                (THROW_JOINT_POS_X, 0x4c)
                (THROW_JOINT_POS_Y, 0x4d)
                (THROW_JOINT_POS_Z, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (SHADOWBALL_CHARGE_FRAME, 0xbd)
                (PREV_SHADOWBALL_CHARGE_FRAME, 0xbe)
                (EF_ID_SHADOWBALL_MAX_L, 0xbf)
                (EF_ID_SHADOWBALL_MAX_R, 0xc0)
                (GROUND_MOT, 0xc1)
                (AIR_MOT, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHADOWBALL_HAD, 0xe0)
                (MOT_INHERIT, 0xe1)
                (HAVE_OFFSET, 0xe2)
                (SPECIAL_S_BUOYANCY, 0xe3)
                (REFLECT, 0xe4)
                (REFLECTOR_BREAK, 0xe5)
                (SET_THROW_POS, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (THROWN_POS_OFFSET_X, 0x7)
                    (THROWN_POS_OFFSET_Y, 0x8)
                    (THROWN_POS_ADD_TOTAL_Y, 0x9)
                    (THROWN_POS_ADD_SPEED_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0xa)
                    (TARGET_OBJECT_ID, 0x5)
                    (THROWN_HIT_GROUP, 0x6)
                    (THROWN_HIT_NO, 0x7)
                    (MOTION_KIND, 0x8)
                    (MOTION_KIND_AIR, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xc)
                    (THROW, 0xd)
                    (ACCEL_NORMAL, 0xe)
                    (GRAVITY_NORMAL, 0xf)
                    (BACK_GRAVITY, 0x10)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x9)
                    (FRAME, 0x5)
                    (START_SITUATION, 0x6)
                    (CLIFF_CHECK, 0x7)
                    (MOVE_WAIT_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FLAG_1, 0xd)
                    (END, 0xe)
                    (CHECK_GROUND, 0xf)
                    (MOVE_WAIT, 0x10)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FINAL_CHANGE, 0xc)
                    (FINAL_END, 0xd)
                    (FINAL_END_EVENT, 0xe)
                );
            }
        }
    }
    pub mod roy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
                (SPECIAL_HI_CLIFF_NUM, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe1)
                (SPECIAL_S_HOP, 0xe0)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (CHARGE_COUNT, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_COUNT_MAX, 0x5)
                    (SITUATION_PREV, 0x6)
                    (CHARGE_SE_NO, 0x7)
                    (CHARGE_SE_HANDLE, 0x8)
                    (READY_LEVEL, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (CHARGE_MAX, 0xd)
                    (CHARGE_MAX_DAMAGE, 0xe)
                    (AFTER_TURN, 0xf)
                    (MAX, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (CHANGE_STATUS, 0x7)
                    (SITUATION_PREV, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (INPUT_CHECK, 0xd)
                    (INPUT_SUCCESS, 0xe)
                    (INPUT_FAILURE, 0xf)
                    (MOTION_CHANGE_ENABLE, 0x10)
                    (INPUT_HI, 0x11)
                    (INPUT_LW, 0x12)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (STICK_CONTROL_ANGLE, 0x7)
                    (START_CHROM, 0x6)
                    (TERM_CHROM, 0xe)
                    (SWORD_SLIDE_X_SPEED, 0x7)
                    (SWORD_SLIDE_X_OFFSET, 0x8)
                    (SWORD_SLIDE_X_OFFSET_MAX, 0x9)
                    (JUMP_MUL_2, 0xa)
                    (PREVIOUS_MOTION_FRAME, 0xb)
                    (SLIDEGAP_RECOVER_FRAME_INIT, 0xc)
                    (SLIDEGAP_RECOVER_FRAME, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HIT_OBJECT_NUM, 0x5)
                    (HIT_OBJECT_ID, 0x6)
                    (HIT_OBJECT_ID_MAX, 0xd)
                    (SITUATION_PREV, 0x5)
                    (RECOVER_SLIDEGAP_INITIAL_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TRANS_MOVE, 0xc)
                    (SPECIAL_HI_SET_LR, 0xd)
                    (KINETIC_CHANGE, 0xe)
                    (FREE_FALL, 0xf)
                    (FREE_FALL_CHK, 0x10)
                    (TRANS_MOVE_SET_ANGLE, 0x11)
                    (STICK_CONTROL_ANGLE_CHK_END, 0x12)
                    (CONTINUE_MOT, 0xc)
                    (TRANS_JUMP, 0xd)
                    (CONTROL, 0xe)
                    (KINETIC_CHANGE_CHROM, 0xf)
                    (JUMP_START_AIR, 0x10)
                    (SLIDEGAP_RECOVER_DONE, 0x11)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (APPLY_POWERUP_MOTION_RATE, 0x10)
                    (APPLIED_POWERUP_MOTION_RATE, 0x11)
                    (IS_ATTACK_ENEMY, 0x12)
                    (SPECIAL_EFFECT, 0x13)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x20)
                    (POS_X, 0x7)
                    (POS_X_01, 0x8)
                    (POS_X_02, 0x9)
                    (POS_X_03, 0xa)
                    (POS_X_04, 0xb)
                    (POS_X_05, 0xc)
                    (POS_X_06, 0xd)
                    (POS_X_07, 0xe)
                    (POS_Y, 0xf)
                    (POS_Y_01, 0x10)
                    (POS_Y_02, 0x11)
                    (POS_Y_03, 0x12)
                    (POS_Y_04, 0x13)
                    (POS_Y_05, 0x14)
                    (POS_Y_06, 0x15)
                    (POS_Y_07, 0x16)
                    (POS_Z, 0x17)
                    (POS_Z_01, 0x18)
                    (POS_Z_02, 0x19)
                    (POS_Z_03, 0x1a)
                    (POS_Z_04, 0x1b)
                    (POS_Z_05, 0x1c)
                    (POS_Z_06, 0x1d)
                    (POS_Z_07, 0x1e)
                    (SCALE, 0x1f)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (DASH_COUNT, 0x6)
                    (INFO_TASK_ID, 0x7)
                    (INFO_TASK_ID_01, 0x8)
                    (INFO_TASK_ID_02, 0x9)
                    (INFO_TASK_ID_03, 0xa)
                    (INFO_TASK_ID_04, 0xb)
                    (INFO_TASK_ID_05, 0xc)
                    (INFO_TASK_ID_06, 0xd)
                    (INFO_TASK_ID_07, 0xe)
                    (INFO_DISP_COUNT, 0xf)
                    (INFO_DISP_COUNT_01, 0x10)
                    (INFO_DISP_COUNT_02, 0x11)
                    (INFO_DISP_COUNT_03, 0x12)
                    (INFO_DISP_COUNT_04, 0x13)
                    (INFO_DISP_COUNT_05, 0x14)
                    (INFO_DISP_COUNT_06, 0x15)
                    (INFO_DISP_COUNT_07, 0x16)
                    (INFO_NUM, 0x17)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (REMOVE_FINAL_AURA, 0xc)
                    (TO_ATTACK, 0xd)
                    (FINISH_HIT, 0xe)
                    (FINISH_ABS_HIT, 0xf)
                    (HIT_ALL_OPPONENT, 0x10)
                    (SET_CAMERA_TARGET, 0x11)
                );
            }
        }
    }
    pub mod gamewatch {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_LW_GAUGE, 0x4c)
                (SPECIAL_LW_ATTACK, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (NORMAL_WEAPON_KIND, 0xbd)
                (SPECIAL_N_KIND_0, 0xbe)
                (SPECIAL_N_KIND_1, 0xbf)
                (SPECIAL_N_FLYING_OBJECT_KIND, 0xc0)
                (SPECIAL_S_PREV_KIND, 0xc1)
                (SPECIAL_S_KIND, 0xc2)
                (SPECIAL_S_TABEMONO_COUNT, 0xc3)
                (SPECIAL_S_TABEMONO_FRAME, 0xc4)
                (SPECIAL_S_PANEL_7_INVALID_FRAME, 0xc5)
                (STOCK_ICON_STATE, 0xc6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe8)
                (CHARGE_MAX, 0xe0)
                (SPECIAL_S_HIT_TABEMONO, 0xe1)
                (SPECIAL_HI, 0xe2)
                (SPECIAL_LW_INHERIT_SPEED, 0xe3)
                (FINAL_ATTACK, 0xe4)
                (FINAL_WATER, 0xe5)
                (REFLECTOR, 0xe6)
                (REFLECTOR_BREAK, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (LOOP_COUNT, 0x5)
                    (TRIGGER_COUNT, 0x6)
                    (MTRANS, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (SHOOT, 0xd)
                    (RAPID_CHECK, 0xe)
                    (LOOP_CHECK, 0xf)
                    (BUTTON_RELEASE, 0x10)
                    (COUNT_ENABLE, 0x11)
                    (COUNT_CHECK, 0x12)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (DAMAGE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FIX_PANEL, 0xd)
                    (NO_HIT_TABEMONO, 0xe)
                    (HIT_TABEMONO, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_AIR_KIND, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (PARACHUTE_OPEN, 0xc)
                    (DECIDE_DIRECTION, 0xd)
                    (LANDING_ENABLE, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xa)
                    (LR, 0x7)
                    (TURN_FRAME, 0x8)
                    (ATTACK, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WAIT_FRAME, 0x5)
                    (REFLECT_COUNT, 0x6)
                    (OIL_FRAME_1, 0x7)
                    (OIL_FRAME_2, 0x8)
                    (OIL_FRAME_3, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (BUTTON_RELEASE, 0xd)
                    (ABSORB_ENABLE, 0xe)
                    (ABSORB_HOLD, 0xf)
                    (BUCKET, 0x10)
                    (CATCH, 0x11)
                    (REFLECT, 0x12)
                    (REFLECT_BREAK, 0x13)
                    (LOOP, 0x14)
                    (SE_PLAYED, 0x15)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                );
            }
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (STOCK_ICON_POS_X, 0x8)
                    (STOCK_ICON_POS_Y, 0x9)
                    (STOCK_ICON_POS_Z, 0xa)
                    (STOCK_ICON_ROTATE, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (STOCK_ICON_STATE, 0xe)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (TERM, 0x12)
                    (SET_STOCK_ICON, 0xf)
                    (SHOW_STOCK_ICON, 0x10)
                    (VISIBLE_STOCK_ICON, 0x11)
                );
            }
        }
    }
    pub mod metaknight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe4)
                (SPECIAL_S_HOP, 0xe0)
                (SPECIAL_HI_GLIDE, 0xe1)
                (WING_FOLD, 0xe2)
                (WING_LOOP, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n_spin {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (GROUND_EFFECT_COUNTER, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BUTTON_UNABLE_COUNTER, 0x8)
                    (BUTTON_HOP_COUNT, 0x9)
                    (START_SE, 0xa)
                    (START_SE_COUNTER, 0xb)
                    (BUTTON_ATTACK_COUNTER, 0xc)
                    (EFFECT_START_FRAME, 0xd)
                    (EFFECT_HANDLE, 0xe)
                    (EFFECT_FRAME, 0xf)
                    (EFFECT_REMOVE_FRAME, 0x10)
                    (ATTACK_ID_FRAME, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (BUTTON_SPECIAL_ON, 0xd)
                    (EFFECT_ON, 0xe)
                    (EFFECT_REMOVE, 0xf)
                    (ADD_ATTACK_ON, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (HIT, 0xd)
                    (GUARD_OR_INVINCIBLE, 0xe)
                );
            }
            pub mod special_s_end {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (ROT_COMP_FRAME, 0x8)
                    (TERM, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SITUATION_AIR, 0xf)
                );
            }
            pub mod special_s_rush {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x9)
                    (HIT_FRAME, 0xa)
                    (GURAD_HIT_FRAME, 0xb)
                    (GUARD_BRAKE_COUNT, 0xc)
                );
            }
            pub mod special_lw_start {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOTION_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FREE_MOVE_COUNT, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ADVANCE_STATUS, 0xd)
                    (VIS_OFF, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xf)
                );
            }
            pub mod special_lw_attack {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOVE_DISTANCE, 0x7)
                    (RIGHT_EDGE_DISTANCE_X, 0x8)
                    (LEFT_EDGE_DISTANCE_X, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ARTICLE_MOT_KIND, 0x8)
                    (ARTICLE_MOT_AIR_KIND, 0x9)
                    (SITUATION_KIND_PREV, 0xa)
                    (SITUATION_KIND, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SITUATION_CHANGE, 0xd)
                    (NO_HOP, 0xe)
                    (HIT, 0xf)
                    (FB, 0x10)
                    (STOP_X, 0x11)
                );
            }
            pub mod special_lw_end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (VIS_WING, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_START, 0xd)
                    (CONTINUE_MOT, 0xe)
                );
            }
            pub mod special_hi_loop {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (ENABLE_END, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_LR, 0x7)
                    (TARGET_BASE_POS_X, 0x8)
                    (TARGET_BASE_POS_Y, 0x9)
                    (TARGET_OFFSET_X, 0xa)
                    (TARGET_OFFSET_Y, 0xb)
                    (TARGET_POS_X, 0xc)
                    (TARGET_POS_Y, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FINAL_HIT_NUM, 0x8)
                    (FINAL_HIT_SUM, 0x9)
                    (TARGET_ID_START, 0xa)
                    (TARGET_ID_END, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TO_JUMP, 0xd)
                    (ATTACK_HIT, 0xe)
                    (ATTACK_HIT_LINK, 0xf)
                    (ATTACK_END, 0x10)
                    (ATTACK_END_HIT, 0x11)
                    (ENABLE_TRANS, 0x12)
                    (ENABLE_TARGET_MOTION_RATE, 0x13)
                );
            }
            pub mod final__hit_wait {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (ADVANCE_COUNTER, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GALLERY_EXIST, 0xd)
                );
            }
            pub mod final__attack_gallery {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (ATTACK_INTERVAL_COUNTER, 0x8)
                    (TARGET_START, 0x9)
                    (TARGET_END, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GALLERY_EXIST, 0xd)
                    (ADVANCE, 0xe)
                );
            }
            pub mod final__end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (GALLERY_EXIST, 0xd)
                    (ATTACK, 0xe)
                    (TERM, 0xf)
                );
            }
            make_work_ids!(
                Int,
                Status,
                (MOT_KIND, 0x5)
                (MOT_AIR_KIND, 0x6)
                (MTRANS, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xd)
                (MOTION_TRANSITION_TERM_ID_MOT_END, 0xc)
            );
        }
    }
    pub mod pit {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x50)
                (SPECIAL_LW_SHIELD, 0x4c)
                (SPECIAL_LW_SHIELD_DAMAGE, 0x4d)
                (SPECIAL_LW_SHIELD_LR, 0x4e)
                (SPECIAL_LW_SHIELD_HIT_STOP_FRAME, 0x4f)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_SE_HANDLE, 0xbe)
                (REFLECTOR_GROUP, 0xbf)
                (SPECIAL_S_REFLECTOR_STOP_FRAME, 0xc0)
                (SPECIAL_LW_NO_SHIELD_FRAME, 0xc1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_LW_REFLECTOR, 0xe0)
                (REFLECTOR_BREAK, 0xe1)
                (HAVE_GENESISSET, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CHARGE, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (DIR_S, 0xd)
                );
            }
            pub mod special_n_charge {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CHARGE, 0x5)
                    (MOTION, 0x6)
                    (MOTION_AIR, 0x7)
                    (BOW_MOTION, 0x8)
                    (BOW_MOTION_AIR, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (DIR_S, 0xd)
                    (CHARGE_MAX, 0xe)
                );
            }
            pub mod special_n_shoot {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CHARGE, 0x5)
                    (MOTION, 0x6)
                    (MOTION_AIR, 0x7)
                    (BOW_MOTION, 0x8)
                    (BOW_MOTION_AIR, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (DIR_S, 0xd)
                    (CHARGE_MAX, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_SITUATION, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xc)
                    (HIT_CHECK_ONOFF, 0xd)
                    (CLIFF_FALL_ONOFF, 0xe)
                    (GRAVITY_ONOFF, 0xf)
                    (MOVE_FRONT, 0x10)
                    (APPLIED_POWERUP, 0x11)
                    (MTRANS_AIR_UNABLE, 0x12)
                );
            }
            pub mod special_s_end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (STOP_Y_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                );
            }
            pub mod special_hi_rush {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                    (BRAKE_X, 0x8)
                    (BRAKE_Y, 0x9)
                    (SDIR_INIT, 0xa)
                    (DISTANCE, 0xb)
                    (MOVE, 0xc)
                    (SPEED, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (RUSH_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                    (AIR, 0xd)
                    (FIX_ANGLE, 0xe)
                    (BACK_ANGLE, 0xf)
                );
            }
            pub mod special_hi_rush_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (LR, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_GROUND, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (NO_SHIELD, 0xc)
                    (FIRST, 0xd)
                );
            }
            pub mod special_lw_hold {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x5)
                    (FRAME_MIN, 0x6)
                    (FRAME_INIT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (NO_SHIELD, 0xc)
                    (SHIELD_BREAK, 0xd)
                    (FIRST, 0xe)
                    (LR_LEFT, 0xf)
                );
            }
            pub mod special_lw_end {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (FRAME, 0x5)
                    (FRAME_INIT, 0x7)
                    (MOTION_GROUND, 0x8)
                    (MOTION_AIR, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (NO_SHIELD, 0xc)
                    (SHIELD_BREAK, 0xd)
                    (FIRST, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (POS_X, 0x7)
                    (POS_Y, 0x8)
                    (ATTACK_X, 0x9)
                    (ATTACK_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (WAIT_CUT_IN_END, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE_AIR, 0xc)
                    (AIR, 0xd)
                    (ATTACK, 0xe)
                    (ATTACK_ZOOM, 0xf)
                    (GROUND, 0x10)
                );
            }
        }
    }
    pub mod szerosuit {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ARMOR_PARTS_NO, 0xbd)
                (COLLISION_LOG_GROUP, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe2)
                (FLIP_JUMP, 0xe0)
                (TO_SPECIAL_LANDING, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (CHARGE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHOOT, 0xc)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (MOTION_KIND, 0x8)
                    (MOTION_KIND_AIR, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (S2, 0x12)
                    (S2_UNABLE, 0x13)
                    (S2_CHECK, 0x14)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xa)
                    (MAP_COLL_OFFSET_X, 0x7)
                    (MAP_COLL_OFFSET_Y, 0x8)
                    (MAP_COLL_OFFSET_Z, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WALL_JUMP_NUM, 0x5)
                    (TREAD_TARGET_ID, 0x6)
                    (TREAD_TARGET_CATEGORY, 0x7)
                    (FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (KICK_ENABLE, 0xc)
                    (TREAD_ENABLE, 0xd)
                    (TREAD, 0xe)
                    (WALL_JUMP_ENABLE, 0xf)
                    (REVERSE, 0x10)
                    (START_WAIT_INPUT, 0x11)
                    (KICK, 0x12)
                    (JUMP, 0x13)
                    (KICK_REVERSE_ENABLE, 0x14)
                    (KICK_REVERSE, 0x15)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (S4_SELECT, 0x21)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (RETICLE_POSITION_X, 0x7)
                    (RETICLE_POSITION_Y, 0x8)
                    (RETICLE_POSITION_Z, 0x9)
                    (RETICLE_CAMERA_NEAR, 0xa)
                    (RETICLE_CAMERA_FOV, 0xb)
                    (TERM, 0xc)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FINAL_START_ATTACK, 0xc)
                    (CAMERA_OFF, 0xd)
                    (CAMERA_CHANGE_NEAR, 0xe)
                    (CAMERA_CLIP_BOUND, 0xf)
                    (EXEC_CAMERA_CHANGE, 0x10)
                );
            }
        }
    }
    pub mod wario {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (FINAL_TIME, 0x4c)
                (SPECIAL_S_BIKE_HP, 0x4d)
                (GAS_CHARGE_SPEED, 0x4e)
                (STOMACH_MOTION_FRAME, 0x4f)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_N_INTERVAL, 0xbe)
                (GASS_COUNT, 0xbf)
                (GASS_LEVEL, 0xc0)
                (BIKE_TIME, 0xc1)
                (BIKE_ORIGINAL_OWNER, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe7)
                (CHANGE, 0xe0)
                (FLASHING, 0xe1)
                (CHARGE_MAX, 0xe2)
                (CHARGE_STOP, 0xe3)
                (REMOVE_BIKE, 0xe4)
                (SPECIAL_N_AGAIN, 0xe5)
                (FORBID_GENERATE_BIKE, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xb)
                    (SHOOT_ATTACK_POWER_START, 0x7)
                    (SHOOT_ATTACK_POWER_END, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOT_KIND_GROUND, 0xe)
                    (MOT_KIND_AIR, 0xf)
                    (WAIT_FRAME_MIN, 0x10)
                    (WAIT_FRAME_MAX, 0x11)
                    (MOTION_RATE_FRAME, 0x12)
                    (STATUS_KIND_EAT, 0x13)
                    (AREA_KIND, 0x14)
                    (EAT_WEAPON_ID, 0x15)
                    (EAT_WEAPON_KIND, 0x16)
                    (EAT_ITEM_OWNER_ID_START, 0x17)
                    (EAT_ITEM_OWNER_ID_END, 0x1a)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (EAT_CHECK, 0xd)
                    (ITEM_REMOVE, 0xe)
                    (ITEM_USE, 0xf)
                    (EAT_WEAPON_DONE, 0x10)
                    (DISABLE_EAT_ITEM, 0x11)
                    (SHOOT_ITEM_START, 0x12)
                    (SHOOT_ITEM_END, 0x15)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (TURN_END_INIT_FRAME, 0x7)
                    (THROWN_OUT_BIKE_SPEED_X, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DOWN_MOTION_KIND, 0x5)
                    (DOWN_MOTION_KIND_AIR, 0x6)
                    (WSMOKE_EFFECT_HANDLE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (ESCAPE, 0xd)
                    (BIKE_IN_AIR, 0xe)
                    (WHEELIE_END, 0xf)
                    (RESERVE_JUMP, 0x10)
                    (THROWN_OUT_WHEELIE, 0x11)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (DISABLE_MOTION_ANGLE, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (JUMP, 0xd)
                    (LANDING_ENABLE, 0xe)
                    (CRITICAL_HIT, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_X, 0x7)
                    (START_Y, 0x8)
                    (TARGET_MOTION_RATE, 0x9)
                    (FINAL_OWNER_SCALE, 0xa)
                    (FINAL_INIT_SCALE, 0xb)
                    (TERM, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DASH_COUNT, 0x5)
                    (DASH_CLIFF_CHECK_COUNT, 0x6)
                    (WARIOMAN_OBJECT_ID_01, 0x7)
                    (WARIOMAN_OBJECT_ID_02, 0x8)
                    (WARIOMAN_OBJECT_ID_03, 0x9)
                    (START_SITUATION, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (FINAL_ZOOM_START, 0xe)
                    (CLEAR_ATTACK, 0xf)
                    (ABS_SET, 0x10)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (WARIOMAN_MOTION_END, 0x13)
                    (ATTACK_ABS_RESET, 0x14)
                    (TARGET_MOTION_RATE_SET, 0x15)
                    (TARGET_PRESET_1, 0x16)
                    (TARGET_PRESET_2, 0x17)
                    (TARGET_PRESET_3, 0x18)
                    (TARGET_PRESET_4, 0x19)
                    (TARGET_PRESET_5, 0x1a)
                    (TARGET_PRESET_6, 0x1b)
                );
            }
        }
    }
    pub mod snake {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CATCH_OFFSET_X, 0x4d)
                (CATCH_OFFSET_Y, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (GRENADE_GLOW_ATTACK, 0xbe)
                (RENDER_PRIORITY, 0xbf)
                (PRE_DAMAGE_STATUS_KIND, 0xc0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe2)
                (CYPHER_FALL, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod appeal {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (WAIT_COUNTER, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (EXIT, 0xd)
                );
            }
            pub mod smash_appeal {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNT, 0x7)
                );
            }
            pub mod entry {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SPYCLOAK, 0xc)
                    (ENABLED_SPYCLOAK, 0xd)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (THROW_RATE, 0xe)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x10)
                    (BUTTON_SPECIAL_OFF, 0x11)
                    (FIRST, 0x12)
                );
            }
            pub mod special_n_hold_wait {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0xd)
                    (THROW_RATE, 0xe)
                );
            }
            pub mod special_n_hold {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x10)
                    (FIRST, 0x11)
                );
            }
            pub mod special_n_throw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (THROW_RATE, 0xe)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x10)
                    (FIRST, 0x11)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TRANS_HIT_END, 0xc)
                    (TRANS_AWAY_END, 0xd)
                    (ENABLE_CANCEL, 0xe)
                );
            }
            pub mod special_s_operation {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (PREV_X, 0x7)
                    (PREV_Y, 0x8)
                    (COMP_MUL, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TRANS_HIT_END, 0xc)
                    (TRANS_AWAY_END, 0xd)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CYPHER_EXPLOSION, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SQUAT, 0xc)
                    (END, 0xd)
                );
            }
            pub mod special_lw_produce {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (TRANS_ESTABLISH_TARGET, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod special_lw_establish_judge {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (TRANS_ESTABLISH_TARGET, 0xd)
                );
            }
            pub mod special_lw_establish {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0xe)
                );
            }
            pub mod special_lw_exploding {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (C4_STARTUP, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (RETICLE_POSITION_X, 0x7)
                    (RETICLE_POSITION_Y, 0x8)
                    (RETICLE_POSITION_Z, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION, 0x5)
                    (FRAME, 0x6)
                    (FLASH_FRAME, 0x7)
                    (RETICLE_MOVE_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (WAIT, 0xc)
                );
            }
            make_work_ids!(
                Int,
                Status,
                (MOT_KIND, 0x5)
                (MOT_AIR_KIND, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xc)
            );
        }
    }
    pub mod ike {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x4c)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_HI_CLIFF_NUM, 0xbd)
                (FINAL_HIT_NUM, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (SWORD_FINAL, 0xe0)
                (FINAL_ATTACK_HIT_LINK, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (CHARGE_COUNT, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_COUNT_MAX, 0x5)
                    (SITUATION_PREV, 0x6)
                    (CHARGE_SE_NO, 0x7)
                    (CHARGE_SE_HANDLE, 0x8)
                    (READY_LEVEL, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (CHARGE_MAX, 0xd)
                    (CHARGE_MDL_DAMAGE, 0xe)
                    (CHARGE_MAX_DAMAGE, 0xf)
                    (RUMBLE_MIDDLE, 0x10)
                    (RUMBLE_MAX, 0x11)
                    (MAX, 0x12)
                    (MAX_CHARGE_SOUND_DONE, 0x13)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (SPD_X_MAX, 0x7)
                    (AIR_SPD_X_MAX, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (CHARGE_COUNT, 0x6)
                    (DASH_COUNT, 0x7)
                    (HOLD_SE_HANDLE, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ATK_CHARGE_MAX, 0xd)
                    (SPD_CHARGE_MAX, 0xe)
                    (SEARCH_HIT, 0xf)
                    (CLIFF_CHK_START, 0x10)
                    (ATTACK_END, 0x11)
                    (CHARGE_MAX_EFT, 0x12)
                    (CHARGE, 0x13)
                    (END_NO_LANDING, 0x14)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xe)
                    (SWORD_SLIDE_X_SPEED, 0x7)
                    (SWORD_SLIDE_X_OFFSET, 0x8)
                    (SWORD_SLIDE_X_OFFSET_MAX, 0x9)
                    (JUMP_MUL_2, 0xa)
                    (PREVIOUS_MOTION_FRAME, 0xb)
                    (SLIDEGAP_RECOVER_FRAME_INIT, 0xc)
                    (SLIDEGAP_RECOVER_FRAME, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (RECOVER_SLIDEGAP_INITIAL_COUNT, 0x6)
                    (HIT_OBJECT_NUM, 0x7)
                    (HIT_OBJECT_ID, 0x8)
                    (HIT_OBJECT_ID_MAX, 0xf)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (TRANS_JUMP, 0xd)
                    (CONTROL, 0xe)
                    (KINETIC_CHANGE, 0xf)
                    (JUMP_START_AIR, 0x10)
                    (SLIDEGAP_RECOVER_DONE, 0x11)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (IS_ATTACK_ENEMY, 0x10)
                    (SPECIAL_EFFECT, 0x11)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x14)
                    (MOVE_TARGET_X, 0x7)
                    (MOVE_TARGET_Y, 0x8)
                    (MOVE_SPD_X, 0x9)
                    (MOVE_SPD_Y, 0xa)
                    (MOVE_FRAME, 0xb)
                    (ATTACK_LR, 0xc)
                    (MOVE_ANGLE, 0xd)
                    (OFFSET_LR, 0xe)
                    (TARGET_BASE_POS_X, 0xf)
                    (TARGET_BASE_POS_Y, 0x10)
                    (MOVE_SPEED, 0x11)
                    (TARGET_OFFSET_X, 0x12)
                    (TO_TARGET_LR, 0x13)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REQUEST_LOOP_DAMAGE_MOTION, 0xd)
                    (COUNT, 0x5)
                    (TASK_ID1, 0x6)
                    (TASK_ID2, 0x7)
                    (TASK_ID3, 0x8)
                    (TASK_ID4, 0x9)
                    (TASK_ID5, 0xa)
                    (TASK_ID6, 0xb)
                    (TASK_ID7, 0xc)
                    (ATTACK_HIT_BATTLE_NUM, 0xe)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ATTACK_HIT, 0xd)
                    (SWORD_THROW_START, 0xe)
                    (CHANGE_STATUS, 0xf)
                    (ATTACK_END, 0x10)
                    (FALL_START, 0x11)
                    (REQUEST_LOOP_DAMAGE_MOTION_VARIATION, 0x13)
                    (HIT_ALL_OPPONENT, 0x14)
                );
            }
        }
    }
    pub mod pzenigame {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_CHARGE, 0xbd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe2)
                (TERM, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ANGLE, 0x7)
                    (NODE_ANGLE, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COUNTER, 0x5)
                    (MOTION_KIND, 0x6)
                    (MOTION_KIND_AIR, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SHOOT_ANGLE_ENABLE, 0xc)
                    (NODE_ANGLE_SET, 0xd)
                    (KIRBY, 0xe)
                    (CHARGE_MAX, 0xf)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (CLATTER_TIME, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COUNTER, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CONTINUE, 0xc)
                    (SMASH, 0xd)
                );
            }
        }
    }
    pub mod pokemon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_DAMAGE, 0x4c)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe3)
                (ENABLE_SPECIAL_LW, 0xe0)
                (RESTART_FROM_MBALL, 0xe1)
                (SEND_POKEMON_CHANGE, 0xe2)
            );
        }
    }
    pub mod pfushigisou {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CATCH_OFFSET_X, 0x4c)
                (CATCH_OFFSET_Y, 0x4d)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe1)
                (SPECIAL_AIR_HI_HOP, 0xe0)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (LOOP, 0x5)
                    (TERM, 0x6)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SMASH, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (ANGLE, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (AIR_LASSO_FAIL, 0x12)
                    (SET_ANGLE, 0x13)
                );
            }
            pub mod special_hi_set_map_coll {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (OFFSET, 0x14)
                );
            }
        }
    }
    pub mod plizardon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HOP_SPEED, 0x4e)
                (BREATH_SPEED_MUL, 0x4f)
                (BREATH_SCALE, 0x50)
                (FINAL_RUSH_ANGLE, 0x51)
                (FINAL_RUSH_SRC_ANGLE, 0x52)
                (FINAL_RUSH_DST_ANGLE, 0x53)
            );
            make_work_ids!(
                Int,
                Instance,
                (PREV_BREATH_KIND, 0xbe)
                (WPN_ID, 0xbf)
                (TAIL_FIRE_EFFECT_HANDLE, 0xc0)
                (EXPLOSION_DELAY_FRAME, 0xc1)
                (FINAL_TIME, 0xc2)
                (FINAL_RUSH_ANGLE_CURRENT, 0xc3)
                (NEAR_COUNT, 0xc4)
                (NEAR_FRAME, 0xc5)
                (WATER_FRAME, 0xc6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe3)
                (TERM, 0xe8)
                (SPECIAL_LW_HOP, 0xe0)
                (SPECIAL_S_IS_HIT_SLOPE, 0xe1)
                (WEAPON_PLIZARDONM_MOTION_END, 0xe2)
                (FINAL_TIME_END_FLASH, 0xe3)
                (REQ_EFFECT_TAIL_FIRE, 0xe4)
                (REQ_EFFECT_FINAL_AURA, 0xe5)
                (REMOVE_EFFECT_FINAL_AURA, 0xe6)
                (FINAL_FORCE_END, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod breath {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (GENE_ANGLE, 0x7)
                    (HEAD_NODE_ROTATE_X, 0x8)
                    (HEAD_NODE_ROTATE_Y, 0x9)
                    (HEAD_NODE_ROTATE_Z, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MAIN_COUNT, 0x5)
                    (LOOP_COUNT, 0x6)
                    (STEP, 0x7)
                    (PREV_STEP, 0x8)
                    (GENERATE_COUNT, 0x9)
                    (PREV_GENERATE_KIND, 0xa)
                    (SE1_ID, 0xb)
                    (SE1_HANDLE, 0xc)
                    (SE2_ID, 0xd)
                    (SE2_HANDLE, 0xe)
                    (HEAD_NODE, 0xf)
                    (FIRE_FRAME, 0x10)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_START, 0xc)
                    (CONTINUE, 0xd)
                    (CONTINUE_END, 0xe)
                    (GENE_BREATH, 0xf)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SRC_ANGLE, 0x7)
                    (DST_ANGLE, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (EXPLOSION_TOTAL_DAMAGE, 0x5)
                    (SPECIAL_S_ROTATE_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_STATUS_CHANGE_BLOWN, 0xc)
                    (IS_DISABLE_FIGHTER_HIT_EXPLOSION, 0xd)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod entry {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (IS_VIS_WHOLE, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (LAST_DAIMONJI, 0xc)
                );
            }
        }
    }
    pub mod diddy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_HI_INPUT_UNABLE_COUNT, 0xbd)
                (SPECIAL_HI_BARRELJET_ID, 0xbe)
                (SPECIAL_LW_INTERVAL_FRAME, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe3)
                (SPECIAL_HI_INPUT_UNABLE, 0xe0)
                (SPECIAL_S_INPUT_UNABLE, 0xe1)
                (SPECIAL_INPUT_UNABLE, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGE, 0x7)
                    (CHARGE_DANGER, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PEANUT_ID, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (DANGER, 0xd)
                    (GENERATE_DIDDYPEANUTS, 0xe)
                    (SHOOT, 0xf)
                );
            }
            pub mod monkey_flip {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CLING_TASK_ID, 0x5)
                    (TARGET_TASK, 0x6)
                    (TARGET_HIT_GROUP, 0x7)
                    (TARGET_HIT_NO, 0x8)
                    (KICK_FRAME, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SMASH, 0xd)
                    (JUMP_START, 0xe)
                    (CLING_CUT, 0xf)
                );
            }
            pub mod wd_throw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x7)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x12)
                    (UPPER_START_ANGLE, 0x8)
                    (UPPER_ANGLE, 0x9)
                    (EXPLOSION_SPD_X, 0xa)
                    (EXPLOSION_SPD_Y, 0xb)
                    (DAMAGE_SPD_X, 0xc)
                    (DAMAGE_SPD_Y, 0xd)
                    (REACTION_FRAME, 0xe)
                    (MOTION_WEIGHT, 0xf)
                    (ANGLE_X, 0x10)
                    (ANGLE_X_COMP, 0x11)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_VALUE, 0x5)
                    (SITUATION, 0x6)
                    (SHOOT_KIND, 0x8)
                    (EFFECT_HANDLE, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SITUATION_CHANGE, 0xd)
                    (BARREL_HAVE, 0xe)
                    (DAMAGE_REACTION, 0xf)
                    (FALL_START, 0x10)
                    (BOBY_ROLL_START, 0x11)
                    (ROLL_COMP_START, 0x12)
                    (MOTION_END_CHK, 0x13)
                    (BODY_ROLL_LOCK, 0x14)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BANANA_ID, 0x5)
                    (MOTION_GROUND, 0x6)
                    (MOTION_AIR, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SMASH, 0xd)
                    (THROW, 0xe)
                    (PUTOUT, 0xf)
                    (PUTOUT_OK, 0x10)
                    (PUTOUT_CONDITION_OK, 0x11)
                    (ITEM_THROW, 0x12)
                    (THROW_SUCCESS, 0x13)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xc)
                    (START_POS_X, 0x7)
                    (START_POS_Y, 0x8)
                    (FLY_POS_X, 0x9)
                    (FLY_POS_Y, 0xa)
                    (ANGLE_X, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WAIT_FLY_COUNT, 0x5)
                    (FLY_COUNT, 0x6)
                    (FLY_DIR, 0x7)
                    (PRE_FLY_DIR_FIGHTER, 0x8)
                    (PRE_FLY_DIR_BUNSHIN0, 0x9)
                    (PRE_FLY_DIR_BUNSHIN1, 0xa)
                    (CHARGE_COUNT, 0xb)
                    (FINAL_CLEAR_FRAME, 0xd)
                    (HIT_NUM_ENTRY0, 0xe)
                    (HIT_NUM_ENTRY1, 0xf)
                    (HIT_NUM_ENTRY2, 0x10)
                    (HIT_NUM_ENTRY3, 0x11)
                    (HIT_NUM_ENTRY4, 0x12)
                    (HIT_NUM_ENTRY5, 0x13)
                    (HIT_NUM_ENTRY6, 0x14)
                    (HIT_NUM_ENTRY7, 0x15)
                    (WIN_PEANUTS_TYPE, 0x16)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_FLY_COUNT, 0xc)
                    (END_CHARGE_ZOOM, 0xd)
                    (FINAL_HIT_ZOOM, 0xe)
                    (END_DECCEL, 0xf)
                    (END_DECCEL_CHANGED, 0x10)
                    (GENERATE_EXPLODE_FLY, 0x11)
                    (GENERATE_EXPLODE_FLY_WAIT, 0x12)
                    (GUN_LEFT, 0x13)
                    (GUN_RIGHT, 0x14)
                );
            }
        }
    }
    pub mod lucas {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CATCH_TARGET_EFFECT_SCALE, 0x4c)
                (CATCH_TARGET_EFFECT_OFFSET, 0x4d)
                (PHY_MAGNET_LR, 0x4e)
                (FINAL_ANGLE_ADJUST, 0x4f)
                (FINAL_ANGLE_MAX, 0x50)
                (THROW_LW_EFFECT_OFFSET_X, 0x51)
                (THROW_LW_EFFECT_OFFSET_Z, 0x52)
            );
            make_work_ids!(
                Int,
                Instance,
                (FINAL_SHOOT_COUNT, 0xbd)
                (FINAL_SERIAL, 0xbe)
                (SPECIAL_AIR_END_MOTION, 0xbf)
                (THROW_LW_EFFECT_HANDLE, 0xc0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe8)
                (FINAL_START, 0xe0)
                (REFLECTOR, 0xe1)
                (REFLECTOR_BREAK, 0xe2)
                (THROW_LW_EFFECT_ON, 0xe3)
                (THROW_LW_EFFECT_OFF, 0xe4)
                (THROW_LW_EFFECT_UPDATE, 0xe5)
                (THROW_LW_EFFECT_Z_ZERO, 0xe6)
                (SPECIAL_HI_NO_LAST_ATTACK, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_TIME, 0x6)
                    (STOP_Y_TIME, 0x7)
                    (NOBANG_TIME, 0x8)
                    (NEXT_STATUS, 0x9)
                    (WAIT_MTRANS_KIND, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (GENERATE_ARTICLE, 0xd)
                    (ALREADY_GENERATED, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_SITUATION, 0x5)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xd)
                    (DIR, 0x7)
                    (UD, 0x8)
                    (ANGLE, 0x9)
                    (TARGET_ANGLE, 0xa)
                    (START_ANGLE, 0xb)
                    (DEC_ANGLE, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_TIME, 0x6)
                    (STOP_Y_TIME, 0x7)
                    (HIT_STEP, 0x8)
                    (WEAPON_ID, 0x9)
                    (NEXT_STATUS, 0xa)
                    (WAIT_MTRANS_KIND, 0xb)
                    (NUM, 0xc)
                    (GUIDE_EFFECT_HANDLE, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (ATTACK_AIR, 0xd)
                    (ATTACK_END, 0xe)
                    (ATTACK_FALL_START, 0xf)
                    (LANDING_ENABLE, 0x10)
                    (WALL_BRAKE, 0x11)
                    (THUNDER_VANISH, 0x12)
                    (REFLECT_GROUND, 0x13)
                    (CRITICAL, 0x14)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_Y_TIME, 0x6)
                    (SE_HANDLE, 0x7)
                    (EFFECT_HANDLE, 0x8)
                    (WAIT_MTRANS_KIND, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (BUTTON_RELEASE, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xc)
                    (ANGLE, 0x7)
                    (INTERVAL_FRAME, 0x8)
                    (PRE_GENERATE_X, 0x9)
                    (DEST_POS_X, 0xa)
                    (DEST_POS_Y, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SHOOT_NUM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                );
            }
            pub mod attack_s4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (REFLECT_START, 0xc)
                    (REFLECT_END, 0xd)
                );
            }
            pub mod attack_hi4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (YOYO_GROUND, 0xc)
                    (LAST_TERM_ATTACK, 0xd)
                );
            }
            pub mod attack_lw4 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (LAST_TERM_ATTACK, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod air_lasso_landing {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIMOHEBI_REVERSE, 0x14)
                );
            }
        }
    }
    pub mod sonic {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_N_ADD_ATTACK_POWER, 0x4c)
            );
            make_work_ids!(
                Int,
                Instance,
                (JUMP_COUNT, 0xbd)
                (SPECIAL_N_STATUS_KIND_NEXT, 0xbe)
                (WATER_FRAME, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe4)
                (SPECIAL_HI_FALL, 0xe0)
                (SPECIAL_N_FALL, 0xe1)
                (SPECIAL_S_HOLD_JUMP_EFFECT, 0xe2)
                (DISABLE_RUN_TRACE, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNTER, 0x7)
                    (TARGET_POS_OFFSET_X, 0x8)
                    (TARGET_POS_OFFSET_Y, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_KIRBY, 0xc)
                );
            }
            pub mod special_n_homing {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNTER, 0x7)
                    (TARGET_POS_OFFSET_X, 0x8)
                    (TARGET_POS_OFFSET_Y, 0x9)
                    (TARGET_POS_X, 0xa)
                    (TARGET_POS_Y, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_OBJECT_ID, 0x7)
                    (HOMING_EXPECT_HIT_FRAME, 0x8)
                    (CONTINUE_COUNT, 0x9)
                    (TARGET_VANISH_COUNT, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_KIRBY, 0xc)
                    (TARGET_EXITST, 0xd)
                    (HAS_TARGET_ARTICLE, 0xe)
                    (TARGET_VANISH, 0xf)
                );
            }
            pub mod special_n_fail {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNTER, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_KIRBY, 0xc)
                );
            }
            pub mod special_n_hit {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNTER, 0x7)
                    (TERM, 0x8)
                );
            }
            pub mod special_s_hold {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNTER, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (LIMIT_COUNTER, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPECIAL_LW_HOLD, 0xc)
                    (MAX_CHARGE, 0xd)
                    (BACK_STOP, 0xe)
                );
            }
            pub mod special_s_dash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                    (GROUND_SPEED, 0x8)
                    (AIR_SPEED, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x7)
                    (SPECIAL_LW_CHARGE_LEVEL, 0x8)
                    (WAIT_MTRANS_TYPE, 0x9)
                    (HOP_COUNTER, 0xa)
                    (X_SPEED_END_COUNTER, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPECIAL_LW_HOLD, 0xc)
                    (MAX_CHARGE, 0xd)
                    (MAX_CHARGE_HIT_XLU, 0xe)
                    (ATTACK_REQUEST, 0xf)
                    (INFLICT_OCCUR, 0x10)
                    (HOP, 0x11)
                    (ENABLE_GUARD, 0x12)
                    (HOP_WAIT_MTRANS, 0x13)
                    (HIT_SHIELD_OR_INVINCIBLE, 0x14)
                    (GROUND_START, 0x15)
                );
            }
            pub mod special_s_turn {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x7)
                    (SPECIAL_LW_CHARGE_LEVEL, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPECIAL_LW_HOLD, 0xc)
                    (MAX_CHARGE, 0xd)
                    (MAX_CHARGE_HIT_XLU, 0xe)
                );
            }
            pub mod special_s_end {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (WAIT_MTRANS_TYPE_PHASE01, 0x7)
                    (WAIT_MTRANS_TYPE_PHASE02, 0x8)
                    (TERM, 0x9)
                );
            }
            pub mod special_s_hold_jump {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ADVANCE_COUNTER, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (LIMIT_COUNTER, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPECIAL_LW_HOLD, 0xc)
                    (MAX_CHARGE, 0xd)
                );
            }
            pub mod spin_jump {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SPECIAL_LW_HOLD, 0xc)
                    (MAX_CHARGE, 0xd)
                    (MAX_CHARGE_HIT_XLU, 0xe)
                    (ENABLE_JUMP_AERIAL, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (COMP_POS_X, 0x7)
                    (COMP_POS_Y, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x7)
                    (COMP_COUNTER, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod special_hi_jump {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (RECOVER_GRAVITY_COUNTER, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod special_lw_hold {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                    (ROT_SPEED, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BUTTON_INTERVAL, 0x7)
                    (CHARGE_LEVEL, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TO_SPECIAL_S, 0xc)
                    (MAX_CHARGE, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (ADVANCE_END, 0xc)
                    (FINAL_CAMERA, 0xd)
                    (FINAL_CAMERA_DONE, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod dash {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x14)
                    (BRAKE_INCREASE, 0x15)
                    (TERM, 0x16)
                );
            }
            make_work_ids!(
                Int,
                Status,
                (MOT_KIND, 0x5)
                (MOT_AIR_KIND, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xc)
            );
        }
    }
    pub mod dedede {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4c)
                (STAR_MISSILE_SCALE, 0x4d)
                (STAR_MISSILE_ATTACK_POWER, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (GORDO_THROW_NUM, 0xbe)
                (PICKUP_KIND, 0xbf)
                (PICKUP_TASK_ID, 0xc0)
                (SPECIAL_N_HIT_NEAR_COUNT, 0xc1)
                (SPECIAL_N_HIT_NEAR_FRAME, 0xc2)
                (SPECIAL_MELEE_TYPE, 0xc3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe5)
                (PERSONAL, 0xe0)
                (GORDO_GET, 0xe1)
                (SPECIAL_HI_TURN_DAMAGE, 0xe2)
                (SPECIAL_HI_START_AIR, 0xe3)
                (HAMMER_VISIBILITY, 0xe4)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (EAT_WALK_SPEED, 0x7)
                    (EAT_WALK_SPEED_MAX_RATIO, 0x8)
                    (EAT_WAIT_SWALLOWED_STICK_X, 0x9)
                    (EAT_WAIT_SWALLOWED_STICK_Y, 0xa)
                    (WEAPON_SCALE, 0xb)
                    (WEAPON_SPEED, 0xc)
                    (SWALLOWED_FLICK_OFFSET_X, 0xd)
                    (SWALLOWED_FLICK_OFFSET_Y, 0xe)
                    (SWALLOWED_FLICK_OFFSET_X_PREV, 0xf)
                    (SWALLOWED_FLICK_OFFSET_Y_PREV, 0x10)
                    (SHOT_OBJECT_OFFSET_X, 0x11)
                    (SHOT_OBJECT_OFFSET_Y, 0x12)
                    (TERM, 0x13)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (LOOP_COUNT, 0x7)
                    (EAT_ITEM_KIND, 0x8)
                    (WN_STAR_TASK_ID, 0x9)
                    (SPIT_COUNT, 0xa)
                    (SEARCH_WEAPON_ID, 0xb)
                    (DRINK_WEAPON_KIND, 0xc)
                    (EAT_ITEM_AREA_KIND, 0xd)
                    (TARGET_TASK, 0xe)
                    (TARGET_HIT_GROUP, 0xf)
                    (TARGET_HIT_NO, 0x10)
                    (SWALLOWED_FLICK_TIMER, 0x11)
                    (SHOT_OBJECT_ID, 0x12)
                    (SHOT_OBJECT_FRAME, 0x13)
                    (SWALLOWED_OBJECT_ID, 0x14)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (BUTTON_RELEASE_CHK, 0xd)
                    (INHALE, 0xe)
                    (ITEM_REMOVE, 0xf)
                    (ITEM_USE, 0x10)
                    (ITEM_AREA_THROHGH, 0x11)
                    (SPIT, 0x12)
                    (SPIT_END, 0x13)
                    (SWALLOWED_STICK_ON, 0x14)
                    (SWALLOW_COMP, 0x15)
                    (SEARCH_WEAPON_CHK, 0x16)
                    (DRINK_WEAPON, 0x17)
                    (SHOT_OBJECT_HIT, 0x18)
                    (SHOT_OBJECT_SHOOT, 0x19)
                    (SHOT_OBJECT_HIDDEN, 0x1a)
                );
            }
            pub mod gordo_throw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (FRAME, 0x7)
                    (LR, 0x8)
                    (THROW_SPEED, 0x9)
                    (THROW_ANGLE, 0xa)
                    (THROW_N_ROT_Y, 0xb)
                    (TERM, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WEAPON_KIND, 0x5)
                    (MOTION_GROUND, 0x6)
                    (MOTION_AIR, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (GENERATE, 0xd)
                    (PUTOUT, 0xe)
                    (THROW, 0xf)
                    (PUTOUT_FAILURE, 0x10)
                    (PUTOUT_OK, 0x11)
                    (DROP, 0x12)
                    (MISS_SEARCH, 0x13)
                    (MISS_TO_GET, 0x14)
                    (GET_LOST, 0x15)
                );
            }
            pub mod super_jump {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (PRE_LR, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (JUMP_STEP, 0x5)
                    (JUMP_COUNT, 0x6)
                    (HIT_COUNT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (DIR_L, 0xc)
                    (RESET_GRIVITY_KINE, 0xd)
                    (TURN, 0xe)
                    (STAR_RIGHT, 0xf)
                    (STAR_LEFT, 0x10)
                    (TURN_KINETIC_RESET, 0x11)
                    (CANCEL, 0x12)
                );
            }
            pub mod jet_hammer {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_COUNT, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_MOTION, 0x5)
                    (JUMP_STEP, 0x6)
                    (HOLD_MAX_DAMAGE_COUNT, 0x7)
                    (HOLD_MAX_DAMAGE_VALUE, 0x8)
                    (SE_HANDLE, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT1, 0xc)
                    (CONTINUE_MOT2, 0xd)
                    (HOLD_MAX, 0xe)
                    (HOLD_MAX_CHK_END, 0xf)
                    (HOLD_MAX_CHANGE_RUMBLE, 0x10)
                    (HOLD_START, 0x11)
                    (CHANGE_SE_HOLD_MAX, 0x12)
                    (HOLD_MAX_FLUSHING, 0x13)
                    (HOLD_MAX_CHANGE_MATERIAL, 0x14)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
                (FINAL_FOV_RATE_SCENE_ATTACK, 0xb)
                (FINAL_OWNER_SCALE, 0xc)
                (FINAL_INIT_SCALE, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_COUNT, 0x6)
                (FINAL_END, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_TERM, 0x20)
                (FINAL_SUCCESS, 0xc)
                (FINAL_ABS_SET, 0xd)
                (FINAL_ABS_GET, 0xe)
                (FINAL_ABS_HIT, 0xf)
                (FINAL_CLEAR_SLOW, 0x10)
                (FINAL_NO_DEAD_OFF, 0x11)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x12)
                (FINAL_STEREO_FADE_OUT_START, 0x13)
                (FINAL_STEREO_FADE_IN_START, 0x14)
                (FINAL_STEREO_FADE_FLAG, 0x15)
                (FINAL_END_GROUND_CORRECT_ON, 0x16)
                (FINAL_END_GROUND_CORRECT_SET, 0x17)
                (FINAL_SUCCESS_FRAME, 0x18)
                (FINAL_MOT_CHANGE, 0x19)
                (FINAL_ZOOM_START, 0x1a)
                (FINAL_CLEAR_ATTACK, 0x1b)
                (FINAL_LINKED_OTHER_TARGET, 0x1c)
                (FINAL_FOV_CHANGE, 0x1d)
                (FINAL_END_EXIT, 0x1e)
                (FINAL_END_EXIT_FINISH, 0x1f)
            );
        }
    }
    pub mod pikmin {
        use super::*;
        pub mod instance {
            use super::*;
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Flag,
                    Instance,
                    (FALL_SPECIAL, 0xe7)
                );
            }
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_HI_FRAME, 0x4c)
                (CATCH_MOTION_RATE, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (PRE_PIKMIN_VARIATION, 0xbd)
                (BEFORE_PRE_PIKMIN_VARIATION, 0xbe)
                (ALLOCATE_COLLISION_GROUP, 0xbf)
                (TROOPS_MANAGER_ADDRESS, 0xc0)
                (WING_PIKMIN_END_EFFECT_HANDLE, 0xc1)
                (WING_PIKMIN_END_FRAME_COUNT, 0xc2)
                (PIKMIN_CURSOR_HANDLE, 0xc3)
                (PIKMIN_ANTENNA_EFFECT_HANDLE, 0xc4)
                (PIKMIN_HOLD_PIKMIN_NUM, 0xc5)
                (PIKMIN_HOLD_PIKMIN_OBJECT_ID_0, 0xc6)
                (PIKMIN_HOLD_PIKMIN_OBJECT_ID_1, 0xc7)
                (PIKMIN_HOLD_PIKMIN_OBJECT_ID_2, 0xc8)
                (THROW_PIKMIN_VARIATION, 0xc9)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xf0)
                (SPECIAL_S_HOP, 0xe0)
                (MTRANS_SMPL_AIR, 0xe1)
                (MTRANS_SMPL_GROUND, 0xe2)
                (MTRANS_SMPL_MOTION_END, 0xe3)
                (MTRANS_SMPL_EX1, 0xe4)
                (CATCH_CUT, 0xe8)
                (HOMERUN_CONTEST, 0xe9)
                (CHANGE_CATCH_MOTION_RATE, 0xea)
                (PIKMIN_CATCH_DASH_STATUS, 0xeb)
                (HELMET_DAMAGE_L, 0xec)
                (HELMET_DAMAGE_S, 0xed)
                (IS_SPYCLOAK, 0xee)
                (BOSS_OFFSET, 0xef)
            );
        }
        pub mod status {
            use super::*;
            pub mod pull_out {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOT_RATE, 0x7)
                    (TERM, 0x8)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (THROW, 0xc)
                    (FLICK_THROW, 0xd)
                    (IS_HOLD, 0xe)
                    (UPDATE_HOLD_PIKMIN, 0xf)
                    (TERM, 0x10)
                );
            }
            pub mod special_hi_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (TURN_TIME, 0x7)
                    (PIKMIN_WEIGHT, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FLAP_INTERVAL, 0x5)
                    (DISABLE_LANDING_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TURN, 0xc)
                    (REQUEST_TURN, 0xd)
                    (EFFECT_SMOKE, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x8)
                    (INPUT_KEY_FRAME_COUNTER, 0x9)
                    (WING_SE_HANDLE, 0xa)
                    (WING_EFFECT_HANDLE, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (PIKMIN_SET_START, 0x11)
                    (PIKMIN_SET, 0x12)
                    (PIKMIN_CATCH_START, 0x13)
                    (PIKMIN_CATCHED, 0x14)
                    (IS_INPUT_KEY, 0x15)
                    (WING_EFFECT_CHANGE_C3_RATE, 0x16)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SORT, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (HAVE_PIKMIN, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (UPDATE_HOLD_PIKMIN, 0xf)
                );
            }
            pub mod smash_attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (SHOOT_PIKMIN, 0x21)
                    (TERM, 0x22)
                );
            }
            pub mod catch {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (ONE_MAN_SHOW, 0xe)
                    (NO_CHANGE_PIKMIN_STATUS, 0xf)
                    (WEAPON_PIKMIN_IS_CATCH_RETURN_END, 0x10)
                    (WEAPON_PIKMIN_IS_CATCH_DASH, 0x11)
                    (CATCH_DASH_CANCEL_TURN, 0x12)
                    (TERM, 0x13)
                );
            }
            pub mod damage_fly {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1c)
                    (TERM, 0x1e)
                );
            }
            pub mod damage_fly_support {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (FOLLOW, 0x1d)
                );
            }
            make_work_ids!(
                Int,
                Status,
                (SPECIAL_HI_PRECEDE_INPUT_KIND, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPECIAL_HI_PRECEDE_INPUT, 0xf)
            );
        }
    }
    pub mod lucario {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CURR_AURAPOWER, 0x4c)
                (PREV_AURAPOWER, 0x4d)
                (ATTACK_AIR_LW_SPEED, 0x4e)
                (SE_MIDDLE_AURAPOWER, 0x4f)
                (SE_HIGH_AURAPOWER, 0x50)
                (AURA_EFFECT_SCALE, 0x51)
                (DEBUG_AURAPOWER, 0x52)
            );
            make_work_ids!(
                Int,
                Instance,
                (AURABALL_CHARGE_FRAME, 0xbd)
                (PREV_AURABALL_CHARGE_FRAME, 0xbe)
                (EF_ID_AURABALL_MAX_L, 0xbf)
                (EF_ID_AURABALL_MAX_R, 0xc0)
                (GROUND_MOT, 0xc1)
                (AIR_MOT, 0xc2)
                (EF_ID_LHADOU, 0xc3)
                (EF_ID_RHADOU, 0xc4)
                (EF_KIND, 0xc5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe4)
                (AURABALL_HAD, 0xe0)
                (MOT_INHERIT, 0xe1)
                (MACH_VALIDITY, 0xe2)
                (FORCE_AURAPOWER_ATTACK_POWER_MUL, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SPLIT_APPEAR_LR, 0x7)
                (SPLIT_APPEAR_OFFSET, 0x8)
                (SPLIT_ATTACKER_POS_X, 0x9)
                (SPLIT_ATTACKER_POS_Y, 0xa)
                (FINAL_INIT_POS_X, 0x7)
                (FINAL_INIT_POS_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (SPLIT_FRAME_COUNTER, 0x5)
                (SPLIT_APPEAR_PHASE, 0x6)
                (SPLIT_ATTACKER_ID, 0x7)
                (FINAL_ENTRY_COUNT, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPLIT_PRE_START, 0xb)
                (SPLIT_TRANSITION, 0xc)
                (SPLIT_APPLY_POWERUP_MOTION_RATE, 0xd)
                (SPLIT_APPLIED_POWERUP_MOTION_RATE, 0xe)
                (FINAL_PRE_START, 0xb)
                (FINAL_MOT_CHANGE, 0xc)
                (FINAL_NO_EFFECT_FINAL_END_LOOP, 0xd)
            );
        }
    }
    pub mod robot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (BEAM_ENERGY_VALUE, 0x4c)
                (GYRO_CHARGE_VALUE, 0x4d)
                (BURNER_ENERGY_VALUE, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (LAMP_EFFECT_KIND, 0xbd)
                (LAMP_EFFECT_ID, 0xbe)
                (FINAL_PATTERN_CHANGE_COUNT, 0xc0)
                (BEAM_GLOW_ATTACK, 0xc1)
                (HOMINGLASER_NUM, 0xc2)
                (HOMINGLASER_INDEX, 0xc3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xec)
                (FINAL_COUNT, 0xe6)
                (ARMSPIN_PUSH_B, 0xe0)
                (ARMSPIN_STICK_L, 0xe1)
                (ARMSPIN_STICK_R, 0xe2)
                (BURNER_TRANSFORM_COMP, 0xe3)
                (BURNER_TRANSFORM_REVERS, 0xe4)
                (FINAL, 0xe5)
                (FINAL_ATTACK_START, 0xe7)
                (FINAL_ATTACK, 0xe8)
                (FINAL_FLASHING, 0xe9)
                (CHARGE_STOP, 0xea)
                (REGION_JP, 0xeb)
            );
        }
        pub mod status {
            use super::*;
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0xd)
                    (CLATTER_FRAME, 0xe)
                );
            }
            pub mod throw_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (BURY, 0xf)
                    (BURY_SET_CLATTER, 0x10)
                );
            }
            pub mod beam {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (NECK_ANG, 0x7)
                    (ENERGY_VALUE, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                    (NECK_CONTROL, 0xd)
                    (NECK_RETURN, 0xe)
                    (SHOOT, 0xf)
                    (TERM_WAIT, 0x10)
                    (TERM_FALL, 0x11)
                );
            }
            pub mod armspin {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ANG_SPD_Y, 0x7)
                    (ANG_SPD_SUB_Y, 0x8)
                    (ANG_SPD_END, 0x9)
                    (ANG_STICK_, 0xa)
                    (START_SPD_X, 0xb)
                    (ANG_SPIN, 0xc)
                    (SPEED_X, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT, 0x5)
                    (PUSH_B_COUNT, 0x6)
                    (PUSH_B_NUM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (PUSH_B_RELEASE, 0xd)
                    (SPIN_START_INIT, 0xe)
                );
            }
            pub mod arnspin {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0xe)
                );
            }
            pub mod burner {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x10)
                    (TERM, 0x12)
                    (UP_SPEED, 0x11)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME_COUNT, 0x19)
                    (EFFECT_ID_NORMAL, 0x1a)
                    (EFFECT_ID_JET, 0x1b)
                    (SE_HANDLE, 0x1c)
                    (ATTACK_AIR_KIND, 0x1d)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_HI, 0x17)
                    (CONTINUE_HI_FALL, 0x18)
                    (PUSH_B_BUTTON, 0x19)
                    (EFFECT_NORMAL_ON, 0x1a)
                    (EFFECT_JET_ON, 0x1b)
                    (JET_ON, 0x1c)
                    (JET_SE_ON, 0x1d)
                    (TRANSFORM_COMP, 0x1e)
                    (EMPTY_SE, 0x1f)
                );
            }
            pub mod gyro {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGY_MAX_VALUE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (STEP, 0x5)
                    (MOTION_KIND_GROUND, 0x6)
                    (MOTION_KIND_AIR, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHOOT, 0xd)
                    (HOLD_CANCEL, 0xe)
                    (MISS, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x10)
                    (MAINLASER_ANGLE_OFFSET, 0x7)
                    (BEAM_ANGLE_OFFSET, 0x8)
                    (HEAD_POSITION_X, 0x9)
                    (HEAD_POSITION_Y, 0xa)
                    (HEAD_POSITION_Z, 0xb)
                    (HEAD_ROTATION_X, 0xc)
                    (HEAD_ROTATION_Y, 0xd)
                    (HEAD_ROTATION_Z, 0xe)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MAINLASER_FIRE_FRAME, 0x5)
                    (HOMINGLASER_SHOT_COUNT, 0x6)
                    (HOMINGLASER_RESTART_COUNT, 0x7)
                    (HOMINGLASER_TARGET_OBJECT_ID, 0x8)
                    (HOMINGLASER_TARGET_OBJECT_ID_MAX, 0xf)
                    (HOMINGLASER_TARGET_ARTICLE_ID, 0x10)
                    (HOMINGLASER_TARGET_ARTICLE_ID_MAX, 0x17)
                    (HOMINGTARGET_TARGET_ID, 0x18)
                    (SEARCH_OBJECT_NUM, 0x19)
                    (SEARCH_OBJECT_ID, 0x1a)
                    (SEARCH_OBJECT_ID_MAX, 0x21)
                    (NARROW_BEAM_ID, 0x22)
                    (SEQUENCE_ID, 0x23)
                    (SEQUENCE_FRAME, 0x24)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SEARCH, 0xc)
                    (HOMINGLASER_ACTIVE, 0xd)
                    (HOMINGLASER_ACTIVE_MAX, 0x14)
                    (HOMINGLASER_LOOP, 0x15)
                );
            }
        }
    }
    pub mod wolf {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
        }
    }
    pub mod murabito {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CATCH_OFFSET_X, 0x4c)
                (CATCH_OFFSET_Y, 0x4d)
                (SPECIAL_HI_FRAME, 0x4e)
                (SPECIAL_HI_DAMAGE, 0x4f)
            );
            make_work_ids!(
                Int,
                Instance,
                (TURNIP_NUM, 0xbd)
                (CATCH_SIZE, 0xbe)
                (SPECIAL_HI_BALLOON_NUM, 0xbf)
                (SPECIAL_HI_INVINCIBLE_FRAME, 0xc0)
                (SPECIAL_HI_HIDE_HELMET_FRAME, 0xc1)
                (SPECIAL_N_TIME_LIMIT, 0xc2)
                (SPECIAL_N_OBJECT_CATEGORY, 0xc3)
                (SPECIAL_N_OBJECT_CATEGORY_PREV, 0xc4)
                (SPECIAL_N_OBJECT_KIND, 0xc5)
                (SPECIAL_N_OBJECT_NUM, 0xc6)
                (SPECIAL_N_OBJECT_ID, 0xc7)
                (SPECIAL_N_OBJECT_ID_TERM, 0xca)
                (SPECIAL_S_DISABLE_FRAME, 0xcb)
                (TARGET_OBJECT_ID, 0xcc)
                (SPECIAL_N_ASYNC_TASK_ID, 0xcd)
                (SPECIAL_N_ASYNC_TASK_ID_TERM, 0xd0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xed)
                (WATER, 0xe0)
                (CATCHING, 0xe1)
                (CATCHING_COMP, 0xe2)
                (MELEE_NO_RANDOM, 0xe3)
                (CANCEL_ATTACK_1, 0xe4)
                (SPECIAL_N_ASYNC_TASK_PROCESS, 0xe5)
                (SPECIAL_N_ASYNC_TASK_PROCESS_TERM, 0xe8)
                (SPECIAL_N_ASYNC_TASK_CANCEL, 0xe9)
                (SPECIAL_N_ASYNC_TASK_CANCEL_TERM, 0xec)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (END_MOTION, 0x21)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x8)
                    (TERM, 0xd)
                    (PULL_SPEED, 0x9)
                    (ADD_SCALE, 0xa)
                    (TARGET_SCALE, 0xb)
                    (ORIGINAL_SCALE, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CATEGORY, 0x5)
                    (ATTACK_OBJECT_ID, 0x6)
                    (SEARCH_FRAME, 0x7)
                    (TAKEOUT_BUFFER, 0x8)
                    (TAKEOUT_TRAIT, 0x9)
                    (TAKEOUT_HAVE_NO, 0xa)
                    (STATUS_ATTR, 0xb)
                    (SEARCH_STEP, 0xc)
                    (TAKEOUT_REQUEST, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SEARCH, 0xc)
                    (SEARCHING, 0xd)
                    (TAKEOUT, 0xe)
                    (REQUEST_TAKEOUT, 0xf)
                    (POCKET_HAVE_ITEM, 0x10)
                    (END_POCKET, 0x11)
                    (CONSTRAINT, 0x12)
                    (SEARCH_ATTACK, 0x13)
                    (TAKEOUT_INPUT, 0x14)
                    (END_SCALE, 0x15)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (SPEED, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION, 0x5)
                    (SHOOT_STATUS, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLAYROCKET, 0xc)
                    (CLAYROCKET_EXIST, 0xd)
                    (CLAYROCKET_BURST, 0xe)
                    (CLAYROCKET_SHOOT, 0xf)
                    (RIDE, 0x10)
                    (RIDE_JUDGE, 0x11)
                    (FALL, 0x12)
                );
            }
            pub mod special_hi_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (TURN_TIME, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FLAP_INTERVAL, 0x5)
                    (DISABLE_LANDING_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TURN, 0xc)
                    (REQUEST_TURN, 0xd)
                    (EFFECT_SMOKE, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xf)
                    (CLIFF_CHECK, 0x10)
                );
            }
            pub mod special_lw_plant {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (PLANT_POS_X, 0x7)
                    (PLANT_POS_Y, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (PLANT, 0xc)
                    (SUCCESS, 0xd)
                    (CHECK_PLANT, 0xe)
                );
            }
            pub mod special_lw_water {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0xf)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (INTERVAL, 0x18)
                );
            }
            pub mod special_lw_failure {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOT_KIND, 0x5)
                    (MOT_AIR_KIND, 0x6)
                );
            }
            pub mod special_lw_deforest {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOT_KIND, 0x5)
                    (MOT_AIR_KIND, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CATCH, 0xc)
                );
            }
        }
    }
    pub mod rockman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CATCH_OFFSET_X, 0x4c)
                (CATCH_OFFSET_Y, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (ROCKBUSTER_STEP, 0xbd)
                (ROCKBUSTER_STEP_PREVIOUS, 0xbe)
                (ROCKBUSTER_COUNT, 0xbf)
                (ROCKBUSTER_COUNT_MINI_JUMP_ATTACK, 0xc0)
                (ARM_MANAGER_POINTER, 0xc1)
                (RUSHCOIL_WAIT_FRAME, 0xc2)
                (SPECIAL_LW_HOLD_FRAME, 0xc3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xeb)
                (SPECIAL_LW_LEAFSHIELD, 0xe0)
                (SPECIAL_LW_ENABLE_SHOOT, 0xe1)
                (SPECIAL_HI_FALL, 0xe2)
                (ROCKBUSTER_LOOP_ACCEPT, 0xe3)
                (ROCKBUSTER_LOOP, 0xe4)
                (ROCKBUSTER_L_SHOULDER_FIX, 0xe5)
                (ROCKBUSTER_GENERATE_TOP_N_OFFSET, 0xe6)
                (ROCKBUSTER_SHOOT, 0xe7)
                (ROCKBUSTER_SHOOT_END, 0xe8)
                (ROCKBUSTER_PREV_ESCAPE, 0xe9)
                (ATTACK_HI3_LANDING, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod rockbuster_shoot_jump {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (BUTTON, 0xc)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (STICK_X, 0x7)
                    (STICK_Y, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (METALBLADE_ID, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (ALREADY_EXIST_METALBLADE, 0xd)
                    (STICK_CHECK_FRAME_END, 0xe)
                    (STICK_CHECK_ACCEPT, 0xf)
                    (TURN_MOTION, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (ALREADY_EXIST_CRASHBOMB, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (COMP_POS_X, 0x7)
                    (COMP_POS_Y, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x5)
                    (COMP_COUNTER, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod special_hi_jump {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (RECOVER_GRAVITY_COUNTER, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                );
            }
            pub mod special_lw_shoot {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (REQUEST_SHOOT, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x1c)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_BLACKHOLE_PX, 0xa)
                (FINAL_BLACKHOLE_PY, 0xb)
                (FINAL_BLACKHOLE_PZ, 0xc)
                (FINAL_Z, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TIME, 0x5)
                (FINAL_TASK_ID_COUNT, 0x6)
                (FINAL_FINALDUCK_TASK_ID, 0x7)
                (FINAL_COUNT, 0x8)
                (FINAL_STEP, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_MOT_CHANGE, 0xc)
                (FINAL_SUCCESS, 0xd)
                (FINAL_ABS_SET, 0xe)
                (FINAL_ABS_GET, 0xf)
                (FINAL_ABS_HIT, 0x10)
                (FINAL_CAMERA_ZOOM_START, 0x11)
                (FINAL_SLOW_START, 0x12)
                (FINAL_SLOW_END, 0x13)
                (FINAL_LOOP, 0x14)
                (FINAL_BLACKHOLE_ATTACK_END, 0x15)
                (FINAL_NO_DEAD_OFF, 0x16)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x17)
                (FINAL_END_GROUND_CORRECT_ON, 0x18)
                (FINAL_END_GROUND_CORRECT_SET, 0x19)
                (FINAL_END_EXIT, 0x1a)
                (FINAL_END_EXIT_FINISH, 0x1b)
            );
        }
    }
    pub mod wiifit {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_LW_WAZA_RATE, 0x4c)
                (SPECIAL_LW_WAZA_EFFECTIVE_ATTACK_RATE, 0x4d)
                (SPECIAL_LW_WAZA_EFFECTIVE_DAMAGE_RATE, 0x4e)
                (SPECIAL_LW_WAZA_EFFECTIVE_WALK_RATE, 0x4f)
                (SPECIAL_LW_WAZA_EFFECTIVE_DAMAGE_REACTION_MUL, 0x50)
                (SPECIAL_LW_WAZA_EFFECTIVE_DASH_SPEED_MUL, 0x51)
                (SPECIAL_LW_WAZA_EFFECTIVE_RUN_SPEED_MUL, 0x52)
                (SPECIAL_LW_WAZA_EFFECTIVE_GROUND_BRAKE_MUL, 0x53)
                (SPECIAL_LW_WAZA_EFFECTIVE_AIR_SPEED_X_MUL, 0x54)
                (SPECIAL_LW_WAZA_EFFECTIVE_AIR_SPEED_Y_MUL, 0x55)
                (SPECIAL_HI_JUMP_SPEED_Y, 0x56)
                (SPECIAL_HI_JUMP_ROTATION, 0x57)
                (SPECIAL_N_CHARGE_LEVEL_RATIO, 0x58)
                (CATCH_OFFSET_X, 0x59)
                (CATCH_OFFSET_Y, 0x5a)
                (FINAL_BLUR_ALPHA, 0x5b)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_CHARGE_MAX_FRAME, 0xbd)
                (SPECIAL_N_EFFECT_MAX_ID, 0xbe)
                (SPECIAL_LW_WAZA_RESTORE_FRAME, 0xbf)
                (SPECIAL_LW_WAZA_EFFECTIVE_FRAME, 0xc0)
                (SPECIAL_LW_EFFECT_RING_ID, 0xc1)
                (FINAL_SILHOUETTE_COUNT, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xe9)
                (START, 0xdf)
                (HEADING_LANDING, 0xe0)
                (FUKUSHIKI_LANDING, 0xe1)
                (HULAHOOP_LANDING, 0xe2)
                (SPECIAL_N_FLASHING, 0xe3)
                (SPECIAL_LW_FLASHING, 0xe4)
                (SPECIAL_LW_RESERVE_SET_EFFECT, 0xe5)
                (SPECIAL_LW_RESERVE_RELEASE_EFFECT, 0xe6)
                (SPECIAL_N_HOLD_TO_SHOOT, 0xe7)
                (SPECIAL_N_SHOOT_BULLET, 0xe8)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CANCEL_TYPE, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SUN_BULLET_ABSORBED, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (JUMP_RESTART_BACKUP_SPEED_Y, 0x7)
                    (JUMP_RESTART_FRAME, 0x8)
                    (JUMP_MOTION_RATE_NOW, 0x9)
                    (JUMP_INIT_SPEED_X, 0xa)
                    (SE_PITCH, 0xb)
                    (TERM, 0xc)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (JUMP_RESTART, 0xc)
                    (JUMP_RESTART_NOW, 0xd)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SUBSTANCE_END_FRAME, 0x7)
                    (MOTION_STEP, 0x8)
                    (STATUS_FRAME, 0x9)
                    (SUCCESS_FRAME_START, 0xa)
                    (SUCCESS_FRAME_END, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CIRCLE_EFFECT_HANDLE, 0x5)
                    (AURA_EFFECT_HANDLE, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SET_GRAVITY, 0xc)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (HEADING_BALL_SELF, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (START_BLUR, 0xc)
                    (CONTINUE_BLUR, 0xd)
                    (END_BLUR, 0xe)
                    (TERM, 0xf)
                );
            }
        }
    }
    pub mod rosetta {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_N_CHARGE_MOTION_RATE, 0x4c)
            );
            make_work_ids!(
                Int,
                Instance,
                (EXTEND_BUFFER, 0xbd)
                (TWINKLE_AIR_EFFECT_HANDLE, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe5)
                (AIR_SPECIAL_LW, 0xe0)
                (REBIRTH_XLU, 0xe1)
                (ENTRY, 0xe2)
                (GENERATE_TICO_ON_START, 0xe3)
                (COMBINE_JOSTLE, 0xe4)
            );
        }
        pub mod status {
            use super::*;
            pub mod rebirth {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (REBIRTH_TICO, 0x14)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (MOTION_FRAME, 0x7)
                    (CHARGE_FRAME, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHARGE_SKIP, 0xc)
                    (CHARGE, 0xd)
                    (SHOOT, 0xe)
                    (SHOOTED, 0xf)
                    (INHERIT_SPEED, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
            }
            pub mod special_hi_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xa)
                    (STICK_X, 0x7)
                    (ANGLE, 0x8)
                    (END_ACCEL_Y, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_KIND, 0x5)
                );
            }
            pub mod special_hi_start {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (REVERSE_LR, 0xc)
                );
            }
            pub mod special_hi_jump {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xd)
                    (SPEED, 0xa)
                    (ANGLE, 0xb)
                    (ANGLE_SPEED, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x6)
                );
            }
            pub mod special_hi_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xb)
                    (ACCEL_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (NO_LANDING, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CAPTURE_NUM, 0x5)
                    (CAPTURE_OBJECT_ID, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ENABLE_SEARCH, 0xc)
                );
            }
        }
    }
    pub mod littlemac {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x51)
                (KO_GAGE, 0x4c)
                (HP, 0x4d)
                (AIR_ACCEL_Y, 0x4e)
                (KO_GAGE_MAX_VALUE, 0x4f)
                (SPECIAL_S_START_Y, 0x50)
            );
            make_work_ids!(
                Int,
                Instance,
                (KO_GAGE_MAX_KEEP_FRAME, 0xbd)
                (SPECIAL_N2_HIT_FRAME, 0xbe)
                (SPECIAL_LW_ATTACKER_OBJECT_ID, 0xbf)
                (SPECIAL_S_DISABLE_LANDING_FRAME, 0xc0)
                (SPECIAL_S_FRAME_COUNT, 0xc1)
                (KO_GAGE_DEBUG_DAMAGE, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_S_HOP, 0xe0)
                (MTRANS_SMPL_AIR, 0xe1)
                (MTRANS_SMPL_GROUND, 0xe2)
                (MTRANS_SMPL_MOTION_END, 0xe3)
                (MTRANS_SMPL_EX1, 0xe4)
                (STRANS_0, 0xe5)
                (STRANS_1, 0xe6)
                (IS_SWEAT_MODEL, 0xe7)
                (DISABLE_SPECIAL_S, 0xe8)
                (SPECIAL_S_IS_RAY_CHECK_RESULT, 0xe9)
                (REQUEST_KO_GAUGE_MAX_EFFECT, 0xea)
                (ATTACK_HIT, 0xeb)
                (NO_REACTION_HIT, 0xec)
                (DAMAGE_MESH, 0xed)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (POWER_MIN, 0x8)
                    (POWER_MAX, 0x9)
                    (POWER_CHARGE_RATE, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_FRAME, 0x5)
                    (KO_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TURN_DASH_START, 0xc)
                    (MAX_TURN_DASH_START, 0xd)
                    (MAX_TURN_MOVE, 0xe)
                    (KO_HIT_SE, 0xf)
                    (KO_GRAVITY, 0x10)
                    (KO_GRAVITY_END, 0x11)
                    (RESET_KO_GAUGE, 0x12)
                    (CHECK_DASH, 0x13)
                    (DASH_RESERVE, 0x14)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_BLOW_SHIFT, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOVE_TRANS_TRIGGER, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (COUNTER_ATTACK_START, 0x10)
                    (COUNTER_ATTACK_END, 0x11)
                    (COUNTER_ENABLE_GRAVITY, 0x12)
                    (IS_ATTACK_ENEMY, 0x13)
                    (SPECIAL_EFFECT, 0x14)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xe)
                    (ATTACK_TARGET_LR, 0x7)
                    (ATTACK_TARGET_BASE_X, 0x8)
                    (ATTACK_TARGET_BASE_Y, 0x9)
                    (ATTACK_TARGET_OFFSET_X, 0xa)
                    (ATTACK_TARGET_OFFSET_Y, 0xb)
                    (FIX_POS_X, 0xc)
                    (FIX_POS_Y, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_REQUEST_LOOP_DAMAGE_MOTION, 0x11)
                    (DASH_COUNT, 0x5)
                    (DASH_CLIFF_CHECK_COUNT, 0x6)
                    (ATTACK_HIT_NUM, 0x7)
                    (ATTACK_HIT_MOVE_NUM, 0x8)
                    (ATTACK_HIT_OBJECT_ID, 0x9)
                    (ATTACK_HIT_OBJECT_ID_TERM, 0x10)
                    (ATTACK_HIT_BATTLE_NUM, 0x12)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK_HIT, 0xc)
                    (ATTACK_END_HIT, 0xd)
                    (REQUESTED_FINAL_FINISH, 0xe)
                    (HIT_ALL_OPPONENT, 0x10)
                    (AURA_OFF, 0x11)
                    (AURA_ON, 0x12)
                    (SET_FIX_POS, 0x13)
                    (DEMON_DOJO_ZOOM, 0x14)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (SPECIAL_N_CHARGE_RATE, 0x7)
            );
        }
    }
    pub mod gekkouga {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4b)
                (TERM, 0x59)
                (SPECIAL_N_CHARGE_RATE, 0x4c)
                (SPECIAL_S_HOLD_COUNT, 0x4d)
                (SPECIAL_S_SHADOW_X_POS, 0x4e)
                (SPECIAL_S_SHADOW_Y_POS, 0x4f)
                (SPECIAL_S_SHADOW_Z_POS, 0x50)
                (SPECIAL_S_SHADOW_LR, 0x51)
                (SPECIAL_S_OFFSET_X, 0x52)
                (SPECIAL_S_OFFSET_LR, 0x53)
                (FINAL_ORIGINAL_COLOR_RATE, 0x58)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N2_NEAR_COUNT, 0xbd)
                (SPECIAL_N2_NEAR_FRAME, 0xbe)
                (SPECIAL_S_WARP_COUNT, 0xbf)
                (SPECIAL_S_EFFECT_ID, 0xc0)
                (SPECIAL_LW_LOG_ID, 0xc1)
                (SPECIAL_LW_DOLL_ID, 0xc2)
                (SPECIAL_LW_UNCONTROL_COUNT, 0xc3)
                (ATTACK_AIR_LW_JUMP_COUNT, 0xc4)
                (ATTACK_AIR_LW_BOUND_COUNTER, 0xc5)
                (FINAL_HIT_NUM, 0xc6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_N_FLASHING, 0xe0)
                (SPECIAL_N_FLASHING_EFFECT, 0xe1)
                (SPECIAL_N_HOP, 0xe2)
                (SPECIAL_S_DISP_POS, 0xe3)
                (SPECIAL_S_START_HOLD, 0xe4)
                (SPECIAL_S_START_WARP, 0xe5)
                (SPECIAL_S_ATTACK_FRONT, 0xe6)
                (SPECIAL_S_HOLD_FRONT, 0xe7)
                (SPECIAL_S_IS_DISABLE, 0xe8)
                (SPECIAL_S_WARP_AIR, 0xe9)
                (SPECIAL_S_WARP_GIMMICK, 0xea)
                (SPECIAL_HI_IS_DISABLE, 0xeb)
                (SPECIAL_LW_SAVE_SPEED, 0xec)
                (ATTACK_AIR_LW_BOUND, 0xed)
                (FINAL_ATTACK_HIT_LINK, 0xee)
                (PAUSE, 0xef)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xb)
                    (HOLD_END_FRAME, 0x7)
                    (MOTION_RATE, 0x8)
                    (PARAM_MOTION_RATE, 0x9)
                    (CHARGE_FRAME_MAX, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (NEXT_MOTION_KIND, 0x5)
                    (NEXT_MOTION_KIND_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHURIKEN_SHOOT, 0xc)
                    (HOP, 0xd)
                    (AIR_TRANS, 0xe)
                    (CHECK_TOUCH_DOWN, 0xf)
                    (RELEASE_HOLD_BUTTON, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WARP_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK_FRONT, 0xc)
                    (ATTACK_BACK, 0xd)
                    (RESET_GRAVITY, 0xe)
                    (FIND_ENEMY, 0xf)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x11)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                    (ATTACKER_POS_X, 0x9)
                    (ATTACKER_POS_Y, 0xa)
                    (ATTACKER_POS_Z, 0xb)
                    (RUSH_DIR, 0xc)
                    (RUSH_DIR_ORG_SPAN, 0xd)
                    (RUSH_SPEED_X, 0xe)
                    (RUSH_SPEED_Y, 0xf)
                    (END_GROUND_TEST_BACKUP_Y, 0x10)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (RUSH_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHIELD, 0xc)
                    (SHIELD_CHK, 0xd)
                    (SHIELD_HIT, 0xe)
                    (INIT_MOVE_DONE, 0xf)
                    (TO_END, 0x10)
                    (IS_DOLL, 0x11)
                    (GENERATE_ITEM, 0x12)
                    (BOUND_GROUND, 0x13)
                    (SET_ROT_N, 0x14)
                    (WAIT_ATTACK, 0x15)
                    (ENABLE_CONTROL, 0x16)
                    (APPEAR_EFFECT_1, 0x17)
                    (APPEAR_EFFECT_2, 0x18)
                    (APPEAR_SOUND, 0x19)
                    (ATTACK_UP, 0x1a)
                    (ATTACK_UP_SIDE, 0x1b)
                    (ATTACK_SIDE, 0x1c)
                    (ATTACK_DOWN_SIDE, 0x1d)
                    (ATTACK_DOWN, 0x1e)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x16)
                    (MOVE_TARGET_X, 0x7)
                    (MOVE_TARGET_Y, 0x8)
                    (MOVE_SPD_X, 0x9)
                    (MOVE_SPD_Y, 0xa)
                    (MOVE_FRAME, 0xb)
                    (ATTACK_LR, 0xc)
                    (MOVE_ANGLE, 0xd)
                    (OFFSET_LR, 0xe)
                    (TARGET_BASE_POS_X, 0xf)
                    (TARGET_BASE_POS_Y, 0x10)
                    (MOVE_SPEED, 0x11)
                    (TARGET_OFFSET_X, 0x12)
                    (TARGET_OFFSET_Y, 0x13)
                    (TO_TARGET_LR, 0x14)
                    (MOVE_START_FRAME, 0x15)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REQUEST_LOOP_DAMAGE_MOTION, 0xd)
                    (COUNT, 0x5)
                    (HIT_NUM, 0x6)
                    (TASK_ID1, 0x7)
                    (TASK_ID2, 0x8)
                    (TASK_ID3, 0x9)
                    (TASK_ID4, 0xa)
                    (TASK_ID5, 0xb)
                    (TASK_ID6, 0xc)
                    (GEKKOUGAS_ID, 0xe)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ENABLE_FINISH, 0xd)
                    (ATTACK_HIT, 0xe)
                    (SWORD_THROW_START, 0xf)
                    (CHANGE_STATUS, 0x10)
                    (ATTACK_HIT_LINK, 0x11)
                    (ATTACK_END, 0x12)
                    (FALL_START, 0x13)
                    (REQUEST_LOOP_DAMAGE_MOTION_VARIATION, 0x15)
                    (TARGET_NOREAC_OFF, 0x16)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (QUICK_ATTACK_PREV_STICK_X, 0x7)
                (QUICK_ATTACK_PREV_STICK_Y, 0x8)
                (QUICK_ATTACK_PREV_ROT_X, 0x9)
                (QUICK_ATTACK_PREV_ROT_Y, 0xa)
                (QUICK_ATTACK_PREV_ROT_Z, 0xb)
                (QUICK_ATTACK_ADD_ROT_X, 0xc)
                (QUICK_ATTACK_ADD_ROT_Y, 0xd)
                (QUICK_ATTACK_ADD_ROT_Z, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (QUICK_FRAME_COUNT, 0x5)
                (QUICK_ATTACK_COUNT, 0x6)
                (QUICK_ATTACK_MOVE_TIME_COUNTER, 0x7)
                (QUICK_ATTACK_FALL_STOP_COUNTER, 0x8)
                (QUICK_ATTACK_FLOOR_PASS_COUNTER, 0x9)
                (QUICK_ATTACK_PHASE, 0xa)
                (QUICK_ATTACK_DIRECTION_EFFECT_HANDLE, 0xb)
                (QUICK_ATTACK_DIRECTION_EFFECT_COUNT, 0xc)
            );
            make_work_ids!(
                Flag,
                Status,
                (QUICK_ATTACK, 0xb)
                (SECOND, 0xc)
                (DIRECTION_EFFECT_LAST_VISIBLE, 0xd)
                (QUICK_ATTACK_END, 0xe)
            );
        }
    }
    pub mod palutena {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
                (GROUND_MOT, 0xbf)
                (AIR_MOT, 0xc0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TERM, 0xea)
                (SPECIAL_S_HOP, 0xe0)
                (MOT_INHERIT, 0xe1)
                (MTRANS_SMPL_AIR, 0xe2)
                (MTRANS_SMPL_GROUND, 0xe3)
                (MTRANS_SMPL_MOTION_END, 0xe4)
                (MTRANS_SMPL_EX1, 0xe5)
                (MENU_MOTION, 0xe6)
                (SPECIAL_N_LANDING, 0xe7)
                (SPECIAL_N_DEBUG_DRAW_AREA, 0xe8)
                (FINAL_DEBUG_DISP_BLACKHOLE_RANGE, 0xe9)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x9)
                    (FRAME, 0x5)
                    (MOVE_XLU, 0x6)
                    (START_SITUATION, 0x7)
                    (CLIFF_CHECK, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (END, 0xd)
                    (CHECK_GROUND, 0xe)
                    (DIVE, 0x10)
                );
            }
            pub mod special_hi_control {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (ON, 0xf)
                );
            }
            pub mod special_hi_dive {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (DONE, 0x11)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xb)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                    (SHOT_OBJECT_X, 0x9)
                    (SHOT_OBJECT_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (IS_SPECIAL_LW, 0x10)
                    (IS_ATTACK_ENEMY, 0x11)
                    (CHANGE_STATUS_REFLECT, 0x12)
                    (SPECIAL_EFFECT, 0x13)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TARGET_POS_X, 0x7)
                    (TARGET_POS_Y, 0x8)
                    (TARGET_POS_Z, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x6)
                    (TARGET_CATEGORY, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TARGET_EXIST, 0xc)
                    (HAS_TARGET_ARTICLE, 0xd)
                    (SHOT_1ST_DONE, 0xe)
                    (SHOT_2ND_DONE, 0xf)
                    (SHOT_3RD_DONE, 0x10)
                    (SIGHT_EFFECT_ON, 0x11)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (POS_X, 0x7)
                    (POS_Y, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SMASH, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (BLACKHOLE_POSITION_X, 0x7)
                    (BLACKHOLE_POSITION_Y, 0x8)
                    (BLACKHOLE_POSITION_Z, 0x9)
                    (VIRTUAL_BLACKHOLE_POSITION_X, 0xa)
                    (VIRTUAL_BLACKHOLE_POSITION_Y, 0xb)
                    (VIRTUAL_BLACKHOLE_POSITION_Z, 0xc)
                    (BEAM_POSITION_X, 0xd)
                    (BEAM_POSITION_Y, 0xe)
                    (BEAM_POSITION_Z, 0xf)
                    (BEAM_ANGLE, 0x10)
                    (PALUTENA_POSITION_X, 0x11)
                    (PALUTENA_POSITION_Y, 0x12)
                    (PALUTENA_POSITION_Z, 0x13)
                    (PALUTENA_SLIDE_RATE, 0x14)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (BEAM_BATTLE_OBJECT_ID, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_BEAM_CLOCKWISE, 0xc)
                    (IS_AIR_SITUATION, 0xd)
                );
            }
        }
    }
    pub mod pacman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4b)
                (TERM, 0x50)
                (CATCH_EFFECT_START_FRAME, 0x4c)
                (SPECIAL_N_CHARGE_RATE, 0x4d)
                (SPECIAL_HI_HEIGHT_MUL, 0x4e)
                (CATCH_EFFECT_LENGTH, 0x4f)
            );
            make_work_ids!(
                Int,
                Instance,
                (SMASH_ANIMATION, 0xbe)
                (CLIFF_COUNT, 0xbf)
                (SPECIAL_N_ITEM_ID, 0xc0)
                (SPECIAL_N_CHARGE_RANK, 0xc1)
                (SPECIAL_HI_JUMP_NUM, 0xc2)
                (SPECIAL_S_ITEM_ID, 0xc3)
                (SPECIAL_LW_WAIT_FRAME, 0xc4)
                (APPEAL_HI_KIND, 0xc5)
                (APPEAL_HI_KIND_DEBUG, 0xc6)
                (CATCH_EFFECT_HANDLE, 0xc7)
                (CATCH_EFFECT_FRAME, 0xc8)
                (SPECIAL_N_ITEM_STRAGE_0, 0xc9)
                (SPECIAL_N_ITEM_STRAGE_1, 0xca)
                (SPECIAL_N_ITEM_STRAGE_2, 0xcb)
                (SPECIAL_N_ITEM_STRAGE_3, 0xcc)
                (SPECIAL_N_ITEM_STRAGE_4, 0xcd)
                (SPECIAL_N_ITEM_STRAGE_5, 0xce)
                (SPECIAL_N_ITEM_STRAGE_6, 0xcf)
                (SPECIAL_N_ITEM_STRAGE_7, 0xd0)
                (SPECIAL_N_ITEM_STRAGE_8, 0xd1)
                (SPECIAL_N_ITEM_STRAGE_9, 0xd2)
                (SPECIAL_S_EFFECT_HANDLE0, 0xd3)
                (SPECIAL_S_EFFECT_HANDLE1, 0xd4)
                (SPECIAL_S_EFFECT_HANDLE2, 0xd5)
                (SPECIAL_S_EFFECT_HANDLE3, 0xd6)
                (SPECIAL_S_EFFECT_HANDLE4, 0xd7)
                (SPECIAL_S_EFFECT_HANDLE5, 0xd8)
                (SPECIAL_S_EFFECT_HANDLE6, 0xd9)
                (SPECIAL_S_EFFECT_HANDLE7, 0xda)
                (SPECIAL_S_EFFECT_HANDLE8, 0xdb)
                (SPECIAL_S_EFFECT_HANDLE9, 0xdc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_S_HOP, 0xe0)
                (IS_CTR, 0xe1)
                (SPECIAL_N_REMOVE_ITEM, 0xe2)
                (SPECIAL_N_MAX_EFFECT, 0xe3)
                (SPECIAL_N_MAX_HAVE_ITEM, 0xe4)
                (SPECIAL_N_CHANGE_THROW_FRAME, 0xe5)
                (SPECIAL_N_PULL_THROW, 0xe6)
                (SPECIAL_S_FALL, 0xe7)
                (SPECIAL_S_DAMAGE_POWERESA, 0xe8)
                (SPECIAL_HI_FALL, 0xe9)
                (SPECIAL_HI_TRAMPOLINE_JUMP, 0xea)
                (SPECIAL_LW_EXIST, 0xeb)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_FRAME, 0x5)
                    (TARGET_NUM, 0x6)
                    (MAX_HOLD_COUNT, 0x7)
                    (NEXT_STATUS, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (THROW, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x6)
                    (FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (AIR, 0xc)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x23)
                    (ROT, 0x7)
                    (DASH_POWER, 0x8)
                    (DASH_START_POS_Y, 0x9)
                    (DASH_START_SPEED_Y, 0xa)
                    (TOP_ESA_POS_X, 0xb)
                    (TOP_ESA_POS_Y, 0xc)
                    (MOVE_DISTANCE, 0xd)
                    (DASH_FLASH_ALPHA, 0xe)
                    (ESA_POS_X0, 0xf)
                    (ESA_POS_X1, 0x10)
                    (ESA_POS_X2, 0x11)
                    (ESA_POS_X3, 0x12)
                    (ESA_POS_X4, 0x13)
                    (ESA_POS_X5, 0x14)
                    (ESA_POS_X6, 0x15)
                    (ESA_POS_X7, 0x16)
                    (ESA_POS_X8, 0x17)
                    (ESA_POS_X9, 0x18)
                    (ESA_POS_Y0, 0x19)
                    (ESA_POS_Y1, 0x1a)
                    (ESA_POS_Y2, 0x1b)
                    (ESA_POS_Y3, 0x1c)
                    (ESA_POS_Y4, 0x1d)
                    (ESA_POS_Y5, 0x1e)
                    (ESA_POS_Y6, 0x1f)
                    (ESA_POS_Y7, 0x20)
                    (ESA_POS_Y8, 0x21)
                    (ESA_POS_Y9, 0x22)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_FRAME, 0x5)
                    (ESA_INDEX, 0x6)
                    (EAT_ESA_INDEX, 0x7)
                    (DASH_FRAME, 0x8)
                    (DASH_MAX_FRAME, 0x9)
                    (ARMER_FRAME, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (EAT_ESA_TOP, 0xc)
                    (EAT_POWER_ESA, 0xd)
                    (IS_POWER_ESA_GROUND, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FAILURE, 0xc)
                    (START_GROUND, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (START_POS_X, 0x7)
                    (START_POS_Y, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CAMERA_TYPE, 0x5)
                    (BIGPACMAN_ID, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE, 0xc)
                    (START_MOVE, 0xd)
                );
            }
        }
    }
    pub mod reflet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x51)
                (SPECIAL_S_CURRENT_POINT, 0x4c)
                (SPECIAL_N_CHARGE_RATE, 0x4d)
                (KIRBY_SPECIAL_N_HOLD_EFFECT_OFFSET_X, 0x4e)
                (KIRBY_SPECIAL_N_HOLD_EFFECT_OFFSET_Y, 0x4f)
                (KIRBY_SPECIAL_N_HOLD_EFFECT_OFFSET_Z, 0x50)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_CURRENT_POINT, 0xbd)
                (SPECIAL_N_REVIVAL_COUNT, 0xbe)
                (SPECIAL_N_THUNDER_KIND, 0xbf)
                (SPECIAL_LW_CURRENT_POINT, 0xc0)
                (SPECIAL_LW_REVIVAL_COUNT, 0xc1)
                (SPECIAL_LW_CHARGE, 0xc2)
                (SPECIAL_LW_REMOVE, 0xc3)
                (SPECIAL_HI_CURRENT_POINT, 0xc4)
                (SPECIAL_HI_REVIVAL_COUNT, 0xc5)
                (THUNDER_SWORD_CURRENT_POINT, 0xc6)
                (THUNDER_SWORD_REVIVAL_COUNT, 0xc7)
                (SPECIAL_S_REVIVAL_COUNT, 0xc8)
                (LAST_USED_MAGIC_KIND, 0xc9)
                (THROWAWAY_TABLE, 0xca)
                (TEMP_MAGIC_KIND, 0xcb)
                (RECOVER_TABLE, 0xcc)
                (RECOVER_NOTIFY_TABLE, 0xcd)
                (SWORD_START_MAT_FRAME, 0xce)
                (SWORD_END_MAT_FRAME, 0xcf)
                (SWORD_CURRENT_MAT_FRAME, 0xd0)
                (HUD_MAGIC_KIND, 0xd1)
                (SWORD_RESURRECTION_VALID_FRAME, 0xd2)
                (THUNDER_RESURRECTION_VALID_FRAME, 0xd3)
                (GIGAFIRE_RESURRECTION_VALID_FRAME, 0xd4)
                (ELWIND_RESURRECTION_VALID_FRAME, 0xd5)
                (RISIRE_RESURRECTION_VALID_FRAME, 0xd6)
                (FINAL_HIT_NUM, 0xd7)
                (START_STATUS_KIND, 0xd8)
                (BOOK_START_MAT_FRAME, 0xd9)
                (BOOK_END_MAT_FRAME, 0xda)
                (BOOK_CURRENT_MAT_FRAME, 0xdb)
                (FINAL_CUTIIN_EFFECT_HANDLE, 0xdc)
                (KIRBY_JOINT_HOLD_JOINT_ID, 0xdd)
                (CATCH_EFFECT_HANDLE, 0xde)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_S_HOP, 0xe0)
                (SPECIAL_HI_AIR, 0xe1)
                (SPECIAL_HI_FAILURE_HOP, 0xe2)
                (THUNDER_SWORD_ON, 0xe3)
                (SPECIAL_FAILURE, 0xe4)
                (SWORD_FINAL, 0xe5)
                (FINAL_ATTACK_HIT_LINK, 0xe6)
                (SWORD_IS_EXAUSTING, 0xe7)
                (BOOK_IS_EXAUSTING, 0xe8)
                (SPECIAL_LW_VC_IS_PLAYED, 0xe9)
                (AIR_SMASH, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND_GROUND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (KINETIC_GROUND, 0x7)
                    (KINETIC_AIR, 0x8)
                    (CORRECT_GROUND, 0x9)
                    (CORRECT_AIR, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MAGIC_EMPTY_EFFECT_DONE, 0xc)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT_FOR_ATTACK_100, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (TERM, 0x22)
                    (SUB_POINT, 0x21)
                );
            }
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (THUNDER_SWORD, 0x7)
                );
            }
            pub mod special_n_hold {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0xa)
                    (COUNT, 0xb)
                    (NEXT_STATUS, 0xc)
                );
            }
            pub mod special_n_hold_effect {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (HANDLE, 0xd)
                    (HANDLE2, 0xe)
                    (HANDLE3, 0xf)
                );
            }
            pub mod special_n_shoot {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (TRY, 0xd)
                    (SHOOT_OK, 0xe)
                );
            }
            pub mod special_n_tron_hold {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (LETS_TERMINATE, 0xd)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (JUMP, 0xd)
                    (TRY_2ND, 0xe)
                );
            }
            pub mod special_lw_capture {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOTION_RATE, 0x7)
                    (ATTACK_POWER, 0x8)
                    (HEAL_DAMAGE, 0x9)
                    (GAP_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (OBJECT_ID, 0xb)
                    (FRAME, 0xc)
                    (DISABLE_GRAVITY_FRAME, 0xd)
                    (CATCH_STATUS, 0xe)
                    (ATTACK_ID, 0xf)
                    (SERIAL_HIT_FRAME, 0x10)
                    (EFFECT_HANDLE, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (HIT, 0xd)
                    (IS_TARGET_GROUND, 0xe)
                    (HEAL_EFFECT, 0xf)
                    (MISS, 0x10)
                );
            }
            pub mod special_lw_end {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TRANSITION_STATUS_KIND_AIR, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (HIT, 0xd)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (TRY, 0xd)
                    (SHOOT_OK, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x15)
                    (MOVE_TARGET_X, 0x7)
                    (MOVE_TARGET_Y, 0x8)
                    (MOVE_SPD_X, 0x9)
                    (MOVE_SPD_Y, 0xa)
                    (MOVE_FRAME, 0xb)
                    (ATTACK_LR, 0xc)
                    (MOVE_ANGLE, 0xd)
                    (OFFSET_LR, 0xe)
                    (TARGET_BASE_POS_X, 0xf)
                    (TARGET_BASE_POS_Y, 0x10)
                    (MOVE_SPEED, 0x11)
                    (TARGET_OFFSET_X, 0x12)
                    (TARGET_OFFSET_Y, 0x13)
                    (TO_TARGET_LR, 0x14)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REQUEST_LOOP_DAMAGE_MOTION, 0xc)
                    (COUNT, 0x5)
                    (TASK_ID1, 0x6)
                    (TASK_ID2, 0x7)
                    (TASK_ID3, 0x8)
                    (TASK_ID4, 0x9)
                    (TASK_ID5, 0xa)
                    (TASK_ID6, 0xb)
                    (ATTACK_MAGIC_KIND, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ATTACK_HIT, 0xd)
                    (SWORD_THROW_START, 0xe)
                    (CHANGE_STATUS, 0xf)
                    (ATTACK_END, 0x10)
                    (FALL_START, 0x11)
                    (REQUEST_LOOP_DAMAGE_MOTION_VARIATION, 0x13)
                    (TARGET_NOREAC_OFF, 0x14)
                    (GOTO_MOVE, 0x15)
                );
            }
        }
    }
    pub mod shulk {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x52)
                (START, 0x4c)
                (SPECIAL_N_SHIELD_ENDURE_MUL, 0x4d)
                (SPECIAL_N_SMASH_BLOWN_MUL, 0x4e)
                (SPECIAL_LW_SHIELD_TIME, 0x4f)
                (SPECIAL_LW_ATTACK_POWER, 0x50)
                (SPECIAL_HI_HEIGHT_MUL, 0x51)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_COUNTER, 0xbd)
                (SPECIAL_N_SELECT_TIMER, 0xbe)
                (SPECIAL_N_SPECIAL_BUTTON_TIMER, 0xbf)
                (SPECIAL_N_CIRCLE_MENU_TIMER, 0xc0)
                (SPECIAL_N_EFFECT_ZOOM_FRAME, 0xc1)
                (SPECIAL_N_BACK_DEFALT_INTERVAL_FRAME, 0xc2)
                (SPECIAL_N_DECIDE_INTERVAL_FRAME, 0xc3)
                (SPECIAL_N_TYPE, 0xc4)
                (SPECIAL_N_TYPE_SELECT, 0xc5)
                (SPECIAL_N_CANCEL_KEY_ON_FRAME, 0xc6)
                (SPECIAL_N_CANCEL_KEY_TRIG_FRAME, 0xc7)
                (SPECIAL_N_CANCEL_KEY_TRIG_COUNT, 0xc8)
                (SPECIAL_N_UNAVAILABLE_FRAME_JUMP, 0xc9)
                (SPECIAL_N_UNAVAILABLE_FRAME_SPEED, 0xca)
                (SPECIAL_N_UNAVAILABLE_FRAME_SHIELD, 0xcb)
                (SPECIAL_N_UNAVAILABLE_FRAME_BUSTER, 0xcc)
                (SPECIAL_N_UNAVAILABLE_FRAME_SMASH, 0xcd)
                (SPECIAL_N_EFFECT_HANDLE, 0xce)
                (SPECIAL_N_EFFECT_HANDLE_BACK_GAUGE, 0xcf)
                (SPECIAL_N_EFFECT_FRAME, 0xd0)
                (PREV_VISIBILITY_GROUP, 0xd1)
                (COLLISION_LOG_GROUP, 0xd2)
                (SPECIAL_LW_TARGET_OBJECT_ID, 0xd3)
                (SPECIAL_LW_VISION_COLOR_COUNT, 0xd4)
                (SPECIAL_N_EFFECT_FRAME_JUMP, 0xd5)
                (SPECIAL_N_EFFECT_FRAME_SPEED, 0xd6)
                (SPECIAL_N_EFFECT_FRAME_SHIELD, 0xd7)
                (SPECIAL_N_EFFECT_FRAME_BUSTER, 0xd8)
                (SPECIAL_N_EFFECT_FRAME_SMASH, 0xd9)
                (SPECIAL_N_EFFECT_HANDLE_CENTER, 0xda)
                (SPECIAL_N_EFFECT_HANDLE_JUMP, 0xdb)
                (SPECIAL_N_EFFECT_HANDLE_SPEED, 0xdc)
                (SPECIAL_N_EFFECT_HANDLE_SHIELD, 0xdd)
                (SPECIAL_N_EFFECT_HANDLE_BUSTER, 0xde)
                (SPECIAL_N_EFFECT_HANDLE_SMASH, 0xdf)
                (SPECIAL_N_EFFECT_HANDLE_JUMP_IMPOSSIBLE, 0xe0)
                (SPECIAL_N_EFFECT_HANDLE_SPEED_IMPOSSIBLE, 0xe1)
                (SPECIAL_N_EFFECT_HANDLE_SHIELD_IMPOSSIBLE, 0xe2)
                (SPECIAL_N_EFFECT_HANDLE_BUSTER_IMPOSSIBLE, 0xe3)
                (SPECIAL_N_EFFECT_HANDLE_SMASH_IMPOSSIBLE, 0xe4)
                (SPECIAL_N_EFFECT_HANDLE_JUMP_GAUGE, 0xe5)
                (SPECIAL_N_EFFECT_HANDLE_SPEED_GAUGE, 0xe6)
                (SPECIAL_N_EFFECT_HANDLE_SHIELD_GAUGE, 0xe7)
                (SPECIAL_N_EFFECT_HANDLE_BUSTER_GAUGE, 0xe8)
                (SPECIAL_N_EFFECT_HANDLE_SMASH_GAUGE, 0xe9)
                (SPECIAL_N_TYPE_SELECT_PREV, 0xea)
                (SPECIAL_N_TYPE_KIRBY_MONADO_EFFECT, 0xeb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_N_SELECT, 0xe0)
                (SPECIAL_N_ACTIVE, 0xe1)
                (SPECIAL_N_SELECT_BUTTON_PUSH, 0xe2)
                (SPECIAL_N_FIRST_TIME, 0xe3)
                (SPECIAL_N_UNAVAILABLE_TYPE, 0xe4)
                (SPECIAL_N_CIRCLE_MENU, 0xe5)
                (SPECIAL_N_SHOW_CIRCLE_MENU_GAUGE, 0xe6)
                (SPECIAL_N_UPDATE_ACTION_EFFECT_RATE_1, 0xe7)
                (SPECIAL_N_UPDATE_ACTION_EFFECT_RATE_2, 0xe8)
                (SPECIAL_N_CIRCLE_MENU_DAMAGE_STATUS, 0xe9)
                (SPECIAL_N_ENABLE_MONADO_HUD_TOP, 0xea)
                (SPECIAL_N_ENABLE_MONADO_HUD_END, 0xef)
                (SPECIAL_N_DEBUG_MONAD_FREE, 0xf0)
                (SPECIAL_LW_F, 0xf1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (RELEASE_BUTTON, 0xc)
                    (SELECT_START, 0xd)
                    (END, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MTRANS_START, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x10)
                    (PREV_MOTION_SPEED_Y, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_ADD_SHIFT_INPUT, 0x12)
                    (IS_NORMAL_GRAVITY_START, 0x13)
                    (IS_NORMAL_GRAVITY, 0x14)
                    (IS_ENABLE_CONTROL, 0x15)
                    (IS_FALL, 0x16)
                    (IS_ADD_SHIFT_RESERVE_INPUT, 0x17)
                    (IS_ENABLE_ADD_SHIFT_INPUT, 0x18)
                );
            }
            pub mod special_hi_add {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_MOTION_SPEED_Y_START, 0x19)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SHIELD_LR, 0x7)
                    (COUNTER_START_FRAME, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (FLASH_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (COUNTER_ATTACK_START, 0x10)
                    (COUNTER_ATTACK_END, 0x11)
                    (IS_ATTACK_ENEMY, 0x12)
                    (SPECIAL_EFFECT, 0x13)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_COUNT, 0x6)
                (FINAL_END, 0x7)
                (FINAL_VOICE_TYPE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_SUCCESS, 0xc)
                (FINAL_ABS_SET, 0xd)
                (FINAL_ABS_GET, 0xe)
                (FINAL_ABS_HIT, 0xf)
                (FINAL_MOT_CHANGE, 0x10)
                (FINAL_CLEAR_SLOW, 0x11)
                (FINAL_ZOOM_START, 0x12)
                (FINAL_NO_DEAD_OFF, 0x14)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x15)
                (FINAL_END_GROUND_CORRECT_ON, 0x16)
                (FINAL_END_GROUND_CORRECT_SET, 0x17)
                (FINAL_SUCCESS_FRAME, 0x18)
                (FINAL_END_EXIT, 0x19)
                (FINAL_END_EXIT_FINISH, 0x1a)
            );
        }
    }
    pub mod koopajr {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SHAFT_ROT, 0x4c)
                (SHAFT_ROT_SPEED, 0x4d)
                (SHAFT_ROT_BRAKE, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (CLOWN_HIT_NO, 0xbd)
                (SPECIAL_S_JUMP_FRAME, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe8)
                (SPECIAL_S_KART, 0xe0)
                (SPECIAL_S_DISABLE, 0xe1)
                (SPECIAL_S_JUMP, 0xe2)
                (SPECIAL_HI_INTERRUPT, 0xe3)
                (SPECIAL_HI_DAMAGE_FLY, 0xe4)
                (SPECIAL_HI_CLIFF_CATCH, 0xe5)
                (SPECIAL_LW_INHERIT_SPEED, 0xe6)
                (DAMAGE_FLY_NO_COMP, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (CHARGE, 0x7)
                    (CHARGE_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0x11)
                    (INHERIT_SPEED, 0xc)
                    (SKIP_HOLD, 0xd)
                    (SHOOT, 0xe)
                    (ENABLE_SHOOT, 0xf)
                    (FAIL, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SLOPE_ANGLE, 0x7)
                    (SLOPE_ANGLE_PREV, 0x8)
                    (CLOWN_ANGLE, 0x9)
                    (CLOWN_ANGLE_SPEED, 0xa)
                    (BASE_ANGLE, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BACK_FRAME, 0x6)
                    (JUMP_FRAME, 0x7)
                    (DASH_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x16)
                    (TERM, 0x1f)
                    (INHERIT_SPEED, 0x17)
                    (HOP, 0x18)
                    (CLIFF_JUMP, 0x19)
                    (REMOVE_KART, 0x1a)
                    (NORMAL_GRAVITY, 0x1b)
                    (CHANGED_GRAVITY, 0x1c)
                    (SPIN_TURN_JUMP, 0x1d)
                    (CONTROL, 0x1e)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xd)
                    (INHERIT_SPEED, 0xc)
                );
            }
            pub mod special_hi_shoot {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xe)
                    (FALL, 0xc)
                    (ACTION, 0xd)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xd)
                    (INHERIT_SPEED, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE, 0xc)
                );
            }
        }
    }
    pub mod duckhunt {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x52)
                (THROW_N_OFFSET_X, 0x4c)
                (THROW_N_OFFSET_Y, 0x4d)
                (THROW_N_OFFSET_Z, 0x4e)
                (SMASH_S_CHARGE_FRAME, 0x4f)
                (SHOOT_POS_X, 0x50)
                (SHOOT_POS_Y, 0x51)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_CHARGE, 0xbd)
                (SPECIAL_LW_REMOVE, 0xbe)
                (SPECIAL_N_FRAMES_AFTER_LAST3PS, 0xbf)
                (SPECIAL_S_FRAME, 0xc0)
                (SPECIAL_LW_RANDOM_TABLE, 0xc1)
                (SPECIAL_S_SHOOT_TIMER, 0xc2)
                (SPECIAL_S_DISABLE_SHOOT_CAN_FRAME, 0xc3)
                (THREE_SHOTS_INVALID_FRAMES, 0xc4)
                (TRIGGER_TIMER, 0xc5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_S_HOP, 0xe0)
                (GUNMAN_OK, 0xe1)
                (RELEASE_CAN, 0xe2)
                (RELEASE_CLAY, 0xe3)
                (RELEASE_GUNMAN, 0xe4)
                (REQUEST_SPECIAL_HI_CANCEL, 0xe5)
                (ENABLE_SPECIAL_HI_CANCEL, 0xe6)
                (SPECIAL_HI_CANCELED, 0xe7)
                (SPECIAL_S_CLAY_HIT, 0xe8)
            );
        }
        pub mod status {
            use super::*;
            pub mod common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (RETICLE_IS_AVAILABLE, 0xc)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (ATTACK_S4_PREV_X, 0xa)
                    (ATTACK_S4_PREV_Y, 0xb)
                    (ATTACK_S4_PREV_VECTOR, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SHOOT_NUM_BY_SMASH, 0x11)
                    (SHOOT_SMASH_TIMER, 0x12)
                    (SHOOT_SMASH_TIMER_2, 0x13)
                    (SHOOT_SMASH_TIMER_3, 0x14)
                    (SHOOT_SMASH_TIMER_4, 0x15)
                    (SMASH_DELAY_FRAME, 0x16)
                    (SMASH_RETICLE_DISPLAY_FRAME, 0x17)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SMASH_3SHOTS_OK, 0x21)
                    (SMASH_HIT, 0x22)
                );
            }
            pub mod special_hi_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (TURN_TIME, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DISABLE_LANDING_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TURN, 0xc)
                    (REQUEST_TURN, 0xd)
                );
            }
            pub mod special_hi_fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (SPEED_X, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME_COUNT, 0x6)
                    (FLAP_COUNT, 0x7)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (GUNMAN_INIT_STATUS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (KINETIC_CHANGED, 0xc)
                    (CALL_TRIGGER, 0xd)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_FINALDUCK_TASK_ID, 0x6)
                (FINAL_COUNT, 0x7)
                (FINAL_END, 0x8)
                (FINAL_GUNMAN_KIND, 0x9)
                (FINAL_GUNMAN_STATUS, 0xa)
                (FINAL_ENEMY_KIND, 0xb)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_SUCCESS, 0xc)
                (FINAL_ABS_SET, 0xd)
                (FINAL_ABS_GET, 0xe)
                (FINAL_ABS_HIT, 0xf)
                (FINAL_MOT_CHANGE, 0x10)
                (FINAL_CLEAR_SLOW, 0x11)
                (FINAL_NO_DEAD_OFF, 0x12)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x13)
                (FINAL_STEREO_FADE_OUT_START, 0x14)
                (FINAL_STEREO_FADE_IN_START, 0x15)
                (FINAL_STEREO_FADE_FLAG, 0x16)
                (FINAL_END_GROUND_CORRECT_ON, 0x17)
                (FINAL_END_GROUND_CORRECT_SET, 0x18)
                (FINAL_SUCCESS_FRAME, 0x19)
                (FINAL_END_EXIT, 0x1a)
                (FINAL_END_EXIT_FINISH, 0x1b)
            );
        }
    }
    pub mod ryu {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (LADDER_CATCH_BOTTOM_CANCEL_FRAME, 0x4d)
                (OPPONENT_LR_1ON1, 0x4e)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe2)
                (TERM, 0xeb)
                (SPECIAL_AIR_N, 0xe3)
                (SPECIAL_AIR_LW, 0xe4)
                (SPECIAL_AIR_N_HOP, 0xe5)
                (DISABLE_AIR_SPECIAL_S, 0xe6)
                (NEAR_OPPONENT, 0xe7)
                (SKIP_CHECK, 0xe8)
                (FINAL_STANDBY_ATTACK_STOP, 0xe9)
                (FINAL_HIT_CANCEL, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (BUTTON_ON_FRAME, 0x11)
                    (FRAME, 0x12)
                    (NEAR_INPUT, 0x13)
                    (LOG_KIND, 0x14)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (TERM, 0x2a)
                    (BRANCH, 0x21)
                    (WEAK, 0x22)
                    (HIT_CANCEL, 0x23)
                    (WEAK_CANCEL, 0x24)
                    (SAME_ATTACK_CANCEL, 0x25)
                    (BUTTON_TRIGGER, 0x26)
                    (RELEASE_BUTTON, 0x27)
                    (WEAK_BRANCH_FRAME_FIRST, 0x28)
                    (CHANGE_LOG, 0x29)
                );
            }
            pub mod turn {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xf)
                    (RESERVE_DASH, 0x10)
                    (TERM, 0x11)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (PASS_FLOAT_START, 0x6)
                (PASS_FLOAT_SPEED_Y, 0x7)
                (PASS_FLOAT_OFFSET_Y, 0x8)
                (SPECIAL_N_FLOAT_START, 0x6)
                (SPECIAL_N_FLOAT_TERM, 0x7)
                (SPECIAL_S_FLOAT_START, 0x6)
                (SPECIAL_S_FLOAT_TERM, 0x7)
                (SPECIAL_HI_FLOAT_START, 0x6)
                (SPECIAL_HI_FLOAT_SPEED_MUL, 0x7)
                (SPECIAL_HI_FLOAT_TERM, 0x8)
                (SPECIAL_LW_FLOAT_START, 0x6)
                (SPECIAL_LW_FLOAT_HIT_FRAME, 0x7)
                (SPECIAL_LW_FLOAT_CONTACT_FIGHTER_DIST, 0x8)
                (SPECIAL_LW_FLOAT_ENDURANCE, 0x9)
                (SPECIAL_LW_FLOAT_MATERIAL_ANIME_FRAME, 0xa)
                (SPECIAL_LW_FLOAT_START_LR, 0xb)
                (SPECIAL_LW_FLOAT_TERM, 0xc)
                (FINAL_FLOAT_START, 0x6)
                (FINAL_FLOAT_DIST_MIN, 0x7)
                (FINAL_FLOAT_MOVE_X, 0x8)
                (FINAL_FLOAT_MOVE_Y, 0x9)
                (FINAL_FLOAT_PREV_POS_X, 0xa)
                (FINAL_FLOAT_PREV_POS_Y, 0xb)
                (FINAL_FLOAT_LAST_HIT_POS_X, 0xc)
                (FINAL_FLOAT_LAST_HIT_POS_Y, 0xd)
                (FINAL_FLOAT_LAST_HIT_POS_Z, 0xe)
                (FINAL_FLOAT_ORIGINAL_BG_COLOR_R, 0xf)
                (FINAL_FLOAT_ORIGINAL_BG_COLOR_G, 0x10)
                (FINAL_FLOAT_ORIGINAL_BG_COLOR_B, 0x11)
                (FINAL_FLOAT_ORIGINAL_BG_COLOR_A, 0x12)
                (FINAL_FLOAT_ORIGINAL_COLOR_RATE, 0x13)
                (FINAL_FLOAT_TERM, 0x14)
            );
            make_work_ids!(
                Int,
                Status,
                (SPECIAL_COMMON_INT_START, 0x4)
                (SPECIAL_COMMON_INT_STRENGTH, 0x5)
                (SPECIAL_COMMON_INT_BUTTON_ON_TIMER, 0x6)
                (SPECIAL_COMMON_INT_TERM, 0x7)
                (PASS_INT_START, 0x5)
                (PASS_INT_FRAME, 0x6)
                (SPECIAL_N_INT_START, 0x6)
                (SPECIAL_N_INT_TYPE, 0x7)
                (SPECIAL_N_INT_MOTION_KIND, 0x8)
                (SPECIAL_N_INT_MOTION_KIND_AIR, 0x9)
                (SPECIAL_N_INT_TERM, 0xa)
                (SPECIAL_S_INT_START, 0x6)
                (SPECIAL_S_INT_START_SITUATION, 0x7)
                (SPECIAL_S_INT_LOOP_COUNT, 0x8)
                (SPECIAL_S_INT_EFFECT_HANDLE, 0x9)
                (SPECIAL_S_INT_MOTION_GROUND, 0xa)
                (SPECIAL_S_INT_MOTION_AIR, 0xb)
                (SPECIAL_S_INT_TERM, 0xc)
                (SPECIAL_HI_INT_START, 0x6)
                (SPECIAL_HI_INT_START_SITUATION, 0x7)
                (SPECIAL_HI_INT_COUNTER, 0x8)
                (SPECIAL_HI_INT_TERM, 0x9)
                (SPECIAL_LW_INT_START, 0x6)
                (SPECIAL_LW_INT_CHARGE_COUNTER, 0x7)
                (SPECIAL_LW_INT_SUPER_ARMOUR_COUNT, 0x8)
                (SPECIAL_LW_INT_STEP_CHANCEL, 0x9)
                (SPECIAL_LW_INT_SPECIAL_COMMAND_LIFE_MAX, 0xa)
                (SPECIAL_LW_INT_TERM, 0xb)
                (SPECIAL_LW_INT_SAVING_LV, 0x5)
                (FINAL_INT_START, 0x4)
                (FINAL_INT_COUNTER, 0x5)
                (FINAL_INT_TARGET_BATTLE_OBJECT_ID, 0x6)
                (FINAL_INT_LAST_ATTACK_VECTOR, 0x7)
                (FINAL_INT_INVISIBLE_STAGE_TIME, 0x8)
                (FINAL_INT_CAMERA_OFFSET_TYPE, 0x9)
                (FINAL_INT_KEN_ATTACK_NUM, 0xa)
                (FINAL_INT_TERM, 0xb)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPECIAL_COMMON_FLAG_START, 0xb)
                (SPECIAL_COMMON_FLAG_COMMAND, 0xc)
                (SPECIAL_COMMON_FLAG_MOTION_FIRST, 0xd)
                (SPECIAL_COMMON_FLAG_TERM, 0xe)
                (PASS_FLAG_START, 0xc)
                (PASS_FLAG_COMMAND_EXTEND, 0xd)
                (SPECIAL_N_FLAG_START, 0xd)
                (SPECIAL_N_FLAG_SHOOT, 0xe)
                (SPECIAL_N_FLAG_FAILED, 0xf)
                (SPECIAL_N_FLAG_FIRED, 0x10)
                (SPECIAL_N_FLAG_SPECIAL_FALL, 0x11)
                (SPECIAL_N_FLAG_TERM, 0x12)
                (SPECIAL_S_FLAG_START, 0xd)
                (SPECIAL_S_FLAG_GROUND, 0xe)
                (SPECIAL_S_FLAG_PLAY_LANDING_SE, 0xf)
                (SPECIAL_S_FLAG_TERM, 0x10)
                (SPECIAL_HI_FLAG_START, 0xd)
                (SPECIAL_HI_FLAG_REVERSE_LR, 0xe)
                (SPECIAL_HI_FLAG_DECIDE_STRENGTH, 0xf)
                (SPECIAL_HI_FLAG_JUMP, 0x10)
                (SPECIAL_HI_FLAG_TERM, 0x11)
                (SPECIAL_LW_FLAG_START, 0xd)
                (SPECIAL_LW_FLAG_RELEASE_BUTTON, 0xe)
                (SPECIAL_LW_FLAG_HIT, 0xf)
                (SPECIAL_LW_FLAG_AIR_FIRST, 0x10)
                (SPECIAL_LW_FLAG_CONTACT_FIGHTER, 0x11)
                (SPECIAL_LW_FLAG_DISABLE_SUPER_ARMOR, 0x12)
                (SPECIAL_LW_FLAG_REVERSE_MATERIAL_ANIM, 0x13)
                (SPECIAL_LW_FLAG_STOP_MATERIAL_ANIM, 0x14)
                (SPECIAL_LW_FLAG_HIT_FRONT, 0x15)
                (SPECIAL_LW_FLAG_TERM, 0x16)
                (FINAL_FLAG_START, 0xb)
                (FINAL_FLAG_MOTION_FIRST, 0xc)
                (FINAL_FLAG_BRANCH_HIT, 0xd)
                (FINAL_FLAG_ATTACK_END, 0xe)
                (FINAL_FLAG_CAMERA_OFFSET, 0xf)
                (FINAL_FLAG_ATTACK_END_SET_PARAM, 0x10)
                (FINAL_FLAG_HIT, 0x11)
                (FINAL_FLAG_ATTACK_HIT_LINK, 0x12)
                (FINAL_FLAG_ATTACK_HIT, 0x13)
                (FINAL_FLAG_TARGET_HIT, 0x14)
                (FINAL_FLAG_REMOVE_FINAL_AURA, 0x15)
                (FINAL_FLAG_LOCK_ATTACK, 0x16)
                (FINAL_FLAG_INVISIBLE_STAGE, 0x17)
                (FINAL_FLAG_AIR, 0x18)
                (FINAL_FLAG_AKEBONO_FINISH, 0x19)
                (FINAL_FLAG_ADJUST_SHINRYUKEN_POS, 0x1a)
                (FINAL_FLAG_TERM, 0x1b)
            );
        }
    }
    pub mod cloud {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x4b)
                (TERM, 0x4f)
                (LIMIT_GAUGE, 0x4c)
                (CATCH_CUT_DAMAGE, 0x4d)
                (LIMIT_GAUGE_NOTICE, 0x4e)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIMIT_GAUGE_EFFECT, 0xbd)
                (LIMIT_GAUGE_REMOVE_FRAME, 0xbe)
                (KYOU_EFFECT, 0xbf)
                (KYOU_EFFECT2, 0xc0)
                (EFFECT_KIND_SWORD_FLARE, 0xc1)
                (EFFECT_KIND_SWORD_FLARE_LB, 0xc2)
                (EFFECT_KIND_CLIMHAZZARD_SWORD, 0xc3)
                (EFFECT_KIND_CLIMHAZZARD_SWORD_LB, 0xc4)
                (LIMIT_BREAK_CLEAR_FRAME, 0xc5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (LIMIT_BREAK, 0xe0)
                (LIMIT_BREAK_SET_CUSTOM, 0xe1)
                (LIMIT_BREAK_SPECIAL, 0xe2)
                (SPECIAL_AIR_N, 0xe3)
                (SPECIAL_AIR_N_HOP, 0xe4)
                (SPECIAL_AIR_LW_BRAKE, 0xe5)
                (SPECIAL_HI2_LIMIT_BREAK, 0xe6)
                (SPECIAL_AIR_S_HOP, 0xe7)
                (SPECIAL_LW_DAMAGE, 0xe8)
                (SPECIAL_LW_CAPTURE, 0xe9)
                (SPECIAL_LW_DAMAGE_ELEC, 0xea)
                (LIMIT_GAUGE_CHARGE, 0xeb)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x5)
                    (MOTION_KIND_AIR, 0x6)
                    (CHANGE_STATUS, 0x7)
                    (SITUATION_PREV, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INPUT_CHECK, 0xc)
                    (INPUT_SUCCESS, 0xd)
                    (INPUT_FAILURE, 0xe)
                    (MOTION_CHANGE_ENABLE, 0xf)
                    (HIT_ATTACK, 0x10)
                    (LB_SCENE, 0x11)
                    (SPECIAL_FALL, 0x12)
                    (DETACH_EFFECT, 0x13)
                    (HIT_TURN, 0x14)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x10)
                    (PREV_MOTION_SPEED_Y, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_2_SHIFT_INPUT, 0x12)
                    (IS_NORMAL_GRAVITY_START, 0x13)
                    (IS_NORMAL_GRAVITY, 0x14)
                    (IS_ENABLE_CONTROL, 0x15)
                    (FALL, 0x16)
                    (SHIFT, 0x17)
                    (SHIFT_RESERVE, 0x18)
                    (LB_SCENE, 0x19)
                );
            }
            pub mod special_hi2 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (FALL_FRAME, 0x5)
                    (HIT_OBJECT_ID, 0x6)
                    (HIT_OBJECT_NUM, 0x15)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOTION_SPEED, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CANCEL_STATUS, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (LB_SCENE, 0xc)
                    (CANCEL_JUMP_MINI_ATTACK, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x12)
                    (MOVE_TARGET_X, 0x7)
                    (MOVE_TARGET_Y, 0x8)
                    (MOVE_ANGLE, 0x9)
                    (MOVE_SPEED, 0xa)
                    (ATTACK_TARGET_LR, 0xb)
                    (ATTACK_TARGET_BASE_X, 0xc)
                    (ATTACK_TARGET_BASE_Y, 0xd)
                    (ATTACK_TARGET_OFFSET_X, 0xe)
                    (ATTACK_TARGET_OFFSET_Y, 0xf)
                    (FUSIONSWORD_FALL_SPEED, 0x10)
                    (FUSIONSWORD_FALL_OFFSET_Y, 0x11)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_REQUEST_LOOP_DAMAGE_MOTION, 0x19)
                    (DASH_COUNT, 0x5)
                    (DASH_CLIFF_CHECK_COUNT, 0x6)
                    (ATTACK_HIT_NUM, 0x7)
                    (ATTACK_HIT_MOVE_NUM, 0x8)
                    (ATTACK_HIT_OBJECT_ID, 0x9)
                    (ATTACK_HIT_OBJECT_ID_TERM, 0x18)
                    (ATTACK_HIT_BATTLE_NUM, 0x1a)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK_HIT, 0xc)
                    (ATTACK_END_HIT, 0xd)
                    (ENABLE_MOVE, 0xe)
                    (MOVE_END, 0xf)
                    (ATTACK_REQUEST_LOOP_DAMAGE_MOTION_VARIATION, 0x11)
                    (FALL_START, 0x12)
                    (HIT_ALL_OPPONENT, 0x13)
                    (DISP_WINDOW, 0x14)
                    (DISP_WINDOW_PREV, 0x15)
                    (IS_CONSTRAIN_END_CHANGED, 0x16)
                    (IS_CONSTRAIN_END_REQUEST, 0x17)
                    (HIT_2_OPPONENT, 0x18)
                    (SET_GROUND_CORRECT, 0x19)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (SPECIAL_N_FLOAT_START, 0x6)
                (SPECIAL_N_FLOAT_TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (SPECIAL_N_INT_START, 0x4)
                (SPECIAL_N_INT_TERM, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPECIAL_N_FLAG_START, 0xb)
                (SPECIAL_N_FLAG_SPECIAL_FALL, 0xc)
                (SPECIAL_N_FLAG_TERM, 0xd)
            );
        }
    }
    pub mod kamui {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (BLADE_AURA_EFFECT_HANDLE, 0xbd)
                (TRANSFORM_WIND_EFFECT_HANDLE, 0xbe)
                (TRANSFORM_WIND_EFFECT_HANDLE_2, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xeb)
                (SPECIAL_N_BUOYANCY, 0xe0)
                (SPECIAL_N_BUOYANCY_BITE, 0xe1)
                (SPECIAL_S_DISABLE, 0xe2)
                (SPECIAL_S_DISABLE_FOR_JUMP, 0xe3)
                (SPECIAL_S_ATTACK_START, 0xe4)
                (REQ_EFFECT_SWORD_AURA, 0xe5)
                (OFF_EFFECT_SWORD_AURA, 0xe6)
                (REQ_EFEECT_TRANSFORM_WIND, 0xe7)
                (OFF_EFEECT_TRANSFORM_WIND, 0xe8)
                (FINAL_OTHER_VISIBLE, 0xe9)
                (IS_KIRBY_DRAGONHAND, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xb)
                    (HOLD_FRAME, 0x7)
                    (HOLD_RATE, 0x8)
                    (SHOT_MOTION_FRAME, 0x9)
                    (BITE_HOLD_RATE, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME_PREVIOUS_INPUT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (END_HOLD, 0xc)
                    (SHOOT, 0xd)
                    (AIR_CONTROL, 0xe)
                    (MOTION_END2, 0xf)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (AIR_CONTROL_SPEED_X_LIMIT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK, 0xc)
                    (RESET_NEWTRAL_X, 0xd)
                    (RESET_NEWTRAL_Y, 0xe)
                    (ENABLE_KICK_BUTTON_TRIGGER, 0xf)
                    (ENABLE_KICK_BUTTON_ON, 0x10)
                    (AIR_CONTROL, 0x11)
                    (MOVE_KINETIC_PARAM, 0x12)
                    (CHANGE_JUMP_ACCEL_Y, 0x13)
                    (WALL_ATTACK_B_REVERSE_LR, 0x14)
                    (IS_WALL_PIERCE, 0x15)
                    (AIR_CONTROL_UPDATE, 0x16)
                    (JUMP_MOTION_RATE_SYNC_WEAPON, 0x17)
                    (JUMP_CONTROL, 0x18)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x10)
                    (TERM, 0x13)
                    (TILT_BODY_DEGREE, 0x11)
                    (RETURN_TILT_BODY_DEGREE_ONCE, 0x12)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TILT_BODY_STATE, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (AIR_CONTROL, 0x12)
                    (TILT_BODY_ON, 0x13)
                    (TRANS_MOVE_SET_ANGLE, 0x14)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (APPLY_POWERUP_MOTION_RATE, 0x10)
                    (IS_ATTACK_ENEMY, 0x11)
                    (SPECIAL_EFFECT, 0x12)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (REQUEST_10_HOLDATTACK_RUMBLE, 0x21)
                    (TERM, 0x22)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
                (FINAL_FOV_RATE_SCENE_ATTACK, 0xb)
                (FINAL_INIT_SCALE, 0xc)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x5)
                (FINAL_COUNT, 0x6)
                (FINAL_END, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_START, 0xb)
                (FINAL_TERM, 0x1f)
                (FINAL_SUCCESS, 0xc)
                (FINAL_ABS_SET, 0xd)
                (FINAL_ABS_GET, 0xe)
                (FINAL_ABS_HIT, 0xf)
                (FINAL_CLEAR_SLOW, 0x10)
                (FINAL_NO_DEAD_OFF, 0x11)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x12)
                (FINAL_STEREO_FADE_OUT_START, 0x13)
                (FINAL_STEREO_FADE_IN_START, 0x14)
                (FINAL_STEREO_FADE_FLAG, 0x15)
                (FINAL_END_GROUND_CORRECT_ON, 0x16)
                (FINAL_END_GROUND_CORRECT_SET, 0x17)
                (FINAL_SUCCESS_FRAME, 0x18)
                (FINAL_MOT_CHANGE, 0x19)
                (FINAL_ZOOM_START, 0x1a)
                (FINAL_CLEAR_ATTACK, 0x1b)
                (FINAL_FOV_CHANGE, 0x1c)
                (FINAL_END_EXIT, 0x1d)
                (FINAL_END_EXIT_FINISH, 0x1e)
            );
        }
    }
    pub mod bayonetta {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (WITCH_TIME_CUR_FRAME, 0x4c)
                (WITCH_TIME_FRAME, 0x4d)
                (SPECIAL_LW_SLOW_TIME, 0x4e)
                (CLIMAX_GAUGE, 0x4f)
                (SPECIAL_LANDING_FRAME, 0x50)
                (SHARE_ADJUST_SCALE, 0x51)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_AIR_S_USED_COUNT, 0xbd)
                (SPECIAL_AIR_S_REUSE_FRAME, 0xbe)
                (SPECIAL_AIR_S_D_ENABLE_FRAME, 0xbf)
                (SPECIAL_AIR_S_DISABLE_JUMP_AFTER_FRAME, 0xc0)
                (SPECIAL_HI_USED_COUNT, 0xc1)
                (FINAL_STEP, 0xc2)
                (FINAL_TIME_LIMIT, 0xc3)
                (FINAL_GAUGE_COUNT, 0xc4)
                (FINAL_SE_HANDLE_FINAL02, 0xc5)
                (BAT_WITH_IN_STATE, 0xc6)
                (WITCH_TIME_XLU_FRAME, 0xc7)
                (SHOOTING_STEP, 0xc8)
                (SHOOTING_FRAME, 0xc9)
                (EFFECT_KIND_BAYONETTA_ATTACK_LINE1, 0xca)
                (EFFECT_KIND_BAYONETTA_ATTACK_LINE2, 0xcb)
                (EFFECT_KIND_BAYONETTA_ATTACK_ARC1, 0xcc)
                (EFFECT_KIND_BAYONETTA_ATTACK_ARC2, 0xcd)
                (EFFECT_KIND_BAYONETTA_ATTACK_ARC3, 0xce)
                (EFFECT_KIND_BAYONETTA_ATTACK_100A, 0xcf)
                (EFFECT_KIND_BAYONETTA_ATTACK_100B, 0xd0)
                (EFFECT_KIND_BAYONETTA_ATTACK_100END, 0xd1)
                (EFFECT_KIND_BAYONETTA_STILETTO, 0xd2)
                (EFFECT_KIND_BAYONETTA_AFTERBURNER_LINE, 0xd3)
                (EFFECT_KIND_BAYONETTA_WITCHTWIST_WIND, 0xd4)
                (EFFECT_KIND_BAYONETTA_WITCHTWIST_SPIRAL, 0xd5)
                (EFFECT_KIND_11, 0xd6)
                (EFFECT_KIND_12, 0xd7)
                (EFFECT_KIND_13, 0xd8)
                (EFFECT_KIND_14, 0xd9)
                (FINAL_EFFECT_HANDLE_START, 0xda)
                (FINAL_SCREEN_EFFECT_HANDLE, 0xda)
                (FINAL_CLOCK_EFFECT_HANDLE, 0xdb)
                (FINAL_GAUGE_CIRCLE_EFFECT_HANDLE, 0xdc)
                (FINAL_GAUGE_CIRCLE_UV_EFFECT_HANDLE, 0xdd)
                (FINAL_GAUGE_MOON_EFFECT_HANDLE, 0xde)
                (FINAL_GAUGE_SPELL_1_EFFECT_HANDLE, 0xdf)
                (FINAL_GAUGE_SPELL_2_EFFECT_HANDLE, 0xe0)
                (FINAL_GAUGE_SPELL_3_EFFECT_HANDLE, 0xe1)
                (FINAL_GAUGE_SPELL_4_EFFECT_HANDLE, 0xe2)
                (FINAL_GAUGE_SPELL_5_EFFECT_HANDLE, 0xe3)
                (FINAL_GAUGE_SPELL_6_EFFECT_HANDLE, 0xe4)
                (FINAL_GAUGE_SPELL_7_EFFECT_HANDLE, 0xe5)
                (FINAL_GAUGE_SPELL_8_EFFECT_HANDLE, 0xe6)
                (FINAL_EFFECT_HANDLE_END, 0xe6)
                (COSTUME_KIND, 0xe7)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xf4)
                (SPECIAL_N_FOOT, 0xe0)
                (SPECIAL_N_EFFECT_OFF, 0xe1)
                (DISABLE_AIR_SPECIAL_S, 0xe2)
                (AIR_SPECIAL_S_U_TO_D, 0xe3)
                (DISABLE_AIR_SPECIAL_HI, 0xe4)
                (SPECIAL_HI_AFTER_ACTION, 0xe5)
                (SPECIAL_AIR_LW, 0xe6)
                (WITCH_TIME, 0xe7)
                (NEXT_NO_COMP, 0xe8)
                (PREV_NO_COMP_FLAG, 0xe9)
                (FINAL_REVERB, 0xea)
                (FINAL_HIT_XLU, 0xeb)
                (FAILED_BAT_WITH_IN, 0xec)
                (SUCCESS_BAT_WITH_IN, 0xed)
                (SHOOTING_ACTION, 0xee)
                (SHOOTING_MOTION_STOP, 0xef)
                (SHOOTING_CHECK_END, 0xf0)
                (SHOOTING_KEEP, 0xf1)
                (SHOOTING_DISABLE_ROOT_ATTACK, 0xf2)
                (SHOOTING_FORBID, 0xf3)
            );
        }
        pub mod status {
            use super::*;
            pub mod jump {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x5)
                    (JUMP_COUNT_BACKUP, 0x6)
                    (ITEM_SCREW_JUMP_COUNT_BACKUP, 0x7)
                    (TERM, 0x8)
                );
            }
            pub mod landing {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (SPECIAL_STIFFNESS_FRAME, 0x8)
                );
            }
            pub mod langind {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x9)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (WITCH_TIME_SMASH_HOLD, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (TERM, 0x21)
                );
            }
            pub mod item_swing {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0xc)
                    (WITCH_TIME_SMASH_HOLD, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod attack_dash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x5)
                    (TERM, 0x8)
                    (SPEED_COEFFICIENT, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REDUCTION_LEFT, 0x7)
                );
            }
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOTION_RESTART_FRAME, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x7)
                    (LOOP_MOTION_KIND, 0x8)
                    (LOOP_COUNT, 0x9)
                    (STEP, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (TERM, 0x16)
                    (SHOOTING, 0xf)
                    (ATTACK_BUTTON_RELEASE, 0x10)
                    (CHECK_HOLD, 0x11)
                    (LOOPED, 0x12)
                    (CONTINUE, 0x13)
                    (CONTINUE_CHECK, 0x14)
                    (LANDING_DISABLE_ATTACK, 0x15)
                );
            }
            pub mod attack_air_f {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (TERM, 0x13)
                    (SHOOTING, 0xf)
                    (CONNECT_COMBO, 0x10)
                    (ENABLE_COMBO, 0x11)
                    (HIT_SPEED_Y, 0x12)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (SPECIAL_COMMON_FLOAT_START, 0x6)
                (SPECIAL_COMMON_FLOAT_ESCAPE_AIR_DIR_X, 0x7)
                (SPECIAL_COMMON_FLOAT_ESCAPE_AIR_DIR_Y, 0x8)
                (SPECIAL_COMMON_FLOAT_TERM, 0x9)
                (BATWITHIN_FLOAT_START, 0x8)
                (BATWITHIN_FLOAT_TERM, 0x9)
                (SPECIAL_N_FLOAT_START, 0x8)
                (SPECIAL_N_FLOAT_MOTION_RATE, 0x9)
                (SPECIAL_N_FLOAT_SPECIAL_LANDING_FRAME, 0xa)
                (SPECIAL_N_FLOAT_MOTION_END_CANCEL_FRAME, 0xb)
                (SPECIAL_N_FLOAT_TERM, 0xc)
                (SPECIAL_S_FLOAT_START, 0x8)
                (SPECIAL_S_FLOAT_GROUND_ANGLE, 0x9)
                (SPECIAL_S_FLOAT_GUARD_FRAME, 0xa)
                (SPECIAL_S_FLOAT_TERM, 0xb)
                (SPECIAL_AIR_S_FLOAT_START, 0x8)
                (SPECIAL_AIR_S_FLOAT_TERM, 0x9)
                (SPECIAL_AIR_S_U_FLOAT_START, 0x8)
                (SPECIAL_AIR_S_U_FLOAT_MOTION_SPEED_X, 0x9)
                (SPECIAL_AIR_S_U_FLOAT_MOTION_SPEED_Y, 0xa)
                (SPECIAL_AIR_S_U_FLOAT_TERM, 0xb)
                (SPECIAL_AIR_S_D_FLOAT_START, 0x8)
                (SPECIAL_AIR_S_D_FLOAT_TERM, 0x9)
                (SPECIAL_HI_FLOAT_START, 0x8)
                (SPECIAL_HI_FLOAT_TERM, 0x9)
                (SPECIAL_LW_FLOAT_START, 0x8)
                (SPECIAL_LW_FLOAT_SEARCH_FIX_POS_X, 0x9)
                (SPECIAL_LW_FLOAT_SEARCH_FIX_POS_Y, 0xa)
                (SPECIAL_LW_FLOAT_SEARCH_FIX_POS_Z, 0xb)
                (SPECIAL_LW_FLOAT_WITCH_TIME_SLOW_TIME, 0xc)
                (SPECIAL_LW_FLOAT_TERM, 0xd)
                (FINAL_FLOAT_START, 0x6)
                (FINAL_FLOAT_PX, 0x7)
                (FINAL_FLOAT_PY, 0x8)
                (FINAL_FLOAT_LR, 0x9)
                (FINAL_FLOAT_Z, 0xa)
                (FINAL_FLOAT_TERM, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (SPECIAL_COMMON_INT_START, 0x4)
                (SPECIAL_COMMON_INT_TERM, 0x5)
                (BATWITHIN_INT_START, 0x4)
                (BATWITHIN_INT_STATUS_KIND, 0x5)
                (BATWITHIN_INT_STEP, 0x6)
                (BATWITHIN_INT_COUNT, 0x7)
                (BATWITHIN_INT_TERM, 0x8)
                (SPECIAL_N_INT_START, 0x4)
                (SPECIAL_N_INT_MOTION_KIND_G, 0x5)
                (SPECIAL_N_INT_MOTION_KIND_A, 0x6)
                (SPECIAL_N_INT_STEP, 0x7)
                (SPECIAL_N_INT_TRIGGER_COUNT, 0x8)
                (SPECIAL_N_INT_CHARGE_FRAME, 0x9)
                (SPECIAL_N_INT_CANCEL_FRAME, 0xa)
                (SPECIAL_N_INT_TERM, 0xb)
                (SPECIAL_N_INT_ADD_FIRE_COUNT, 0x7)
                (SPECIAL_S_INT_START, 0x4)
                (SPECIAL_S_INT_FRAME, 0x5)
                (SPECIAL_S_INT_ENABLE_HIT_CANCEL_FRAME, 0x6)
                (SPECIAL_S_INT_TERM, 0x7)
                (SPECIAL_AIR_S_INT_START, 0x4)
                (SPECIAL_AIR_S_INT_TERM, 0x5)
                (SPECIAL_AIR_S_U_INT_START, 0x4)
                (SPECIAL_AIR_S_U_INT_STEP, 0x5)
                (SPECIAL_AIR_S_U_INT_TERM, 0x6)
                (SPECIAL_AIR_S_D_INT_START, 0x4)
                (SPECIAL_AIR_S_D_INT_COUNTER, 0x5)
                (SPECIAL_AIR_S_D_INT_TERM, 0x6)
                (SPECIAL_HI_INT_START, 0x4)
                (SPECIAL_HI_INT_TERM, 0x5)
                (SPECIAL_LW_INT_START, 0x7)
                (SPECIAL_LW_INT_WITCH_TIME_CANCEL_FRAME, 0x8)
                (SPECIAL_LW_INT_TERM, 0x9)
                (FINAL_INT_START, 0x4)
                (FINAL_INT_TASK_ID_COUNT, 0x5)
                (FINAL_INT_COUNT, 0x6)
                (FINAL_INT_END, 0x7)
                (FINAL_INT_SET_TARGET_VISIBILITY, 0x8)
                (FINAL_INT_COLOR_CORRECTION_INDEX, 0x9)
                (FINAL_INT_GROUND_MOTION_KIND, 0xa)
                (FINAL_INT_AIR_MOTION_KIND, 0xb)
                (FINAL_INT_CLIMAX_GAUGE_STEP, 0xc)
                (FINAL_INT_CLIMAX_GAUGE_COUNTER, 0xd)
                (FINAL_INT_SELF_BATTLE_OBJECT_ID, 0xe)
                (FINAL_INT_FINAL_START_SITUATION, 0xf)
                (FINAL_INT_TERM, 0x10)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPECIAL_COMMON_FLAG_START, 0xb)
                (SPECIAL_COMMON_FLAG_MOTION_FIRST, 0xc)
                (SPECIAL_COMMON_FLAG_TERM, 0xd)
                (BATWITHIN_FLAG_START, 0xc)
                (BATWITHIN_FLAG_RETURN, 0xd)
                (BATWITHIN_FLAG_TERM, 0xe)
                (SPECIAL_N_FLAG_START, 0xc)
                (SPECIAL_N_FLAG_SPECIAL_N_FOOT, 0xd)
                (SPECIAL_N_FLAG_SPECIAL_N_START_CANCEL_OK, 0xe)
                (SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX, 0xf)
                (SPECIAL_N_FLAG_RELEASE_BUTTON, 0x10)
                (SPECIAL_N_FLAG_CHECK_ADD_FIRE, 0x11)
                (SPECIAL_N_FLAG_LEFT_FIRE, 0x12)
                (SPECIAL_N_FLAG_REQ_REMOVE_BULLETCLIMAX_CIRCLE, 0x13)
                (SPECIAL_N_FLAG_REMOVE_BULLETCLIMAX_CIRCLE, 0x14)
                (SPECIAL_N_FLAG_KIBY_HIDE_GUN, 0x15)
                (SPECIAL_N_FLAG_TERM, 0x16)
                (SPECIAL_S_FLAG_START, 0xc)
                (SPECIAL_S_FLAG_HIT, 0xd)
                (SPECIAL_S_FLAG_HIT_CANCEL_OK, 0xe)
                (SPECIAL_S_FLAG_HOLD_END_CHECK, 0xf)
                (SPECIAL_S_FLAG_SHOOTING_SPEED_MUL, 0x10)
                (SPECIAL_S_FLAG_WALL_CHECK, 0x11)
                (SPECIAL_S_FLAG_NEAR_CLIFF, 0x12)
                (SPECIAL_S_FLAG_END_SPECIAL_S, 0x13)
                (SPECIAL_S_FLAG_END_SPECIAL_S_CHANGE_MOTION, 0x14)
                (SPECIAL_S_FLAG_GUARD_SPEED_MUL, 0x15)
                (SPECIAL_S_FLAG_HIT_BEFORE_GUARD, 0x16)
                (SPECIAL_S_FLAG_LANDING_FALL_SPECIAL, 0x17)
                (SPECIAL_S_FLAG_TERM, 0x18)
                (SPECIAL_AIR_S_FLAG_START, 0xc)
                (SPECIAL_AIR_S_FLAG_REUSE, 0xd)
                (SPECIAL_AIR_S_FLAG_SHOOTING_SPEED_MUL, 0xe)
                (SPECIAL_AIR_S_FLAG_WALL_CHECK, 0xf)
                (SPECIAL_AIR_S_FLAG_TERM, 0x10)
                (SPECIAL_AIR_S_U_FLAG_START, 0xf)
                (SPECIAL_AIR_S_U_FLAG_HIT, 0x10)
                (SPECIAL_AIR_S_U_FLAG_INIT_SHOOTING, 0x11)
                (SPECIAL_AIR_S_U_FLAG_SITUATION_KEEP, 0x12)
                (SPECIAL_AIR_S_U_FLAG_TERM, 0x13)
                (SPECIAL_AIR_S_D_FLAG_START, 0xf)
                (SPECIAL_AIR_S_D_FLAG_HIT, 0x10)
                (SPECIAL_AIR_S_D_FLAG_HIT_AFTER_STICK_CONTROL_OK, 0x11)
                (SPECIAL_AIR_S_D_FLAG_TERM, 0x12)
                (SPECIAL_HI_FLAG_START, 0xc)
                (SPECIAL_HI_FLAG_JUMP, 0xd)
                (SPECIAL_HI_FLAG_AIR, 0xe)
                (SPECIAL_HI_FLAG_REUSE, 0xf)
                (SPECIAL_HI_FLAG_SHOOTING, 0x10)
                (SPECIAL_HI_FLAG_NO_SHOOTING_ENABLE_CANCEL, 0x11)
                (SPECIAL_HI_FLAG_GROUND_START, 0x12)
                (SPECIAL_HI_FLAG_SITUATION_KEEP, 0x13)
                (SPECIAL_HI_FLAG_TERM, 0x14)
                (SPECIAL_LW_FLAG_START, 0xd)
                (SPECIAL_LW_FLAG_AIR_FIRST, 0xe)
                (SPECIAL_LW_FLAG_WITCH_TIME, 0xf)
                (SPECIAL_LW_FLAG_WITCH_TIME_SUCCESS, 0x10)
                (SPECIAL_LW_FLAG_ENABLE_WITCH_TIME_CANCEL, 0x11)
                (SPECIAL_LW_FLAG_SEARCH_HIT, 0x12)
                (SPECIAL_LW_FLAG_FLASH_ON, 0x13)
                (SPECIAL_LW_FLAG_ENABLE_NEXT_NO_COMP, 0x14)
                (SPECIAL_LW_FLAG_CLEAR_SPEED, 0x15)
                (SPECIAL_LW_FLAG_TERM, 0x16)
                (FINAL_FLAG_START, 0xb)
                (FINAL_FLAG_ABS_SET, 0xc)
                (FINAL_FLAG_ABS_GET, 0xd)
                (FINAL_FLAG_ABS_HIT, 0xe)
                (FINAL_FLAG_NO_DEAD_OFF, 0xf)
                (FINAL_FLAG_INVISIBLE_ITEM_CURSOR, 0x10)
                (FINAL_FLAG_END_GROUND_CORRECT_ON, 0x11)
                (FINAL_FLAG_END_GROUND_CORRECT_SET, 0x12)
                (FINAL_FLAG_MOT_CHANGE, 0x13)
                (FINAL_FLAG_NEXT_SCENE, 0x14)
                (FINAL_FLAG_DEAD_FIGHTER, 0x15)
                (FINAL_FLAG_WHOLE_SLOW_START, 0x16)
                (FINAL_FLAG_WHOLE_SLOW_END, 0x17)
                (FINAL_FLAG_WHOLE_SLOW, 0x18)
                (FINAL_FLAG_TARGET_ENTRY, 0x19)
                (FINAL_FLAG_START_SCREEN_EFFECT, 0x1a)
                (FINAL_FLAG_START_CLIMAX_GAUGE, 0x1b)
                (FINAL_FLAG_START_DISABLE_ZOOM_IN, 0x1c)
                (FINAL_FLAG_END_CLIMAX_GAUGE, 0x1d)
                (FINAL_FLAG_FINAL_END_AFTER, 0x1e)
                (FINAL_FLAG_ENABLE_FINAL_END_CAMERA, 0x1f)
                (FINAL_FLAG_SYNC, 0x20)
                (FINAL_FLAG_RESTART_OTHER_FIGHTER, 0x21)
                (FINAL_FLAG_TERM, 0x22)
            );
        }
    }
    pub mod inkling {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (INK_HEIGHT, 0x4d)
                (INK_RADIUS, 0x4e)
                (INK_R, 0x4f)
                (INK_G, 0x50)
                (INK_B, 0x51)
                (INK, 0x52)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOMB_ID_THROW_LW, 0xbe)
                (WATER_FRAME, 0xbf)
                (LAMP_EFFECT_HANDLE, 0xc0)
                (READY_FINAL_EFFECT_HANDLE, 0xc1)
                (READY_FINAL_LINE_EFFECT_HANDLE, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xeb)
                (CAN_SPECIAL_LW_BOMB, 0xe1)
                (EXIST_SQUID, 0xe2)
                (NO_FLIP_SQUID, 0xe3)
                (NO_DAMAGE_MOTION_INTP, 0xe4)
                (DISABLE_SPECIAL_S, 0xe5)
                (AFTER_SPECIAL_HI, 0xe6)
                (INK_SUCCESS, 0xe7)
                (PRE_WHOLE_VISIBLITY, 0xe8)
                (LANDING_HEAVY, 0xe9)
                (BOY, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SHOOT_DEGREE, 0x7)
                    (SUB_INK_SPECIAL_LW, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BULLET_NUM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CAN_CHANGE_ANGLE, 0xc)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SPEED_X, 0x7)
                    (TURN_ACCEL_X, 0x8)
                    (TURN_DASH_ACCEL_X, 0x9)
                    (DEGREE, 0xa)
                    (DEGREE_SPEED, 0xb)
                    (PRE_GROUND_DEGREE, 0xc)
                    (PRE_X, 0xd)
                    (PRE_Y, 0xe)
                    (WALK_JOSTLE_FRONT, 0xf)
                    (WALK_JOSTLE_BACK, 0x10)
                    (ROLLER_SE_MAX_PITCH, 0x11)
                    (ROLLER_EMPTY_SE_MAX_PITCH, 0x12)
                    (TERM, 0x13)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (AFTER_TURN_FRAME, 0x5)
                    (WALL_FRAME, 0x6)
                    (ALL_FRAME, 0x7)
                    (ENABLE_FINISH_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TURN, 0xc)
                    (END, 0xd)
                    (TRIGGER_BUTTON, 0xe)
                    (JUMP_END, 0xf)
                    (JUMP, 0x10)
                    (AFTER_JUMP, 0x11)
                    (FIRST_PAINT, 0x12)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (DEGREE, 0x7)
                    (REV_DEGREE, 0x8)
                    (MODEL_DEGREE, 0x9)
                    (MODEL_REV_DEGREE, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CAN_STOP_CEIL, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGE_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MAX_CHARGE_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHARGING, 0xc)
                    (TO_THROW_OK, 0xd)
                    (THROW, 0xe)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (INK_COUNT_100, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (TERM, 0x22)
                    (SUB_INK, 0x21)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SHOOT, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod charge_ink {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (PRE_INK, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_COUNT, 0x5)
                    (EFFECT_HANDLE_UV, 0x6)
                    (EFFECT_HANDLE_PUMP, 0x7)
                    (EFFECT_HANDLE_MAX, 0x8)
                    (EFFECT_HANDLE_MARKER, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHARGE_START, 0xc)
                );
            }
        }
    }
    pub mod ridley {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (DISABLE_SPECIAL_LW_FINISH_COUNT, 0xbe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe3)
                (UNABLE_SPECIAL_S, 0xe1)
                (DISABLE_CRITICAL_SPECIAL_LW, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (WEAK_SIZE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FIRE_NUM, 0x5)
                    (CHARGE_COUNT, 0x6)
                    (FIRE_COUNT, 0x7)
                    (FIRE_FRAME_COUNT, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHOOT, 0xc)
                    (WEAK_POINT_HIT, 0xd)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (GROUND_DEGREE, 0x7)
                    (SPEED_DEGREE, 0x8)
                    (RHOMBUS_FRONT, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (JUMP_COUNT, 0x5)
                    (GRAB_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_JUMP, 0xc)
                    (DEAD, 0xd)
                    (START_DRAG_MOVE, 0xe)
                    (THROW, 0xf)
                    (ENABLE_CONTROL_JUMP, 0x10)
                    (ENABLE_GRAVITY, 0x11)
                    (RHOMBUS, 0x12)
                    (CATCH_DAMAGE, 0x13)
                    (DRAGF_DAMAGE, 0x14)
                    (REVERT_DEGREE, 0x15)
                    (WALL_CROWN_EFFECT, 0x16)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (DEGREE_SPEED_X, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_STATUS, 0x5)
                    (CHARGE_COUNT, 0x6)
                    (CEIL_COUNT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_HOVER, 0xc)
                    (START_CHARGE, 0xd)
                    (CHARGE_DECCEL, 0xe)
                    (LANDING_F, 0xf)
                    (ENABLE_GRAVITY, 0x10)
                    (ENABLE_CONTROL, 0x11)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TARGET_ID, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TO_FINISH, 0xc)
                    (THROW, 0xd)
                    (THROW_FINISH, 0xe)
                    (ENABLE_GRAVITY, 0xf)
                    (NORMAL_GRAVITY, 0x10)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_X, 0x7)
                    (START_Y, 0x8)
                    (ADD_DAMAGE, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DASH_COUNT, 0x5)
                    (ADD_DAMAGE_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (FINAL_ZOOM_START, 0xe)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (TARGET_CHANGE_MOTION_01, 0x13)
                    (TARGET_CHANGE_MOTION_02, 0x14)
                );
            }
            make_work_ids!(
                Flag,
                Status,
                (FINAL_CLEAR_ATTACK, 0xf)
                (FINAL_ABS_SET, 0x10)
            );
        }
    }
    pub mod simon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (WHIP_HOLD_STICK_MOVE_MUL, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_DISABLE_FRAME, 0xbe)
                (WHIP_OBJECT_ID, 0xbf)
                (COFFIN_OBJECT_ID, 0xc0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xf8)
                (CROSS, 0xe1)
                (FINAL_HIT, 0xe2)
                (ATTACK_AIR_HI, 0xe3)
                (ATTACK_AIR_HI_BACK_CLIFF, 0xe4)
                (ATTACK_AIR_CLIFF_RAY_CHECK, 0xe5)
                (ATTACK_AIR_LASSO_FLAG_CHECK, 0xe6)
                (ATTACK_AIR_LASSO_FLAG_IS_CHECK, 0xe7)
                (ATTACK_AIR_LASSO_FIGHTER_SEARCH_HIT, 0xe8)
                (ATTACK_AIR_LASSO_DAMAGE, 0xe9)
                (WHIP_GENERATED, 0xea)
                (WHIP_NO_REFLECT, 0xeb)
                (WHIP_REFLECT, 0xec)
                (WHIP_REFLECT_ATTACK_OFF_ID_TOP, 0xed)
                (WHIP_REFLECT_ATTACK_OFF_ID_END, 0xf7)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (ENABLE_HOLD, 0x21)
                    (ENABLE_HOLD_INPUT, 0x22)
                    (ENABLE_COMBO, 0x23)
                    (HIT, 0x24)
                );
            }
            pub mod attack_lw32 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (LANDING_AIR, 0x25)
                );
            }
            pub mod attack_hold {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (PREV_X, 0x7)
                    (PREV_Y, 0x8)
                    (REACH_PREV_X, 0x9)
                    (REACH_PREV_Y, 0xa)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (HAVE_AXE, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ACCEL_Y, 0x7)
                    (LIMIT_SPEED_Y, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLICK, 0xc)
                    (FALL, 0xd)
                    (FALLED, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x11)
                    (MOVE, 0x12)
                    (TERM, 0x13)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (GENERATE_HOLYWATER, 0xc)
                    (SHOOT_HOLYWATER, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (DASH_COUNT, 0x5)
                    (SCENE_DAMAGE_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (FINAL_ZOOM_START, 0xe)
                    (CLEAR_ATTACK, 0xf)
                    (ABS_SET, 0x10)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (FINAL_BLACKHOLE_REQUESTED, 0x13)
                    (FINAL_SCENE_DAMAGE_REQUESTED, 0x14)
                    (START_COFFIN_ROT_Y, 0x15)
                    (TERM, 0x18)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_START, 0x6)
                (FINAL_BLACKHOLE_PX, 0x7)
                (FINAL_BLACKHOLE_PY, 0x8)
                (FINAL_BLACKHOLE_PZ, 0x9)
                (FINAL_COFFIN_POS_X, 0xa)
                (FINAL_COFFIN_POS_Y, 0xb)
                (FINAL_COFFIN_POS_Z, 0xc)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_END_GROUND_CORRECT_ON, 0x16)
                (FINAL_END_GROUND_CORRECT_SET, 0x17)
            );
        }
    }
    pub mod krool {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (WAIST_LIFE, 0x4d)
                (WAIST_GUARD_MARK_SCALE, 0x4e)
                (FINAL_START_POS_X, 0x4f)
                (FINAL_START_POS_Y, 0x50)
                (FINAL_SPECIAL_S_START_SCALE, 0x51)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_N_SPIT_TYPE, 0xbe)
                (BATTLE_OBJECT_ID_BLUNDERBUSS, 0xbf)
                (BATTLE_OBJECT_ID_SPITBALL, 0xc0)
                (WAIST_HIT_FLASH_COUNT, 0xc1)
                (WAIST_LIFE_COUNT, 0xc2)
                (WAIST_CRACK_COUNT, 0xc3)
                (BATTLE_OBJECT_ID_CROWN, 0xc4)
                (BATTLE_OBJECT_ID_ITEM_CROWN, 0xc5)
                (SPECIAL_S_GET_MOTION_SKIP_FRAME, 0xc6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xf4)
                (SPECIAL_N_SUCTION_IRONBALL, 0xe1)
                (SPECIAL_N_CATCH_CUT, 0xe2)
                (WAIST_HIT_FLASH, 0xe3)
                (WAIST_HIT, 0xe4)
                (WAIST_HIT_FRONT, 0xe5)
                (REQUEST_WAIST_SHIELD_ON, 0xe6)
                (REQUEST_WAIST_SHIELD_OFF, 0xe7)
                (REQUEST_WAIST_SHIELD_KEEP, 0xe8)
                (REQUEST_WAIST_CRACK_KEEP, 0xe9)
                (REQUEST_WAIST_HIT_STOP, 0xea)
                (DROP_CROWN, 0xeb)
                (CATCH_CROWN, 0xec)
                (SHOW_CROWN, 0xed)
                (CROWN_INHALED_REMOVE, 0xee)
                (CROWN_SWALLOWED, 0xef)
                (SPECIAL_LW_SPECIAL_EFFECT, 0xf0)
                (SPECIAL_LW_HIT_ATTACK, 0xf1)
                (SPECIAL_LW_HIT_REFLECT, 0xf2)
                (SPECIAL_LW_ATTACK_DAMAGE_REQUEST, 0xf3)
            );
        }
        pub mod status {
            use super::*;
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0xd)
                    (CLATTER_FRAME, 0xe)
                );
            }
            pub mod throw_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (BURY, 0xf)
                    (BURY_SET_CLATTER, 0x10)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (EAT_WALK_SPEED, 0x8)
                    (EAT_WALK_SPEED_MAX_RATIO, 0x9)
                    (EAT_WAIT_SWALLOWED_STICK_X, 0xa)
                    (EAT_WAIT_SWALLOWED_STICK_Y, 0xb)
                    (WEAPON_SCALE, 0xc)
                    (WEAPON_SPEED, 0xd)
                    (SWALLOWED_FLICK_OFFSET_X, 0xe)
                    (SWALLOWED_FLICK_OFFSET_Y, 0xf)
                    (SWALLOWED_FLICK_OFFSET_X_PREV, 0x10)
                    (SWALLOWED_FLICK_OFFSET_Y_PREV, 0x11)
                    (MOTION_2ND_WAIGHT, 0x12)
                    (TERM, 0x13)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (LOOP_COUNT, 0xe)
                    (EAT_ITEM_KIND, 0xf)
                    (WN_STAR_TASK_ID, 0x10)
                    (SPIT_COUNT, 0x11)
                    (SEARCH_WEAPON_ID, 0x12)
                    (DRINK_WEAPON_KIND, 0x13)
                    (EAT_ITEM_AREA_KIND, 0x14)
                    (SWALLOWED_FLICK_TIMER, 0x15)
                    (OPPONENT_REACTION_FRAME, 0x16)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xf)
                    (SHOOT_IRONBALL, 0x10)
                    (SHOOT_IRONBALL_END, 0x11)
                    (NO_SHOOT_IRONBALL, 0x12)
                    (SHOOT_CANCEL, 0x13)
                    (NO_SHOOT_CANCEL, 0x14)
                    (START_SWALLOW, 0x15)
                    (SPIT_TYPE_DECIDE, 0x16)
                    (BUTTON_RELEASE_CHK, 0x17)
                    (INHALE, 0x18)
                    (ITEM_REMOVE, 0x19)
                    (ITEM_USE, 0x1a)
                    (SPIT, 0x1b)
                    (SPIT_END, 0x1c)
                    (SWALLOWED_STICK_ON, 0x1d)
                    (SWALLOW_COMP, 0x1e)
                    (SEARCH_WEAPON_CHK, 0x1f)
                    (DRINK_WEAPON, 0x20)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SUPER_ARMOR_LIFE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (ENABLE_SUPER_ARMOR, 0xd)
                    (START_WALL_HIT, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOVEMENT_Y, 0x7)
                    (MOTION_2ND_LERP_RATE, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BRAKE_AFTER_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (WAIST_DAMAGE, 0x7)
                    (ATTACK_POWER, 0x8)
                    (SHIELD_LR, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (COUNTER_ENABLE_GRAVITY, 0x10)
                    (IS_ATTACK_ENEMY, 0x11)
                    (TURN, 0x12)
                    (TURN_CHECK_END, 0x13)
                    (REFLECTOR_CHK, 0x14)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xe)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DASH_COUNT, 0x5)
                    (DASH_CLIFF_CHECK_COUNT, 0x6)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
                (FINAL_FOV_RATE_SCENE_ATTACK, 0xb)
                (FINAL_ORIGINAL_SCALE, 0xc)
                (FINAL_ORIGINAL_OWNER_SCALE, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x7)
                (FINAL_COUNT, 0x8)
                (FINAL_END, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (WAIST_DAMAGE_REQUEST, 0x15)
                (FINAL_READY, 0xc)
                (FINAL_SUCCESS, 0xd)
                (FINAL_ABS_SET, 0xe)
                (FINAL_ABS_GET, 0xf)
                (FINAL_ABS_HIT, 0x10)
                (FINAL_CLEAR_SLOW, 0x11)
                (FINAL_NO_DEAD_OFF, 0x12)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x13)
                (FINAL_STEREO_FADE_OUT_START, 0x14)
                (FINAL_STEREO_FADE_IN_START, 0x15)
                (FINAL_STEREO_FADE_FLAG, 0x16)
                (FINAL_END_GROUND_CORRECT_ON, 0x17)
                (FINAL_END_GROUND_CORRECT_SET, 0x18)
                (FINAL_SUCCESS_FRAME, 0x19)
                (FINAL_MOT_CHANGE, 0x1a)
                (FINAL_ZOOM_START, 0x1b)
                (FINAL_CLEAR_ATTACK, 0x1c)
                (FINAL_FOV_CHANGE, 0x1d)
                (FINAL_VISUAL_SCENE_04_DAMAGE, 0x1e)
                (FINAL_END_EXIT, 0x1f)
                (FINAL_END_EXIT_FINISH, 0x20)
            );
        }
    }
    pub mod shizue {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ADJUST_ANGLE_FRAME, 0x51)
                (ANGLE, 0x52)
                (ADD_ANGLE, 0x53)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xed)
                (TERM, 0xf2)
                (POMPON_LEFT, 0xee)
                (POMPON_RIGHT, 0xef)
                (ADJUST_ANGLE, 0xf0)
                (CLAYROCKET_IS_READY, 0xf1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_hi_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (TERM, 0x8)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (SPECIAL_S_FLOAT_START, 0x9)
                (SPECIAL_S_FLOAT_REEL_MOTION_RATE, 0xa)
                (SPECIAL_S_FLOAT_LINE_LENGTH, 0xb)
                (SPECIAL_S_FLOAT_PULL_SPEED, 0xc)
                (SPECIAL_S_FLOAT_MOTION_VALUE, 0xd)
                (SPECIAL_S_FLOAT_TERM, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (SPECIAL_S_INT_START, 0x7)
                (SPECIAL_S_INT_TARGET_OBJECT_CATEGORY, 0x8)
                (SPECIAL_S_INT_TARGET_OBJECT_ID, 0x9)
                (SPECIAL_S_INT_REEL_STOP_FRAME, 0xa)
                (SPECIAL_S_INT_CUT_JOINT_ID, 0xb)
                (SPECIAL_S_INT_CATCH_WAIT_FRAME, 0xc)
                (SPECIAL_S_INT_MOTION_KIND_HI, 0xd)
                (SPECIAL_S_INT_MOTION_KIND_LW, 0xe)
                (SPECIAL_S_INT_MOTION_KIND_2ND, 0xf)
                (SPECIAL_S_INT_HIT_STOP_FRAME, 0x10)
                (SPECIAL_S_INT_HIT_WAIT_FRAME, 0x11)
                (SPECIAL_S_INT_TERM, 0x12)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPECIAL_S_FLAG_START, 0x11)
                (SPECIAL_S_FLAG_AIR_LASSO_FAIL, 0x12)
                (SPECIAL_S_FLAG_FLICK, 0x13)
                (SPECIAL_S_FLAG_SHOOT, 0x14)
                (SPECIAL_S_FLAG_HIT, 0x15)
                (SPECIAL_S_FLAG_PICKUP, 0x16)
                (SPECIAL_S_FLAG_CAPTURE_CUT, 0x17)
                (SPECIAL_S_FLAG_TERM, 0x18)
                (SPECIAL_LW_FLAG_START, 0xb)
                (SPECIAL_LW_FLAG_SUCCESS, 0xc)
                (SPECIAL_LW_FLAG_SET, 0xd)
                (SPECIAL_LW_FLAG_TERM, 0xe)
            );
        }
    }
    pub mod gaogaen {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (REVENGE_TOTAL_DAMAGE, 0x4d)
                (REVENGE_RATE, 0x4e)
                (WEAPON_ROPE_BACK_METER, 0x4f)
                (SPECIAL_S_LARIAT_AREA_HIT_POS_X, 0x50)
                (SPECIAL_S_LARIAT_BUTTON_PUSH_POS_X, 0x51)
                (SPECIAL_S_LARIAT_AREA_LENGTH, 0x52)
            );
            make_work_ids!(
                Int,
                Instance,
                (REVENGE_TIMER, 0xbe)
                (BATTLE_OBJECT_ID_ROPE, 0xbf)
                (BATTLE_OBJECT_ID_SWING_THROWN_FIGHTER, 0xc0)
                (SPECIAL_S_ROPE_CANCEL_FRAME, 0xc1)
                (BELT_FIRE_EFFECT_HANDLE, 0xc2)
                (ATTACK_HIT_REVENGE_ATTACK_NO, 0xc3)
                (WATER_FRAME, 0xc4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xeb)
                (IS_FOLLOW_THROUGH, 0xe1)
                (IS_ATTACK_HIT, 0xe2)
                (IS_ATTACK_HIT_REVENGE, 0xe3)
                (IS_ATTACK_HIT_REVENGE_CONTINUE, 0xe4)
                (INVALID_SPECIAL_AIR_N_SPPED_Y, 0xe5)
                (INVALID_SPECIAL_AIR_LW_SPPED_Y, 0xe6)
                (INVALID_SPECIAL_AIR_S, 0xe7)
                (IS_REVENGE, 0xe8)
                (SPECIAL_HI_FALL, 0xe9)
                (SPECIAL_S_GENERATED_ROPE, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (START_ROTATION, 0xc)
                    (ROTATION, 0xd)
                    (END_ROTATION, 0xe)
                    (REQUEST_GRAVITY_DEFAULT, 0xf)
                    (GRAVITY_DEFAULT, 0x10)
                    (TERM, 0x11)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ROPE_X, 0x7)
                    (ROPE_Y, 0x8)
                    (GAOGAEN_TARGET_X, 0x9)
                    (LARIAT_HIT_FRAME, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOVE_START, 0xc)
                    (MOVE, 0xd)
                    (MOVE_END, 0xe)
                    (CHECK_WALL_MOVE, 0xf)
                    (THROW_ROPE, 0x10)
                    (THROW_ROPE_END, 0x11)
                    (SHOULDER, 0x12)
                    (LARIAT_AREA, 0x13)
                    (LARIAT_END_AREA, 0x14)
                    (FAILURE_AREA, 0x15)
                    (HIT, 0x16)
                    (SEND_HIT_EVENT, 0x17)
                    (LARIAT_AREA_FIRST, 0x18)
                    (DAMAGE_CUT, 0x19)
                    (ENABLE_GRAVITY, 0x1a)
                    (AIR_CONTROL, 0x1b)
                );
            }
            pub mod special_s_checked_finish {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (CAMERA, 0x1c)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x8)
                    (FALL_HIT_COUNT, 0x9)
                    (FALL_HIT_OBJECT_ID, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_AIR, 0x12)
                    (FALL_TYPE_CHECK, 0x13)
                    (FALL_TYPE_2, 0x14)
                    (BOUND_CLIFF_STOP, 0x15)
                    (DISABLE_OPPONENT_PASSIVE, 0x16)
                    (REVERSE_LR, 0x17)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (STANCE_START, 0xc)
                    (STANCE, 0xd)
                    (STANCE_END, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x11)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DASH_COUNT, 0x5)
                    (DASH_CLIFF_CHECK_COUNT, 0x6)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (FINAL_PX, 0x7)
                (FINAL_PY, 0x8)
                (FINAL_LR, 0x9)
                (FINAL_Z, 0xa)
                (FINAL_FOV_RATE_SCENE_ATTACK, 0xb)
                (FINAL_TRANS_MOVE_START_Y, 0xc)
                (FINAL_TRANS_MOVE_POS_Y_PREV, 0xd)
                (FINAL_TRANS_MOVE_Y_TOTAL, 0xe)
                (FINAL_SCALE, 0xf)
                (FINAL_OWNER_SCALE, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (FINAL_TASK_ID_COUNT, 0x7)
                (FINAL_COUNT, 0x8)
                (FINAL_END, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINAL_READY, 0xc)
                (FINAL_SUCCESS, 0xd)
                (FINAL_ABS_SET, 0xe)
                (FINAL_ABS_GET, 0xf)
                (FINAL_ABS_HIT, 0x10)
                (FINAL_CLEAR_SLOW, 0x11)
                (FINAL_NO_DEAD_OFF, 0x12)
                (FINAL_INVISIBLE_ITEM_CURSOR, 0x13)
                (FINAL_STEREO_FADE_OUT_START, 0x14)
                (FINAL_STEREO_FADE_IN_START, 0x15)
                (FINAL_STEREO_FADE_FLAG, 0x16)
                (FINAL_END_GROUND_CORRECT_ON, 0x17)
                (FINAL_END_GROUND_CORRECT_SET, 0x18)
                (FINAL_SUCCESS_FRAME, 0x19)
                (FINAL_MOT_CHANGE, 0x1a)
                (FINAL_ZOOM_START, 0x1b)
                (FINAL_CLEAR_ATTACK, 0x1c)
                (FINAL_FOV_CHANGE, 0x1d)
                (FINAL_END_EXIT, 0x1e)
                (FINAL_END_EXIT_FINISH, 0x1f)
                (FINAL_SEARCH_END, 0x20)
            );
        }
    }
    pub mod miifighter {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (NENSYO_KICK_CHARGE_RATE, 0x4c)
                (CAM_OFS_Y, 0x4d)
                (CAM_OFS_Z, 0x4e)
                (CAM_COUNT, 0x4f)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
                (_100KICK_REACTION_MUL_VALID_FRAME, 0xbf)
                (_100KICK_REACTION_MUL_RECOVER_FRAME, 0xc0)
                (FINAL_HIT_NUM, 0xc1)
                (FINAL_HIT_NUM_LAST, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xeb)
                (ST_INIT, 0xe0)
                (MOT_FRAME_INHERIT, 0xe1)
                (MTRANS_SMPL_AIR, 0xe2)
                (MTRANS_SMPL_GROUND, 0xe3)
                (MTRANS_SMPL_MOTION_END, 0xe4)
                (MTRANS_SMPL_EX1, 0xe5)
                (MACH_PUNCH_FALL, 0xe6)
                (REVERSAL_KICK, 0xe7)
                (_100RUSH_HOP, 0xe8)
                (COUNTER_THROW_SHIELD_HIT, 0xe9)
                (FINAL_ATTACK_HIT_LINK, 0xea)
            );
        }
        pub mod status {
            use super::*;
            pub mod syoten_kick {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (FINISH_ANGLE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (AIR_START, 0xc)
                    (SET_FINISH_ANGLE, 0xd)
                    (SET_ATTACK_ANGLE, 0xe)
                    (SET_ROLL_BACK_ANGLE, 0x10)
                );
            }
            pub mod syoten_kick_end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (NORMAL_ACCEL_Y, 0xf)
                );
            }
            pub mod counter_throw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ATTACK_POWER, 0x8)
                    (SHIELD_LR, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SEARCH_HIT_LOG_OBJECT_ID, 0xe)
                    (HIT_OBJECT_ID, 0xf)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (SHIELD, 0xf)
                    (SHIELD_CHK, 0x10)
                    (SHIELD_HIT, 0x11)
                    (COUNTER_ATTACK_START, 0x12)
                    (COUNTER_ATTACK_END, 0x13)
                    (COUNTER_ENABLE_GRAVITY, 0x14)
                    (IS_ATTACK_ENEMY, 0x15)
                    (IS_SEARCH_HIT, 0x16)
                    (SPECIAL_EFFECT, 0x17)
                    (WEAPON_HIT, 0x18)
                    (THROW_AFTER_LANDING, 0x19)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x17)
                    (MOVE_TARGET_X, 0x7)
                    (MOVE_TARGET_Y, 0x8)
                    (MOVE_SPD_X, 0x9)
                    (MOVE_SPD_Y, 0xa)
                    (MOVE_FRAME, 0xb)
                    (ATTACK_LR, 0xc)
                    (MOVE_ANGLE, 0xd)
                    (OFFSET_LR, 0xe)
                    (TARGET_BASE_POS_X, 0xf)
                    (TARGET_BASE_POS_Y, 0x10)
                    (MOVE_SPEED, 0x11)
                    (TARGET_OFFSET_X, 0x12)
                    (TARGET_OFFSET_Y, 0x13)
                    (TO_TARGET_LR, 0x14)
                    (ATTACK_MOVE_X, 0x15)
                    (ATTACK_MOVE_Y, 0x16)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REQUEST_LOOP_DAMAGE_MOTION, 0xd)
                    (COUNT, 0x5)
                    (TASK_ID1, 0x6)
                    (TASK_ID2, 0x7)
                    (TASK_ID3, 0x8)
                    (TASK_ID4, 0x9)
                    (TASK_ID5, 0xa)
                    (TASK_ID6, 0xb)
                    (TASK_ID7, 0xc)
                    (STEP, 0xe)
                    (WAIT_TIME, 0xf)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ATTACK_HIT, 0xd)
                    (ATTACK_START, 0xe)
                    (CHANGE_STATUS, 0xf)
                    (ATTACK_END, 0x10)
                    (ATTACK_FINISH, 0x11)
                    (FALL_START, 0x12)
                    (REQUEST_LOOP_DAMAGE_MOTION_VARIATION, 0x14)
                    (DISABLE_GOLD_EYE, 0x15)
                );
            }
            pub mod final__attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TASK_ID1, 0x10)
                    (TASK_ID2, 0x11)
                    (TASK_ID3, 0x12)
                    (TASK_ID4, 0x13)
                    (TASK_ID5, 0x14)
                    (TASK_ID6, 0x15)
                    (TASK_ID7, 0x16)
                    (HIT_TOTAL_NUM, 0x17)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (MACH_PUNCH_FLOAT_START, 0x6)
                (BAKURETU_KICK_START_CHARA_DIR, 0x7)
                (NENSYO_KICK_ATTACK_SPEED_X_PREV, 0x7)
                (SUPLEX_FLOAT_START, 0x6)
                (TENCHI_KICK_START, 0x6)
                (REVERSAL_KICK_WORK_FLOAT_START, 0x6)
                (REVERSAL_KICK_WORK_FLOAT_TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (MACH_PUNCH_INT_START, 0x4)
                (MACH_PUNCH_INT_PULL_FIRST_HIT_OBJECT_ID, 0x5)
                (MACH_PUNCH_INT_PULL_FINISH_HIT_OBJECT_ID, 0x6)
                (MACH_PUNCH_INT_HIT_OBJECT_ID, 0x7)
                (BAKURETU_KICK_AIR_PHASE, 0x5)
                (BAKURETU_KICK_PREV_AIR_PHASE, 0x6)
                (BAKURETU_KICK_PREV_SITUATION, 0x7)
                (_100KICK_START_SITUATION, 0x5)
                (_100KICK_HIT_OBJECT_NUM, 0x6)
                (_100KICK_HIT_OBJECT_ID, 0x7)
                (_100KICK_HIT_OBJECT_ID_MAX, 0xe)
                (SUPLEX_INT_START, 0x4)
                (SUPLEX_INT_START_SITUATION, 0x5)
                (TENCHI_KICK_START_SITUATION, 0x5)
                (TENCHI_KICK_FALL_HIT_OBJECT_ID, 0x6)
                (KUIUCHI_HEAD_WORK_INT_START, 0x4)
                (KUIUCHI_HEAD_WORK_INT_FALL_HIT_OBJECT_ID, 0x5)
                (KUIUCHI_HEAD_TERM, 0x6)
                (REVERSAL_KICK_WORK_INT_START, 0x4)
                (REVERSAL_KICK_WORK_INT_WALL_JUMP_NUM, 0x5)
                (REVERSAL_KICK_WORK_INT_TREAD_TARGET_ID, 0x6)
                (REVERSAL_KICK_WORK_INT_TREAD_TARGET_CATEGORY, 0x7)
                (REVERSAL_KICK_WORK_INT_FRAME, 0x8)
                (REVERSAL_KICK_WORK_INT_TERM, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (IRONBALL_FLAG_START, 0xb)
                (IRONBALL_FLAG_FIRST, 0xc)
                (IRONBALL_TERM, 0xd)
                (MACH_PUNCH_FLAG_START, 0xb)
                (MACH_PUNCH_FLAG_PULL_ATTACK_HIT, 0xc)
                (MACH_PUNCH_FLAG_PULL_ATTACK_HIT_DONE, 0xd)
                (MACH_PUNCH_FLAG_PULL_ATTACK_HIT_INVINCIBLE, 0xe)
                (MACH_PUNCH_FLAG_PULL_FINISH_ATTACK, 0xf)
                (MACH_PUNCH_FLAG_PULL_FINISH_ATTACK_HIT, 0x10)
                (MACH_PUNCH_FLAG_PULL_CHECK_ATTACK, 0x11)
                (MACH_PUNCH_FLAG_PULL_CHECK_ATTACK_HIT, 0x12)
                (MACH_PUNCH_FLAG_PULL_INVINCIBLE, 0x13)
                (MACH_PUNCH_FLAG_UPPER_FINISH_ATTACK, 0x14)
                (MACH_PUNCH_FLAG_UPPER_FINISH_ATTACK_HIT, 0x15)
                (MACH_PUNCH_FLAG_SET_FALL_SPEED, 0x16)
                (BAKURETU_KICK_START, 0xb)
                (BAKURETU_KICK_TURN, 0xc)
                (BAKURETU_KICK_CHECK_END, 0xd)
                (BAKURETU_KICK_DIR_DECIDE, 0xe)
                (BAKURETU_KICK_DIR_DECIDE_END, 0xf)
                (BAKURETU_KICK_BRAKE_FALL, 0x10)
                (BAKURETU_KICK_NORMAL_FALL, 0x11)
                (_100KICK_START, 0xb)
                (_100KICK_SHIELD_HIT, 0xc)
                (_100KICK_HIT, 0xd)
                (_100KICK_HIT_CHECK_ONOFF, 0xe)
                (_100KICK_CLIFF_FALL_ONOFF, 0xf)
                (_100KICK_GRAVITY_ONOFF, 0x10)
                (_100KICK_ENABLE_CONTROL_X, 0x11)
                (_100KICK_ENABLE_LANDING_MUL_SPEED_X, 0x12)
                (_100KICK_DISABLE_OPPONENT_PASSIVE, 0x13)
                (_100KICK_ENABLE_LANDING, 0x14)
                (_100KICK_ENABLE_MOTION_SPEED_MUL, 0x15)
                (NENSYO_KICK, 0xb)
                (NENSYO_KICK_ATTACK_TRIGGER, 0xc)
                (NENSYO_KICK_BRAKE_TRIGGER, 0xd)
                (NENSYO_KICK_ATTACK_POWER_MODIFY, 0xe)
                (NENSYO_KICK_HIT, 0xf)
                (NENSYO_KICK_HIT_Y_SET, 0x10)
                (NENSYO_KICK_MOVE_START, 0x11)
                (NENSYO_KICK_MOVE_START_MODIFY, 0x12)
                (NENSYO_KICK_MOVE_DROPKICK_AURA_EFFECT_ON, 0x13)
                (NENSYO_KICK_MOVE_DROPKICK_AURA_EFFECT, 0x14)
                (NENSYO_KICK_GROUND_SE, 0x15)
                (NENSYO_KICK_END, 0x16)
                (SUPLEX_FLAG_START, 0xb)
                (SUPLEX_FLAG_REQUEST_GRAVITY, 0xc)
                (SUPLEX_FLAG_GRAVITY_ON, 0xd)
                (TENCHI_KICK_FLAG_START, 0xb)
                (TENCHI_KICK_REVERSE, 0xc)
                (TENCHI_KICK_FALL_START, 0xd)
                (TENCHI_KICK_DISABLE_CONTROL_X, 0xe)
                (TENCHI_KICK_IS_2_SHIFT_INPUT, 0xf)
                (TENCHI_KICK_SHIFT, 0x10)
                (TENCHI_KICK_SHIFT_RESERVE, 0x11)
                (KUIUCHI_HEAD_FLAG_START, 0xb)
                (KUIUCHI_HEAD_FLAG1, 0xc)
                (KUIUCHI_HEAD_FLAG2, 0xd)
                (KUIUCHI_HEAD_FLAG_FROM_GR, 0xe)
                (KUIUCHI_HEAD_FLAG_DISABLE_SPEED_X_FLAG, 0xf)
                (KUIUCHI_HEAD_FLAG_ENABLE_SPEED_X_FLAG, 0x10)
                (REVERSAL_KICK_FLAG_START, 0xb)
                (REVERSAL_KICK_FLAG_CHANGE_AUTO_ATTACK, 0xc)
                (REVERSAL_KICK_FLAG_KICK_ENABLE, 0xd)
                (REVERSAL_KICK_FLAG_TREAD_ENABLE, 0xe)
                (REVERSAL_KICK_FLAG_TREAD, 0xf)
                (REVERSAL_KICK_FLAG_WALL_JUMP_ENABLE, 0x10)
                (REVERSAL_KICK_FLAG_REVERSE, 0x11)
                (REVERSAL_KICK_FLAG_START_WAIT_INPUT, 0x12)
                (REVERSAL_KICK_FLAG_KICK, 0x13)
                (REVERSAL_KICK_FLAG_JUMP, 0x14)
                (REVERSAL_KICK_FLAG_KICK_ENABLE_LANDING, 0x15)
                (REVERSAL_KICK_FLAG_TERM, 0x16)
            );
        }
    }
    pub mod miiswordsman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HEAD_RIGHT_OFFSET, 0x4c)
                (HEAD_LEFT_OFFSET, 0x4d)
                (HEAD_OFFSET, 0x4e)
                (HEAD_OFFSET_TIMER, 0x4f)
                (HEAD_OFFSET_TIMER_MAX, 0x50)
                (SDUSH_DECIDE_STICK_X, 0x51)
                (SDUSH_DECIDE_STICK_Y, 0x52)
                (HENSOKU_SLASH_CHARGE_RATE, 0x53)
                (FINAL_BLUR_ALPHA, 0x54)
                (RAPID_SLASH_START_SPD_X_MUL, 0x55)
                (RAPID_SLASH_BRAKE_SPD_X, 0x56)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFT_ID_SWORD_FLARE, 0xbd)
                (EFT_TEX_SWORD, 0xbe)
                (EFT_TEX_SWORD_ADD, 0xbf)
                (GROUND_MOT, 0xc0)
                (AIR_MOT, 0xc1)
                (ACTIVE_CHAKRAM_OBJECT_ID, 0xc2)
                (BODY_EFFECT_HANDLE, 0xc3)
                (BODY_EFFECT_VIS_SET_ID, 0xc4)
                (BODY_EFFECT_VIS_GROUP_ID, 0xc5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe7)
                (MOT_FRAME_INHERIT, 0xe0)
                (MTRANS_SMPL_AIR, 0xe1)
                (MTRANS_SMPL_GROUND, 0xe2)
                (MTRANS_SMPL_MOTION_END, 0xe3)
                (MTRANS_SMPL_EX1, 0xe4)
                (REVERSE_SLASH_HOP, 0xe5)
                (REVERSE_SLASH_REFLECTOR_BREAK, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod tornado_shot {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (RECOVER_GRAVITY_COUNTER, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (STRANS_0, 0xc)
                    (STRANS_1, 0xd)
                    (MTRANS_SMPL_AIR, 0xe)
                    (MTRANS_SMPL_GROUND, 0xf)
                    (MTRANS_SMPL_MOTION_END, 0x10)
                    (MTRANS_SMPL_EX1, 0x11)
                );
            }
            pub mod light_syuriken {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod rapid_slash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_COUNT, 0x5)
                    (CHARGE_COUNT_MAX, 0x6)
                    (SITUATION_PREV, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (CHARGE_MAX, 0xd)
                    (TURN, 0xe)
                );
            }
            pub mod hensoku_slash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLAG, 0xb)
                    (HIT, 0xc)
                    (HIT_SHIELD, 0xd)
                    (END_LANDING, 0xe)
                );
            }
            pub mod shippu_slash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xa)
                    (SPD_X_MAX, 0x7)
                    (AIR_SPD_X_MAX, 0x8)
                    (CHARGE_RATE, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (ATK_CHARGE_COUNT, 0x6)
                    (SPD_CHARGE_COUNT, 0x7)
                    (DASH_COUNT, 0x8)
                    (HOLD_SE_HANDLE, 0x9)
                    (HOLD_MAX_AFTER_COUNT, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ATK_CHARGE_MAX, 0xd)
                    (SPD_CHARGE_MAX, 0xe)
                    (SEARCH_HIT, 0xf)
                    (CLIFF_CHK_START, 0x10)
                    (ATTACK_END, 0x11)
                    (CHARGE_MAX_EFT, 0x12)
                );
            }
            pub mod chakram {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SHOOT_ANGLE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (FLICK, 0xd)
                    (REQUEST_GENERATE, 0xe)
                    (CHECK_MOTION_HI_LW, 0xf)
                    (IS_GENERATE, 0x10)
                );
            }
            pub mod sdush_rush_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                    (ROT_X, 0x8)
                );
            }
            pub mod rslash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND, 0xc)
                );
            }
            pub mod rslash_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod counter {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (OPPONENT_OBJECT_ID, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (APPLY_POWERUP_MOTION_RATE, 0x10)
                    (APPLIED_POWERUP_MOTION_RATE, 0x11)
                    (IS_ATTACK_ENEMY, 0x12)
                    (SPECIAL_EFFECT, 0x13)
                    (GRAVITY_ON, 0x14)
                    (GRAVITY_OFF, 0x15)
                );
            }
            pub mod reverse_slash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (REFLECT_MOTION_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HIT_AFTER_XLU_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                    (SPECIAL_FALL, 0xd)
                    (HOP, 0xe)
                    (HIT, 0xf)
                    (REFLECT_SKIP_MOTION, 0x10)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                    (WAVE_ANGLE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_BLUR, 0xc)
                    (END_BLUR, 0xd)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (ROKET_UNDER_THRUST_START, 0x6)
                (JET_STUB_SPEED_COEFFICIENT, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (ROKET_UNDER_THRUST_GROUND_MOT, 0x5)
                (ROKET_UNDER_THRUST_AIR_MOT, 0x6)
                (ROKET_UNDER_THRUST_START_SITUATION, 0x7)
                (JET_STUB_START_SITUATION, 0x5)
                (JET_STUB_REDUCTION_LEFT, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (HENSOKU_SLASH_END, 0xf)
                (ROKET_UNDER_THRUST_FLAG_START, 0xb)
                (ROKET_UNDER_THRUST_MOT_FRAME_INHERIT, 0xc)
                (ROKET_UNDER_THRUST_REVERSE, 0xd)
                (ROKET_UNDER_DISABLE_CONTROL_X, 0xe)
                (JET_STUB_START, 0xb)
                (JET_STUB_SP_BRAKE, 0xc)
                (JET_STUB_CLIFF_CHECK, 0xd)
                (JET_STUB_WALL_CHECK, 0xe)
                (JET_STUB_FALL_ONOFF, 0xf)
                (JET_STUB_LANDING_FALL_SPECIAL, 0x10)
            );
        }
    }
    pub mod miigunner {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HEAD_RIGHT_OFFSET, 0x4c)
                (HEAD_LEFT_OFFSET, 0x4d)
                (HEAD_OFFSET, 0x4e)
                (HEAD_OFFSET_TIMER, 0x4f)
                (HEAD_OFFSET_TIMER_MAX, 0x50)
                (ABSORBER_POWER, 0x51)
                (ABSORBER_LR, 0x52)
                (FINAL_LASER_ANG, 0x53)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
                (EFH_CHARGE_MAX, 0xbf)
                (GUNNER_CHARGE_COUNT, 0xc0)
                (FINAL_LASER_C, 0xc1)
                (FINAL_GUN_ID, 0xc2)
                (FINAL_MOT2ND, 0xc3)
                (GROUND_BOMB_OBJECT_ID, 0xc4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xec)
                (MOT_FRAME_INHERIT, 0xe0)
                (ST_INIT, 0xe1)
                (MTRANS_SMPL_AIR, 0xe2)
                (MTRANS_SMPL_GROUND, 0xe3)
                (MTRANS_SMPL_MOTION_END, 0xe4)
                (MTRANS_SMPL_EX1, 0xe5)
                (CANNONJUMP_FALL, 0xe6)
                (REFLECTOR, 0xe7)
                (REFLECTOR_BREAK, 0xe8)
                (GRAVITY_BRAKE_USED, 0xe9)
                (FINAL_EXEC, 0xea)
                (CHANGE_ARTICLE, 0xeb)
            );
        }
        pub mod status {
            use super::*;
            pub mod gunner_charge {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT, 0x5)
                    (CANCEL_STATUS, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (MOT_RESTART, 0xc)
                    (BULLET_DISP, 0xd)
                    (SHOOT, 0xe)
                    (CHARGE, 0xf)
                    (AIR_START, 0x10)
                );
            }
            pub mod grenade_launcher {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (HOLD_COUNT, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (MAX, 0xd)
                );
            }
            pub mod flame_pillar {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
            }
            pub mod stealth_bomb {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x9)
                    (TIME, 0x5)
                    (STOP_TIME, 0x6)
                    (STOP_Y, 0x7)
                    (NO_BANG, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FLAG_1, 0xd)
                    (FLAG_2, 0xe)
                );
            }
            pub mod miimissile {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (WEAPON, 0xc)
                    (WEAPON_GENERATED, 0xd)
                    (SMASH, 0xe)
                    (MOT_RESTART, 0xf)
                );
            }
            pub mod bottom_shoot {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (JUMP, 0xc)
                );
            }
            pub mod cannonjump {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod cannonjump_jump {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (RECOVER_GRAVITY_COUNTER, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod arm_rocket {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (STOP_Y_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                );
            }
            pub mod arm_rocket_rush {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                    (ROT_X, 0x8)
                    (BRAKE, 0x9)
                    (CHANGE_ANGLE, 0xa)
                    (START_ANGLE, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (RUSH_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                    (AIR, 0xd)
                );
            }
            pub mod arm_rocket_rush_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                    (ROT_X, 0x8)
                );
            }
            pub mod ground_bomb {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (EXIST_BOMB_BURST, 0xd)
                );
            }
            pub mod absorber {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_Y_TIME, 0x6)
                    (SE_HANDLE, 0x7)
                    (EFFECT_HANDLE, 0x8)
                    (WAIT_MTRANS_KIND, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (BUTTON_RELEASE, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (OY, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (GROUND_MOT, 0x5)
                    (AIR_MOT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_RESTART, 0xc)
                );
            }
        }
    }
    pub mod popo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (PARTNER_SITUATION_AIR_POS_X_OFFSET, 0x4c)
            );
            make_work_ids!(
                Int,
                Instance,
                (OLD_REC, 0xbd)
                (PARTNER_OBJECT_ID, 0xbe)
                (UNABLE_TRANSITION_COUNTER, 0xbf)
                (FORBID_HANG_CONDOR_FRAME, 0xc0)
                (RESERVE_HIT_STOP_FRAME, 0xc1)
                (MODIFY_JOSTLE_COMP_RATE_CONTINUAL_FRAME, 0xc2)
                (CONDOR_OBJECT_ID, 0xc3)
                (DAMAGE_FACE_COUNTER, 0xc4)
                (READY_GO_FORBID_COUNTER, 0xc5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (PRE_START, 0xdf)
                (TERM, 0xf2)
                (SPECIAL_N_RAISE, 0xe0)
                (SPECIAL_HI_UNABLE, 0xe1)
                (SPECIAL_AIR_S_FALL, 0xe2)
                (FINAL_UNABLE, 0xe3)
                (ENABLE_TRANSITION_FORBID, 0xe4)
                (RESERVE_UNABLE_TRANSITION_FORBID, 0xe5)
                (SUBFIGHTER_CAMERA, 0xe6)
                (HANG_CONDOR, 0xe7)
                (SEARCH_CONDOR, 0xe8)
                (MODIFY_JOSTLE_MAIN, 0xe9)
                (NOT_MODIFY_JOSTLE_MAIN, 0xea)
                (SPECIAL_HI_CLIFF_CATCH, 0xeb)
                (PARTNER_MODIFY_POS_X_OFFSET, 0xec)
                (RESERVE_HIT_STOP, 0xed)
                (MAIN_FIGHTER_NANA, 0xee)
                (PAUSE, 0xef)
                (CANCEL_CONBINATION_UNABLE_COUPLE_TECH, 0xf0)
                (RESERVE_HIT_STOP_USE_SLOW_RATE, 0xf1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (GENERATE_ARTICLE, 0xc)
                    (GENERATE_ARTICLE_SUCCESS, 0xd)
                    (ENABLE_COUPLE, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (TERM, 0xa)
                    (SPEED_UP_Y_COUNT, 0x7)
                    (AIR_HOP_BUTTON_TRIGGER_COUNTER, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (COUPLE, 0xc)
                    (INIT_SPEED, 0xd)
                    (NORMAL_FALL, 0xe)
                    (PHASE_END, 0xf)
                    (CANCEL, 0x10)
                    (UNABLE_BUTTON_HOP, 0x11)
                    (AIR_HOP_BUTTON_TRIGGER, 0x12)
                );
            }
            pub mod special_s_accel {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MUL, 0x7)
                );
            }
            pub mod special_s_partner {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOTION_GROUND, 0x13)
                    (MOTION_AIR, 0x14)
                    (ENABLE_COUPLE, 0x15)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (END, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (COUPLE, 0xc)
                    (INIT_SPEED, 0xd)
                    (CHECK_COUPLE, 0xe)
                    (DETACH_PARTNER, 0xf)
                    (DEFAULT_SPEED_Y, 0x12)
                    (FAIL_CLIFF_START, 0x13)
                    (PARTNER_PULL_CANCEL, 0x14)
                    (CAN_LANDING, 0x15)
                );
            }
            pub mod special_hi_partner {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (MOTION_GROUND, 0x10)
                    (MOTION_AIR, 0x11)
                );
            }
            pub mod special_hi_fall {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (SITUATION, 0x7)
                );
            }
            pub mod special_hi_jump_pre {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (ADVANCE_JUMP, 0xc)
                    (INIT_SPEED, 0xd)
                    (PARTNER_CLIFF_CATCH, 0xe)
                    (PARTNER_PULL_CANCEL, 0xf)
                    (TERM, 0x10)
                );
            }
            pub mod special_hi_cliff_comp_partner {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CLIFF_POS_X, 0x7)
                    (CLIFF_POS_Y, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLIFF_NONE, 0xc)
                );
            }
            pub mod special_hi_cliff_pull_partner {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (PULL, 0xc)
                    (CLIFF_XLU, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod special_hi_cliff_comp {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CLIFF_POS_X, 0x7)
                    (CLIFF_POS_Y, 0x8)
                    (TERM, 0x9)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (COUPLE_NANA, 0xc)
                    (ENABLE_COUPLE, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (MOVE_COUNT, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (COUPLE, 0xc)
                    (COUPLE_MOVE, 0xd)
                    (FINAL_CAMERA, 0xe)
                );
            }
            pub mod final__partner {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (END, 0xc)
                    (MOTION_GROUND, 0xd)
                    (MOTION_AIR, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod cliff_catch_move {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x13)
                    (SPECIAL_HI_PARTNER, 0x14)
                    (TERM, 0x15)
                );
            }
            pub mod cliff_catch {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x13)
                    (SPECIAL_HI_PARTNER, 0x14)
                    (TO_PULL_PARTNER, 0x15)
                    (TERM, 0x16)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (TERM, 0x23)
                );
            }
            pub mod attack_lw4 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (NANA_START_TURN, 0x21)
                    (NANA_TURN, 0x22)
                );
            }
            pub mod turn {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xf)
                    (REVERSE_FLIP_STATUS, 0x10)
                );
            }
            pub mod turn_run {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xf)
                    (REVERSE_FLIP_STATUS, 0x10)
                );
            }
            pub mod turn_run_brake {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (REVERSE_FLIP_STATUS, 0xc)
                );
            }
            pub mod dash {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x14)
                    (REVERSE_FLIP_STATUS, 0x15)
                );
            }
            pub mod escape {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x17)
                    (REVERSE_FLIP_STATUS, 0x18)
                );
            }
            make_work_ids!(
                Int,
                Status,
                (MOT_KIND, 0x5)
                (MOT_AIR_KIND, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xc)
            );
        }
    }
    pub mod miienemyf {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_N2_COUNT, 0x4c)
                (SPECIAL_S3_CHARGE_RATE, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
                (SPECIAL_N2_EFFECT, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe8)
                (ST_INIT, 0xe0)
                (MOT_FRAME_INHERIT, 0xe1)
                (MTRANS_SMPL_AIR, 0xe2)
                (MTRANS_SMPL_GROUND, 0xe3)
                (MTRANS_SMPL_MOTION_END, 0xe4)
                (MTRANS_SMPL_EX1, 0xe5)
                (N2_EFFECT, 0xe6)
                (REVERSAL_KICK, 0xe7)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n1 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_n2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PUNCH_COUNT, 0x5)
                    (DEFAULT_POWER_0, 0x6)
                    (DEFAULT_POWER_1, 0x7)
                    (POWER_ADD, 0x8)
                    (SPEED_STEP, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (CANCEL, 0xd)
                    (MAX, 0xe)
                );
            }
            pub mod syoten_kick {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND, 0xc)
                );
            }
            pub mod syoten_kick_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod special_lw2 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FLAG1, 0xc)
                    (FLAG2, 0xd)
                    (FROM_GR, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                );
            }
            pub mod special_lw3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x7)
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WALL_JUMP_NUM, 0x5)
                    (TREAD_TARGET_ID, 0x6)
                    (TREAD_TARGET_CATEGORY, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (KICK_ENABLE, 0xc)
                    (TREAD_ENABLE, 0xd)
                    (TREAD, 0xe)
                    (WALL_JUMP_ENABLE, 0xf)
                    (REVERSE, 0x10)
                    (START_WAIT_INPUT, 0x11)
                    (KICK, 0x12)
                    (JUMP, 0x13)
                    (KICK_REVERSE_ENABLE, 0x14)
                    (KICK_REVERSE, 0x15)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (BAKURETU_KICK_START_CHARA_DIR, 0x7)
                (NENSYO_KICK_CHARGE_RATE, 0x7)
                (TENCHI_KICK_START, 0x6)
                (_100RUSH_SPEED_COEFFICIENT, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (BAKURETU_KICK_AIR_PHASE, 0x5)
                (BAKURETU_KICK_PREV_AIR_PHASE, 0x6)
                (BAKURETU_KICK_PREV_SITUATION, 0x7)
                (_100KICK_START_SITUATION, 0x5)
                (NENSYO_KICK_HOLD_COUNT, 0x5)
                (NENSYO_KICK_WEAK_FRAME, 0x6)
                (NENSYO_KICK_PREV_SITUATION, 0x7)
                (TENCHI_KICK_START_SITUATION, 0x5)
                (_100RUSH_START_SITUATION, 0x5)
                (_100RUSH_REDUCTION_LEFT, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (BAKURETU_KICK_START, 0xb)
                (BAKURETU_KICK_TURN, 0xc)
                (BAKURETU_KICK_CHECK_END, 0xd)
                (BAKURETU_KICK_DIR_DECIDE, 0xe)
                (BAKURETU_KICK_DIR_DECIDE_END, 0xf)
                (BAKURETU_KICK_BRAKE_FALL, 0x10)
                (BAKURETU_KICK_NORMAL_FALL, 0x11)
                (_100KICK_START, 0xb)
                (_100KICK_HIT, 0xc)
                (_100KICK_HIT_CHECK_ONOFF, 0xd)
                (_100KICK_CLIFF_FALL_ONOFF, 0xe)
                (_100KICK_GRAVITY_ONOFF, 0xf)
                (_100KICK_ENABLE_CONTROL_X, 0x10)
                (NENSYO_KICK, 0xb)
                (NENSYO_KICK_FLICK, 0xc)
                (NENSYO_KICK_ATTACK_TRIGGER, 0xd)
                (NENSYO_KICK_BRAKE_TRIGGER, 0xe)
                (NENSYO_KICK_ATTACK_POWER_MODIFY, 0xf)
                (NENSYO_KICK_HIT, 0x10)
                (NENSYO_KICK_CHG_SA, 0x11)
                (NENSYO_KICK_AIR, 0x12)
                (NENSYO_KICK_HOLD_START, 0x13)
                (NENSYO_KICK_END, 0x14)
                (TENCHI_KICK_FLAG_START, 0xb)
                (TENCHI_KICK_REVERSE, 0xc)
                (TENCHI_KICK_FALL_START, 0xd)
                (TENCHI_KICK_DISABLE_CONTROL_X, 0xe)
                (_100RUSH_START, 0xb)
                (_100RUSH_SP_BRAKE, 0xc)
                (_100RUSH_CLIFF_CHECK, 0xd)
                (_100RUSH_WALL_CHECK, 0xe)
                (_100RUSH_FALL_ONOFF, 0xf)
            );
        }
    }
    pub mod miienemys {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HEAD_RIGHT_OFFSET, 0x4c)
                (HEAD_LEFT_OFFSET, 0x4d)
                (HEAD_OFFSET, 0x4e)
                (HEAD_OFFSET_TIMER, 0x4f)
                (HEAD_OFFSET_TIMER_MAX, 0x50)
                (SDUSH_DECIDE_STICK_X, 0x51)
                (SDUSH_DECIDE_STICK_Y, 0x52)
                (SPECIAL_S3_CHARGE_RATE, 0x53)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
                (HOLD_COUNT, 0xbf)
                (FINAL_SHOOT_SPAN_FRAME, 0xc0)
                (FINAL_SHOOT_COUNT, 0xc1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe7)
                (MOT_FRAME_INHERIT, 0xe0)
                (MTRANS_SMPL_AIR, 0xe1)
                (MTRANS_SMPL_GROUND, 0xe2)
                (MTRANS_SMPL_MOTION_END, 0xe3)
                (MTRANS_SMPL_EX1, 0xe4)
                (SPECIAL_LW2_HOP, 0xe5)
                (SEPCIAL_LW2_REFLECTOR_BREAK, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n1 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CHARGE_COUNT, 0x5)
                    (CHARGE_COUNT_MAX, 0x6)
                    (SITUATION_PREV, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (CHARGE_MAX, 0xd)
                );
            }
            pub mod special_n2 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_n3 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (RECOVER_GRAVITY_COUNTER, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (STRANS_0, 0xc)
                    (STRANS_1, 0xd)
                    (MTRANS_SMPL_AIR, 0xe)
                    (MTRANS_SMPL_GROUND, 0xf)
                    (MTRANS_SMPL_MOTION_END, 0x10)
                    (MTRANS_SMPL_EX1, 0x11)
                );
            }
            pub mod chakram {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (MOTION, 0x5)
                    (MOTION_AIR, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                    (FLICK, 0xd)
                );
            }
            pub mod special_s2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (SPD_X_MAX, 0x7)
                    (AIR_SPD_X_MAX, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                    (ATK_CHARGE_COUNT, 0x6)
                    (SPD_CHARGE_COUNT, 0x7)
                    (DASH_COUNT, 0x8)
                    (HOLD_SE_HANDLE, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (ATK_CHARGE_MAX, 0xd)
                    (SPD_CHARGE_MAX, 0xe)
                    (SEARCH_HIT, 0xf)
                    (CLIFF_CHK_START, 0x10)
                    (ATTACK_END, 0x11)
                );
            }
            pub mod rslash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND, 0xc)
                );
            }
            pub mod rslash_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOLD_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0xc)
                );
            }
            pub mod special_lw1 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SITUATION_PREV, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE_MOT, 0xc)
                    (SHIELD, 0xd)
                    (SHIELD_CHK, 0xe)
                    (SHIELD_HIT, 0xf)
                    (APPLY_POWERUP_MOTION_RATE, 0x10)
                    (APPLIED_POWERUP_MOTION_RATE, 0x11)
                );
            }
            pub mod special_lw2 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CONTINUE, 0xc)
                    (SPECIAL_FALL, 0xd)
                    (HOP, 0xe)
                    (TERM, 0xf)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (SPECIAL_S3_CHARGE_RATE, 0x7)
                (SPECIAL_S3_MOT_RATE, 0x8)
                (ROKET_UNDER_THRUST_START, 0x6)
                (JET_STUB_SPEED_COEFFICIENT, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (SPECIAL_S3_HOLD_COUNT, 0x5)
                (SPECIAL_S3_WEAK_FRAME, 0x6)
                (SPECIAL_S3_PREV_SITUATION, 0x7)
                (ROKET_UNDER_THRUST_GROUND_MOT, 0x5)
                (ROKET_UNDER_THRUST_AIR_MOT, 0x6)
                (ROKET_UNDER_THRUST_START_SITUATION, 0x7)
                (JET_STUB_START_SITUATION, 0x5)
                (JET_STUB_REDUCTION_LEFT, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (SPECIAL_S3, 0xb)
                (SPECIAL_S3_FLICK, 0xc)
                (SPECIAL_S3_ATTACK_TRIGGER, 0xd)
                (SPECIAL_S3_BRAKE_TRIGGER, 0xe)
                (SPECIAL_S3_ATTACK_POWER_MODIFY, 0xf)
                (SPECIAL_S3_HIT, 0x10)
                (SPECIAL_S3_HIT2, 0x11)
                (SPECIAL_S3_HIT_FAILED, 0x12)
                (SPECIAL_S3_CHG_SA, 0x13)
                (SPECIAL_S3_AIR, 0x14)
                (SPECIAL_S3_END, 0x15)
                (ROKET_UNDER_THRUST_FLAG_START, 0xb)
                (ROKET_UNDER_THRUST_MOT_FRAME_INHERIT, 0xc)
                (ROKET_UNDER_THRUST_REVERSE, 0xd)
                (ROKET_UNDER_DISABLE_CONTROL_X, 0xe)
                (JET_STUB_START, 0xb)
                (JET_STUB_SP_BRAKE, 0xc)
                (JET_STUB_CLIFF_CHECK, 0xd)
                (JET_STUB_WALL_CHECK, 0xe)
                (JET_STUB_FALL_ONOFF, 0xf)
                (JET_STUB_LANDING_FALL_SPECIAL, 0x10)
            );
        }
    }
    pub mod miienemyg {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HEAD_RIGHT_OFFSET, 0x4c)
                (HEAD_LEFT_OFFSET, 0x4d)
                (HEAD_OFFSET, 0x4e)
                (HEAD_OFFSET_TIMER, 0x4f)
                (HEAD_OFFSET_TIMER_MAX, 0x50)
                (ABSORBER_POWER, 0x51)
                (ABSORBER_LR, 0x52)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_MOT, 0xbd)
                (AIR_MOT, 0xbe)
                (EFH_CHARGE_MAX, 0xbf)
                (SPECIAL_N1_COUNT, 0xc0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe9)
                (MOT_FRAME_INHERIT, 0xe0)
                (ST_INIT, 0xe1)
                (MTRANS_SMPL_AIR, 0xe2)
                (MTRANS_SMPL_GROUND, 0xe3)
                (MTRANS_SMPL_MOTION_END, 0xe4)
                (MTRANS_SMPL_EX1, 0xe5)
                (SPECIAL_HI1_FALL, 0xe6)
                (REFLECTOR, 0xe7)
                (REFLECTOR_BREAK, 0xe8)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n1 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (MOT_RESTART, 0xc)
                    (BULLET_DISP, 0xd)
                    (SHOOT, 0xe)
                    (CHARGE, 0xf)
                    (AIR_START, 0x10)
                );
            }
            pub mod special_n3 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_s1 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (WEAPON, 0xc)
                    (SMASH, 0xd)
                    (MOT_RESTART, 0xe)
                );
            }
            pub mod special_s2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_SITUATION, 0x5)
                );
            }
            pub mod special_s3 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x9)
                    (TIME, 0x5)
                    (STOP_TIME, 0x6)
                    (STOP_Y, 0x7)
                    (NO_BANG, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (FLAG_1, 0xd)
                    (FLAG_2, 0xe)
                );
            }
            pub mod special_hi1 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (COMP_POS_X, 0x7)
                    (COMP_POS_Y, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x5)
                    (COMP_COUNTER, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod special_hi1_jump {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (RECOVER_GRAVITY_COUNTER, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                );
            }
            pub mod special_hi2 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (JUMP, 0xc)
                );
            }
            pub mod special_hi3 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (STOP_Y_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                );
            }
            pub mod special_hi3_rush {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                    (BRAKE_X, 0x8)
                    (BRAKE_Y, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (RUSH_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUE, 0xc)
                    (AIR, 0xd)
                );
            }
            pub mod special_hi3_rush_end {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                );
            }
            pub mod special_lw1 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (FIRST, 0xc)
                    (TERM, 0xd)
                );
            }
            pub mod special_lw3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TIME, 0x5)
                    (STOP_Y_TIME, 0x6)
                    (SE_HANDLE, 0x7)
                    (EFFECT_HANDLE, 0x8)
                    (WAIT_MTRANS_KIND, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (BUTTON_RELEASE, 0xd)
                );
            }
        }
    }
    pub mod packun {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_S_COUNT, 0xbe)
                (SPECIAL_S_CHARGE_MAX_EFFECT_HANDLE, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe3)
                (SPECIAL_N_WAIT_END, 0xe1)
                (SPECIAL_S_LANDING, 0xe2)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_SCALE, 0x7)
                    (SHOOT_START_SPIKEBALL_POS_X, 0x8)
                    (SHOOT_START_SPIKEBALL_POS_Y, 0x9)
                    (SHOOT_START_SPIKEBALL_DISTANCE, 0xa)
                    (SHOOT_SPIKEBALL_SPEED_MUL, 0xb)
                    (TERM, 0xc)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHOOT_FRONT, 0xc)
                    (SHOOT_PREVIOUS_WAIT, 0xd)
                    (SHOOT_BLOW_SPIKEBALL, 0xe)
                    (END_PREVIOUS_SHOOT, 0xf)
                    (GENERATE_ARTICLE_SPIKEBALL, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CANCEL_TYPE, 0x5)
                    (TERM, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FAILURE, 0xc)
                    (CHANGE_KINETIC, 0xd)
                    (CHANGE_KINETIC_DONE, 0xe)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ANGLE, 0x7)
                    (PENDULUM_REACH_ANGLE, 0x8)
                    (STICK_LR, 0x9)
                    (STICK_REVERSE_LR, 0xa)
                    (STICK_LOG_START, 0xb)
                    (STICK_LOG_1, 0xb)
                    (STICK_LOG_2, 0xc)
                    (STICK_LOG_3, 0xd)
                    (STICK_LOG_4, 0xe)
                    (STICK_LOG_5, 0xf)
                    (STICK_LOG_6, 0x10)
                    (STICK_LOG_7, 0x11)
                    (STICK_LOG_8, 0x12)
                    (STICK_LOG_END, 0x12)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (STATUS_FRAME, 0x5)
                    (INERTIA_STATUS, 0x6)
                    (PENDULUM_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START_RISE, 0xc)
                    (FORCE_REATCH_TO_LEFT, 0xd)
                    (DIVE, 0xe)
                );
            }
            pub mod special_hi_dive {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (DONE, 0xf)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (DEGREE, 0x7)
                    (TOP_DEGREE, 0x8)
                    (CENTER_X, 0x9)
                    (CENTER_Y, 0xa)
                    (ADD_DEGREE, 0xb)
                    (SPEED_Y, 0xc)
                    (CHARGE_RATE, 0xd)
                    (STALK_LENGTH, 0xe)
                    (STALK_MOTION_RATE, 0xf)
                    (STALK_LENGTH_RATE, 0x10)
                    (JOINT_NECK_TRANS, 0x11)
                    (JOINT_THROW_X, 0x12)
                    (JOINT_THROW_Y, 0x13)
                    (JOINT_ROT_X, 0x14)
                    (JOINT_ROT_Y, 0x15)
                    (TERM, 0x16)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (GROUND_HIT_COUNT, 0x5)
                    (CHARGE_COUNT, 0x6)
                    (EXTEND_FRAME, 0x7)
                    (SHORTEN_COUNT, 0x8)
                    (UMARI_STATUS, 0x9)
                    (TILT_INIT_STATUS, 0xa)
                    (BITE_POSITION_FRAME, 0xb)
                    (BITE_LOUPE_RANK_TYPE, 0xc)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TILT, 0xc)
                    (BACK_TILT, 0xd)
                    (HIT_GROUND_TILT, 0xe)
                    (SITUATION_AIR_TO_GROUND, 0xf)
                    (HIT_GROUND, 0x10)
                    (HIT_GROUND_SE, 0x11)
                    (STALK_SHORTEN, 0x12)
                    (STALK_SHORTEN_DONE, 0x13)
                    (HIT_BATTLE_OBJECT, 0x14)
                    (ATTACK_LERP, 0x15)
                    (CHANGE_MOTION, 0x16)
                    (TILT_INIT_MODIFY_ROT, 0x17)
                    (RESET_SHORTEN_EXPAND_FRAME_DONE, 0x18)
                    (TILT_START, 0x19)
                    (BITE_ATTACK, 0x1a)
                    (BITE_TURN, 0x1b)
                    (BITE_LOUPE_OFF, 0x1c)
                    (BITE_LOUPE_STATUS, 0x1d)
                    (BITE_GROUND_DAMAGE, 0x1e)
                    (BITE_ATTACK_DONE, 0x1f)
                    (BITE_ATTACK_CLEAR_DONE, 0x20)
                    (END_CHANGE_KINETIC, 0x21)
                    (END_CHANGE_KINETIC_DONE, 0x22)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod squat_tread_damage {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TREAD_OBJECT_ID, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (JUMP_MINI, 0xc)
                );
            }
            pub mod tread_damage {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TERM, 0x6)
                );
            }
        }
    }
    pub mod jack {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (REBEL_GAUGE, 0x4d)
                (RESULT_EFFECT_R, 0x4e)
                (RESULT_EFFECT_G, 0x4f)
                (RESULT_EFFECT_B, 0x50)
                (RESULT_DROP_SHADOW_R, 0x51)
                (RESULT_DROP_SHADOW_G, 0x52)
                (RESULT_DROP_SHADOW_B, 0x53)
            );
            make_work_ids!(
                Int,
                Instance,
                (DOYLE_SUMMON_DISPATCH_WAIT_FRAME, 0xbe)
                (DOYLE_SUSPEND_LIFE, 0xbf)
                (CUSTOMIZE_TO, 0xc0)
                (SPECIAL_KIND_CUSTOMIZE, 0xc1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xed)
                (DOYLE, 0xe1)
                (DOYLE_EXIST, 0xe2)
                (DOYLE_SUMMON, 0xe3)
                (DOYLE_END, 0xe4)
                (DOYLE_CUT_IN, 0xe5)
                (SPECIAL_AIR_HI_HOP, 0xe6)
                (DOYLE_SUSPEND, 0xe7)
                (FIXED_MOVIE, 0xe8)
                (ADD_REBEL_GAUGE, 0xe9)
                (RESERVE_SUMMON_DISPATCH, 0xea)
                (LOW_MODE, 0xeb)
                (MASK_APPEAR_EFFECT, 0xec)
            );
        }
        pub mod status {
            use super::*;
            pub mod summon {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CUT_IN_EFFECT_HANDLE, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CUT_IN_EFFECT, 0xc)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (BUTTON_RAPID_COUNT, 0x5)
                    (MOTION_KIND, 0x6)
                    (BARRAGE_LOOP, 0x7)
                    (ESCAPE, 0x8)
                    (BARRAGE_SHOOT_INTERVAL, 0x9)
                    (STICK_DIR, 0xa)
                    (STICK_FRAME, 0xb)
                    (HIT_XLU_FRAME, 0xc)
                    (HIT_NORMAL_FRAME, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHECK_BUTTON_RAPID, 0xc)
                    (BARRAGE_LW, 0xd)
                    (ESCAPE_F, 0xe)
                    (BARRAGE_CHECK_RAPID, 0xf)
                    (CHECK_NEXT_STATUS, 0x10)
                    (UNABLE_JUMP, 0x11)
                    (UNABLE_SPECIAL_N, 0x12)
                    (CHECK_BARRAGE_TRIGGER, 0x13)
                    (CHECK_BARRAGE_BUTTON_ON, 0x14)
                    (ENABLE_CONTROL_ENERGY, 0x15)
                    (STOP_SHOOT_SE, 0x13)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (SET_FALL_NORMAL, 0xc)
                    (FALL_NORMAL, 0xd)
                    (ENABLE_CONTROL_ENERGY, 0xe)
                    (CONTROL_ENERGY, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TARGET_X, 0xa)
                    (TARGET_Y, 0xb)
                    (TARGET_Z, 0xc)
                    (ITEM_OFFSET_X, 0xd)
                    (ITEM_OFFSET_Y, 0xe)
                    (ITEM_OFFSET_Z, 0xf)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HIT_OBJECT_ID, 0x8)
                    (HIT_OBJECT_CATEGORY, 0x9)
                    (TARGET_OBJECT_ID, 0xa)
                    (TARGET_OBJECT_CATEGORY, 0xb)
                    (ITEM_JOINT_ID, 0xc)
                    (HIT_STOP_FRAME, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (AIR_LASSO_FAIL, 0x12)
                    (HIT, 0x13)
                    (PICKUP, 0x14)
                    (REVERSE_LR, 0x15)
                    (SHOOT_WIREROPE, 0x16)
                );
            }
            pub mod special_hi2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SDIR, 0x7)
                    (BRAKE_X, 0x8)
                    (BRAKE_Y, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (STOP_Y_FRAME, 0x5)
                    (RUSH_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (APPEAR_DOYLE, 0xc)
                    (DOYLE_NORMAL, 0xd)
                    (REVERSE_LR, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HOLD_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GUARD_START, 0xc)
                    (GUARD, 0xd)
                    (ENDURE, 0xe)
                    (SPECIAL_EFFECT, 0xf)
                );
            }
            pub mod special_lw2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SHIELD_TARGET_LR, 0x7)
                    (SHIELD_ATTACK_POWER, 0x8)
                    (REFLECTOR_OBJECT_X, 0x9)
                    (REFLECTOR_OBJECT_Y, 0xa)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHIELD_HIT, 0xc)
                    (IS_SHIELD_ATTACK_ENEMY, 0xd)
                    (CHANGE_STATUS_REFLECT, 0xe)
                    (REFLECTOR_BREAK, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOVIE_RATE, 0x7)
                    (SCALE_BASE, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOVIE_STATUS, 0x5)
                    (SCENE_DAMAGE_COUNT, 0x6)
                    (DASH_FRAME, 0x7)
                    (DASH_FRAME_INIT, 0x8)
                    (MOTION_KIND, 0x9)
                    (MOTION_KIND_AIR, 0xa)
                    (TARGET_MOTION_INDEX, 0xb)
                    (CUT_IN_INDEX, 0xc)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (ZOOM_START, 0xe)
                    (CLEAR_ATTACK, 0xf)
                    (ABS_SET, 0x10)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (SCENE_DAMAGE_REQUEST, 0x13)
                    (TARGET_VIS_ON, 0x16)
                    (TARGET_FURAFURA, 0x17)
                    (FINISH, 0x18)
                    (CHECK_RESULT, 0x19)
                    (SCREEN_CAPTURE, 0x1a)
                    (TO_SPECIAL_RESULT, 0x1b)
                    (SCENE01_SYNC, 0x1c)
                    (END_FINAL, 0x1d)
                    (END_FINAL_DONE, 0x1e)
                );
            }
            pub mod final__end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_CORRECT_ON, 0x14)
                    (GROUND_CORRECT_SET, 0x15)
                );
            }
        }
    }
    pub mod brave {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (MAX_SP, 0x52)
                (SP, 0x53)
            );
            make_work_ids!(
                Int,
                Instance,
                (SP_RECOVER_COUNT, 0xc0)
                (SPECIAL_N_HOLD_FRAME, 0xc1)
                (SPECIAL_N_MAX_EFFECT_HANDLE, 0xc2)
                (SPARK_COLLISION_LOG_GROUP, 0xc3)
                (SPARK_REF_COLLISION_LOG_NUM, 0xc4)
                (LIGHTNING_COLLISION_LOG_GROUP, 0xc5)
                (EFFECT_KIND_SWORD_FLARE, 0xc6)
                (EFFECT_KIND_LIGHTNING_SWORD_FLARE, 0xc7)
                (SPECIAL_LW_SELECT_INDEX, 0xc8)
                (SPECIAL_LW_DECIDE_COMMAND, 0xc9)
                (SPECIAL_LW_VARIOUS_KIND, 0xca)
                (SPECIAL_LW_CURE_USE_COUNT, 0xcb)
                (SPECIAL_LW_REFLECT_FRAME, 0xcc)
                (SPECIAL_LW_REFLECT_AFTER_FRAME, 0xcd)
                (SPECIAL_LW_ATTACK_UP_FRAME, 0xce)
                (SPECIAL_LW_SPEED_UP_FRAME, 0xcf)
                (SPECIAL_LW_VARIOUS_SPYCLOAK_FRAME, 0xd0)
                (SPECIAL_LW_WINDOW_STATE, 0xd1)
                (SPECIAL_LW_WINDOW_CLOSING_FRAME, 0xd2)
                (SPECIAL_LW_WINDOW_OVERWRITE_FRAME, 0xd3)
                (SPECIAL_LW_COMMAND_LIST_01_FOR_AI, 0xd4)
                (SPECIAL_LW_COMMAND_LIST_02_FOR_AI, 0xd5)
                (SPECIAL_LW_COMMAND_LIST_03_FOR_AI, 0xd6)
                (SPECIAL_LW_COMMAND_LIST_04_FOR_AI, 0xd7)
                (FINAL_MOVIE_HASH, 0xd8)
                (SPECIAL_LW_DECIDE_COMMAND_FOR_AI, 0xd9)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe4)
                (TERM, 0xee)
                (DISABLE_SP_AUTO_RECOVER, 0xe5)
                (CRITICAL_HIT, 0xe6)
                (PLAY_MISS_SE, 0xe7)
                (SPECIAL_N_MAX_EFFECT, 0xe8)
                (SPECIAL_N_HOP_DONE, 0xe9)
                (SPECIAL_LW_CHARGE, 0xea)
                (SPECIAL_LW_CRASH2_DEATH_RESERVE, 0xeb)
                (SPECIAL_LW_CRASH2_DEATH_VOICE, 0xec)
                (SPECIAL_LW_ENABLE_COMMAND_WINDOW_OVERWRITE, 0xed)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOP_SPEED_Y, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SHOOT_MOTION, 0x6)
                    (SHOOT_AIR_MOTION, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SUCCESS_SP, 0xc)
                    (START_M, 0xd)
                    (CANCEL_L, 0xe)
                    (TO_SHOOT, 0xf)
                    (HOP, 0x10)
                    (ENABLE_CONTROL_ENERGY, 0x11)
                    (CONTROL_ENERGY, 0x12)
                    (REVERT_FALL_SPEED, 0x13)
                    (NORMAL_FALL_SPEED, 0x14)
                );
            }
            pub mod special_n_hold {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (NEXT_STATUS, 0x5)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TARGET_POS_X_RIGHT, 0x7)
                    (TARGET_POS_X_LEFT, 0x8)
                    (TARGET_POS_Y_RIGHT, 0x9)
                    (TARGET_POS_Y_LEFT, 0xa)
                    (TARGET_GENERATE_X, 0xb)
                    (TARGET_GENERATE_Y, 0xc)
                    (TARGET_GENERATE_LR, 0xd)
                    (LIGHTNING_OFFSET_X, 0xe)
                    (TERM, 0xf)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HOLD_FRAME, 0x5)
                    (STORE_TARGET_PRIORITY_RIGHT, 0x6)
                    (STORE_TARGET_PRIORITY_LEFT, 0x7)
                    (SPARK_WAIT_COUNT_RIGHT, 0x8)
                    (SPARK_WAIT_COUNT_LEFT, 0x9)
                    (LIGHTNING_ACTIVE_COUNT, 0xa)
                    (LIGHTNING_INTERVAL_COUNT, 0xb)
                    (LIGHTNING_TEAM_NO, 0xc)
                    (LIGHTNING_OWNER, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SUCCESS_SP, 0xc)
                    (STORE_TARGET_RIGHT, 0xd)
                    (STORE_TARGET_LEFT, 0xe)
                    (ENABLE_SPARK, 0xf)
                    (DECIDE_SPARK_RIGHT, 0x10)
                    (DECIDE_SPARK_LEFT, 0x11)
                    (FINISH_SPARK_RIGHT, 0x12)
                    (FINISH_SPARK_LEFT, 0x13)
                    (ACTIVATE_LIGHTNING, 0x14)
                    (CALL_EXPLOSION, 0x15)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (INIT_DEGREE_X, 0x7)
                    (DEGREE_X, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HOLD_FRAME, 0x5)
                    (JUMP_COUNT, 0x6)
                    (REVERT_ANGLE_COUNT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SUCCESS_SP, 0xc)
                    (JUMP_START, 0xd)
                    (JUMP, 0xe)
                    (FALL, 0xf)
                    (REVERT_ANGLE, 0x10)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SUCCESS_SP, 0xc)
                    (ENABLE_CONTROL_ENERGY, 0xd)
                    (CONTROL_ENERGY, 0xe)
                    (DECIDE, 0xf)
                    (GUARD_CANCEL, 0x10)
                    (JUMP_CANCEL, 0x11)
                    (START_BLINK, 0x12)
                    (AUTO_CANCEL, 0x13)
                );
            }
            pub mod special_lw_hold {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (SELECT_INPUT_COUNT, 0x5)
                    (SELECT_MOTION, 0x6)
                    (SELECT_MOTION_AIR, 0x7)
                    (NEXT_STATUS, 0x8)
                    (SELECT_FRAME, 0x9)
                );
            }
            pub mod special_lw_start {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (SP, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ACTIVE_COMMAND, 0x5)
                    (ACTIVE_VARIOUS_KIND, 0x6)
                    (STEEL_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (STRENGTH, 0x14)
                    (GENERATED_ARTICLE, 0x15)
                    (STEEL, 0x16)
                    (ENABLE_STEEL, 0x17)
                    (ENABLE_GRAVITY, 0x18)
                    (DEATH_RESERVE, 0x19)
                    (SLOW_WHOLE, 0x1a)
                    (FULLBURST_INTERRUPT, 0x1b)
                );
            }
            pub mod special_lw_flying {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (TERM, 0xb)
                    (TARGET_POS_X, 0x8)
                    (TARGET_POS_Y, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COUNTER, 0x8)
                    (ARRIVE_TIME, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ARRIVED, 0x1c)
                    (CORRECT_CHANGED, 0x1d)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOVIE_RATE, 0x7)
                    (MOTION_CAMERA_RATE, 0x8)
                    (SCALE_BASE, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (END_FINAL, 0x13)
                    (END_FINAL_DONE, 0x14)
                    (TO_SCENE01, 0x15)
                    (SCENE01_SYNC, 0x16)
                    (GROUND_CORRECT_SET, 0x17)
                    (GROUND_CORRECT_ON, 0x18)
                    (TERM, 0x19)
                );
            }
        }
    }
    pub mod buddy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_S_REMAIN, 0xbe)
                (SPECIAL_S_HUD_FRAME, 0xbf)
                (SPECIAL_S_HUD_EFFECT_HANDLE, 0xc0)
                (SPECIAL_LW_HOP_COUNT, 0xc1)
                (EFFECT_KIND_FLYING, 0xc2)
                (EFFECT_KIND_ROLLING, 0xc3)
                (EFFECT_KIND_SCATTER, 0xc4)
                (SPECIAL_N_SHOOT_AIR_NEXT_COUNT, 0xc5)
                (SPECIAL_N_BAKYUN_BULLET_LEVEL, 0xc6)
                (SPECIAL_N_BAKYUN_BULLET_SHOOT_COUNT, 0xc7)
                (SPECIAL_N_BAKYUN_BULLET_RECOVERY_COUNT, 0xc8)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe0)
                (TERM, 0xe4)
                (SPECIAL_N_LANDING, 0xe1)
                (SPECIAL_N_SHOOT_AIR_NEXT_COUNT_CHECK, 0xe2)
                (SPECIAL_N_SHOOT_AIR_NEXT_COUNT_CHECK_DONE, 0xe3)
            );
        }
        pub mod status {
            use super::*;
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0xd)
                    (CLATTER_FRAME, 0xe)
                );
            }
            pub mod throw_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (BURY, 0xf)
                    (BURY_SET_CLATTER, 0x10)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (ITEM_HOLD_KIND_BACKUP, 0x21)
                    (TERM, 0x23)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (UPPER_FRAME, 0xb)
                    (UPPER_RATE, 0xc)
                    (SPECIAL_S_LR, 0xd)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (BUTTON_ON_START_FRAME, 0x5)
                    (CANCEL_TYPE, 0x6)
                    (CANCEL_STICK_Y_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ENABLE_SHOOT, 0xc)
                    (GENERATE_BULLET, 0xd)
                    (PASS, 0xe)
                    (BUTTON_ON_CHECK, 0xf)
                    (START_PRECEDE_CHECK, 0x10)
                    (PRECEDE_TURN, 0x11)
                    (PRECEDE_END, 0x12)
                    (PRECEDE_SHOOT, 0x13)
                    (PRECEDE_SHOOT_TURN, 0x14)
                    (RESERVED_SHOOT_TURN, 0x15)
                    (JUMP_BUTTON, 0x16)
                    (JUMP_FLY_NEXT, 0x17)
                    (SHOOT_AIR_INHERIT, 0x18)
                    (VIA_FALL, 0x19)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOTION_RATE, 0x7)
                    (GROUND_DEGREE_CURRENT, 0x8)
                    (GROUND_DEGREE_PREV, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HIT_FIGHTER_COUNT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLIFF_CHECK, 0xc)
                    (SUPER_ARMOR, 0xd)
                    (SUPER_ARMOR_EQUIP, 0xe)
                    (LANDING_HEAVY, 0xf)
                    (FAIL, 0x10)
                    (HIT_FIGHTER, 0x11)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CHARGE_RATE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INVOKE_AIR, 0xc)
                    (RESET_CONTROL, 0xd)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (GENERATE, 0xc)
                    (GENERATE_DONE, 0xd)
                    (GENERATE_SUCCESS, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_X, 0x7)
                    (START_Y, 0x8)
                    (TARGET_MOTION_RATE, 0x9)
                    (FINAL_OWNER_SCALE, 0xa)
                    (FINAL_INIT_SCALE, 0xb)
                    (TERM, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BIGBIRD_OBJECT_ID_01, 0x5)
                    (BIGBIRD_OBJECT_ID_02, 0x6)
                    (START_SITUATION, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (FINAL_ZOOM_START, 0xe)
                    (CLEAR_ATTACK, 0xf)
                    (ABS_SET, 0x10)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (ATTACK_ABS_RESET, 0x13)
                    (READY_START_SLOW, 0x14)
                    (HIT, 0x15)
                );
            }
        }
    }
    pub mod dolly {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (CAT4_SPECIAL_COMMAND, 0xc9)
                (AIR_STICK_BACK_FRAME, 0xca)
                (LANDING_STIFFNESS_FRAME, 0xcb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe2)
                (TERM, 0xed)
                (SPECIAL_N_HOP_DONE, 0xe3)
                (ENABLE_SUPER_SPECIAL, 0xe4)
                (FINAL_HIT_CANCEL, 0xe5)
                (FINAL_STANDBY_ATTACK_STOP, 0xe6)
                (DISABLE_AIR_SPECIAL_S, 0xe7)
                (DISABLE_AIR_SPECIAL_LW, 0xe8)
                (DISABLE_INTERPOLATE_HAT, 0xe9)
                (ESCAPE_ATTACK, 0xea)
                (GENERATE_CAP, 0xeb)
                (PLAY_SUPERSPECIAL_OK_SE, 0xec)
            );
        }
        pub mod status {
            use super::*;
            pub mod escape {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x17)
                    (ATTACK, 0x18)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (HIT_CANCEL, 0x21)
                );
            }
            pub mod special_common {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (STRENGTH, 0x5)
                    (BUTTON_ON_TIMER, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xe)
                    (COMMAND, 0xc)
                    (DECIDE_STRENGTH, 0xd)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (GENERATE, 0xe)
                    (GENERATE_DONE, 0xf)
                    (TERM, 0x10)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_Y, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x7)
                    (MOTION_KIND_AIR, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_RAY_CHECK_RESULT, 0xe)
                    (AIR_ATTACK, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SPEED_MUL, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_SITUATION, 0x7)
                    (COUNTER, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (REVERSE_LR, 0xe)
                    (JUMP, 0xf)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x6)
                    (START_SITUATION, 0x7)
                    (START_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (JUMP, 0xe)
                    (LANDING_HEAVY, 0xf)
                    (HIT, 0x10)
                );
            }
            pub mod super_special {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0xa)
                    (MAP_COLL_OFFSET_X, 0x7)
                    (MAP_COLL_OFFSET_Y, 0x8)
                    (MAP_COLL_OFFSET_Z, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MAP_COLL_COUNT, 0x5)
                    (SCREEN_EFFECT_COUNT, 0x6)
                );
            }
            pub mod super_special2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TARGET_X, 0x7)
                    (TARGET_Y, 0x8)
                    (TARGET_Z, 0x9)
                    (ITEM_OFFSET_X, 0xa)
                    (ITEM_OFFSET_Y, 0xb)
                    (ITEM_OFFSET_Z, 0xc)
                    (THROW_MOTION_RATE, 0xd)
                    (HIT_OBJECT_DIST, 0xe)
                    (HIT_MOTION_FRAME, 0xf)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HIT_OBJECT_ID, 0x5)
                    (HIT_OBJECT_CATEGORY, 0x6)
                    (TARGET_OBJECT_ID, 0x7)
                    (TARGET_OBJECT_CATEGORY, 0x8)
                    (ITEM_JOINT_ID, 0x9)
                    (HIT_STOP_FRAME, 0xa)
                    (TARGET_HIT_GROUP, 0xb)
                    (TARGET_HIT_NO, 0xc)
                    (TARGET_SITUATION, 0xd)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xc)
                    (PICKUP, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (SCALE_BASE, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BURST_NUM, 0x7)
                    (BURST_OBJECT_ID, 0x8)
                    (ATTACK_FRAME, 0x9)
                    (OPPONENT_OBJECT_ID, 0xa)
                    (HIT_BURST_NO, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (ZOOM_START, 0xe)
                    (CLEAR_ATTACK, 0xf)
                    (ABS_SET, 0x10)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (ATTACK_ABS_FINAL3, 0x19)
                    (TERM, 0x1a)
                );
            }
            pub mod final__end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_CORRECT_ON, 0x13)
                    (GROUND_CORRECT_SET, 0x14)
                );
            }
            pub mod final__scene {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT_ABS, 0x15)
                );
            }
            pub mod final__scene03 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (PLAY_MOTION_OPPONENT, 0x16)
                    (SET_MOTION_RATE_OPPONENT, 0x17)
                );
            }
            pub mod final__scene05 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (DAMAGE_FLY_OPPONENT, 0x18)
                );
            }
        }
    }
    pub mod master {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_LW_EFFECT_GROUND_LINE_POS_RATIO, 0x4c)
                (SPECIAL_LW_ATTACH_PREV_POS_X, 0x4d)
                (SPECIAL_LW_ATTACH_PREV_POS_Y, 0x4e)
                (SPECIAL_LW_ATTACH_PREV_HIT_POS_X, 0x4f)
                (SPECIAL_LW_ATTACH_PREV_HIT_POS_Y, 0x50)
            );
            make_work_ids!(
                Int,
                Instance,
                (SWORD_AURA_EFFECT_HANDLE, 0xbd)
                (SPECIAL_LW_GROUND_EFFECT_HANDLE, 0xbe)
                (SPECIAL_LW_IMPACT_EFFECT_HANDLE, 0xbf)
                (SPECIAL_LW_EFFECT_COUNT, 0xc0)
                (SPECIAL_LW_TARGET_COLLISION_BUFFER_ID, 0xc1)
                (SPECIAL_HI_HIT_WALL, 0xc2)
                (SPECIAL_HI_HOP, 0xc3)
                (SPECIAL_HI_DATA_ADDRESS, 0xc4)
                (THROW_OBJECT_ID, 0xc5)
                (THROW_OBJECT_ID_FRAME, 0xc6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe7)
                (ATTACK_AIR_LW_CHANGE_SE, 0xe0)
                (SPECIAL_S_IS_FLICK, 0xe1)
                (SPECIAL_N_HOP_DONE, 0xe2)
                (SPECIAL_LW_EFFECT_LINE_LR, 0xe3)
                (SWORD_REQ_EFFECT_AURA, 0xe4)
                (SWORD_OFF_EFFECT_AURA, 0xe5)
                (SPECIAL_HI_AIR_LASSO_IMMIDIATE, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (HOP_SPEED_Y, 0x7)
                    (INHERIT_MOTION_FRAME, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CANCEL_TYPE, 0x5)
                    (HOLD_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CAN_SHOOT, 0xc)
                    (RELEASE_BUTTON, 0xd)
                    (HOP, 0xe)
                    (ENABLE_CONTROL_ENERGY, 0xf)
                    (CONTROL_ENERGY, 0x10)
                    (REVERT_FALL_SPEED, 0x11)
                    (NORMAL_FALL_SPEED, 0x12)
                    (ENABLE_TURN, 0x13)
                    (AFTER_TURN, 0x14)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (LANDING_FRAME, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPEED_UP_CHANGED, 0xc)
                    (SPEED_UP_REQUEST, 0xd)
                    (SPEED_DOWN_CHANGED, 0xe)
                    (SPEED_DOWN_REQUEST, 0xf)
                    (SPEED_F_CHANGED, 0x10)
                    (SPEED_F_REQUEST, 0x11)
                    (SPEED_CHANGE_ATK_END_CHANGED, 0x12)
                    (SPEED_CHANGE_ATK_END_REQUEST, 0x13)
                    (SPEED_CONTROL_CHANGED, 0x14)
                    (SPEED_CONTROL_REQUEST, 0x15)
                    (ENABLE_LANDING, 0x16)
                    (CHANGE_LANDING_MOTION_RATE, 0x17)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (WALL_SPEED_X, 0xa)
                    (WALL_SPEED_Y, 0xb)
                    (WALL_ANGLE, 0xc)
                    (MAP_COLL_OFFSET_X, 0xd)
                    (MAP_COLL_OFFSET_Y, 0xe)
                    (MAP_COLL_OFFSET_Z, 0xf)
                    (ATTACK_MUL, 0x10)
                    (TERM, 0x11)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x8)
                    (HIT_OBJECT_ID, 0x9)
                    (HIT_OBJECT_CATEGORY, 0xa)
                    (TARGET_OBJECT_ID, 0xb)
                    (TARGET_OBJECT_CATEGORY, 0xc)
                    (ITEM_JOINT_ID, 0xd)
                    (HIT_STOP_FRAME, 0xe)
                    (WALL_JUMP_STOP_FRAME, 0xf)
                    (DISABLE_LANDING_COUNT, 0x10)
                    (CHECK_UPSIDE_DOWN_FRAME, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (AIR_LASSO_FAIL, 0x12)
                    (HIT, 0x13)
                    (TURN_CHECK, 0x14)
                    (TURN_CHECK_END, 0x15)
                    (TOUCH, 0x16)
                    (TOUCH_DOWN, 0x17)
                    (HIT_WALL, 0x18)
                    (HIT_WALL_LOST, 0x19)
                    (SEARCH_HIT_FIGHTER, 0x1a)
                    (TARGET_AIR, 0x1b)
                    (TARGET_HI_DAMAGE, 0x1c)
                    (REQ_EFFECT, 0x1d)
                    (WALL_JUMP_FAIL, 0x1e)
                    (ENABLE_CATCH, 0x1f)
                    (HIT_LEAVE_STOP, 0x20)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (CURRENT_DEGREE_X, 0x7)
                    (CURRENT_GRAVITY_DEGREE_X, 0x8)
                    (SUSPEND_MOTION_FRAME, 0x9)
                    (SUSPEND_MOTION_RATE, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (VOICE_TYPE, 0x5)
                    (TURN_COUNTER, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TURN_CHECK, 0xc)
                    (GROUND_LOST, 0xd)
                    (REVERT_DEGREE_X, 0xe)
                    (CONTROL_ENERGY, 0xf)
                    (ENABLE_CONTROL_ENERGY, 0x10)
                    (PULL_AXE, 0x11)
                    (DONE_PULL_AXE, 0x12)
                    (REVERT_FALL_SPEED, 0x13)
                    (NORMAL_FALL_SPEED, 0x14)
                    (RESTARTED_MOTION_RATE, 0x15)
                    (START_SUPER_ARMOR, 0x16)
                    (CHECK_SUPER_ARMOR, 0x17)
                    (SET_SUPER_ARMOR, 0x18)
                    (END_SUPER_ARMOR, 0x19)
                    (PASS, 0x1a)
                    (INHERIT_LANDING_1, 0x1b)
                    (INHERIT_LANDING_2, 0x1c)
                    (FORBID_LANDING, 0x1d)
                    (FORBID_RESERVE_LANDING, 0x1e)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SCALE_BASE, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_CORRECT_SET, 0x13)
                    (GROUND_CORRECT_ON, 0x14)
                    (TO_SCENE01, 0x15)
                    (SCENE03_TARGET_MOTION_CHANGE, 0x16)
                    (HIT_ABS, 0x17)
                );
            }
        }
    }
    pub mod tantan {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_SHIFT_ANGLE_L, 0x4c)
                (ATTACK_SHIFT_ANGLE_R, 0x4d)
                (ATTACK_RESTART_FRAME, 0x4e)
                (ATTACK_HOLD_RATE_L, 0x4f)
                (ATTACK_HOLD_RATE_R, 0x50)
                (ATTACK_AIR_SPEED_X_MAX_MUL, 0x51)
                (ATTACK_MAP_COLL_OFFSET_X_L, 0x52)
                (ATTACK_MAP_COLL_OFFSET_X_R, 0x53)
                (CATCH_FRAME, 0x54)
                (CATCH_MOTION_RATE, 0x55)
                (CATCH_MAP_COLL_OFFSET_X_L, 0x56)
                (CATCH_MAP_COLL_OFFSET_X_R, 0x57)
            );
            make_work_ids!(
                Int,
                Instance,
                (STATUS_KIND_ATTACK_PREV, 0xbd)
                (ATTACK_MOTION_KIND, 0xbe)
                (ATTACK_MOTION_KIND_LEG, 0xbf)
                (ATTACK_MOTION_KIND_L, 0xc0)
                (ATTACK_MOTION_KIND_R, 0xc1)
                (ATTACK_2ND_PART_SET, 0xc2)
                (ATTACK_BOTH_RESTRICT_FRAME, 0xc3)
                (ATTACK_STRANS_OFF_FRAME, 0xc4)
                (ATTACK_HOLD_FRAME, 0xc5)
                (ATTACK_NEXT_STATUS, 0xc6)
                (ATTACK_MINI_JUMP_ATTACK_FRAME, 0xc7)
                (ATTACK_CANCEL_STATUS_KIND, 0xc8)
                (ATTACK_MAP_COLL_FRAME_L, 0xc9)
                (ATTACK_MAP_COLL_FRAME_R, 0xca)
                (ATTACK_FRAME, 0xcb)
                (ATTACK_SLOW_MAG, 0xcc)
                (ATTACK_SLOW_MAG_PREV, 0xcd)
                (ATTACK_SLOW_COUNT, 0xce)
                (ATTACK_SLOW_COUNT_PREV, 0xcf)
                (PUNCH_KIND_R, 0xd0)
                (SPECIAL_LW_MOTION_FRAME, 0xd1)
                (SPECIAL_LW_WAIT_FRAME, 0xd2)
                (SPECIAL_LW_DISABLE_PASS_COUNT, 0xd3)
                (SPIRAL_OBJECT_ID, 0xd4)
                (REFLECTOR_ATTACK_HI4_HITSTOP_FRAME, 0xd5)
                (REFLECTOR_ATTACK_HI4_HITSTOP_ID, 0xd6)
                (ARM_L_BIG_FRAME, 0xd7)
                (REINFORCE_L_EFFECT_HANDLE_L, 0xd8)
                (REINFORCE_L_EFFECT_HANDLE_R, 0xd9)
                (CATCH_START_COUNT, 0xda)
                (LUA_TEMP_MOTION_KIND_HOLD, 0xdb)
                (LUA_TEMP_MOTION_KIND_HOLD_LEG, 0xdc)
                (LUA_TEMP_MOTION_KIND_PULL, 0xdd)
                (LUA_TEMP_MOTION_KIND_OPPOSITE, 0xde)
                (LUA_TEMP_MOTION_KIND_OPPOSITE_LEG, 0xdf)
                (LUA_TEMP_MOTION_KIND_PULL_LEG, 0xe0)
                (LUA_TEMP_MOTION_KIND_OPPOSITE_PULL, 0xe1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0x115)
                (SITUATION_GROUND, 0xe0)
                (ATTACK_BACK_PUNCH_L, 0xe1)
                (ATTACK_BACK_PUNCH_R, 0xe2)
                (ATTACK_SHIFT_CONTROL_L, 0xe3)
                (ATTACK_SHIFT_CONTROL_R, 0xe4)
                (ATTACK_START_HOLD, 0xe5)
                (ATTACK_CHARGE, 0xe6)
                (ATTACK_BEHIND_L, 0xe7)
                (ATTACK_BEHIND_R, 0xe8)
                (ATTACK_SHORT_L, 0xe9)
                (ATTACK_SHORT_R, 0xea)
                (ATTACK_LONG_L, 0xeb)
                (ATTACK_LONG_R, 0xec)
                (ATTACK_REINFORCE_L, 0xed)
                (ATTACK_REINFORCE_R, 0xee)
                (ATTACK_AIR_HOP, 0xef)
                (ATTACK_COMBO_ENABLE, 0xf0)
                (ATTACK_CANCEL_ENABLE, 0xf1)
                (ATTACK_JUMP_MINI, 0xf2)
                (ATTACK_AIR_F, 0xf3)
                (ATTACK_DRAGON_BEAM_SHOOT, 0xf4)
                (ATTACK_REVERSE_LR, 0xf5)
                (ATTACK_CHECK_REVERSE_LR, 0xf6)
                (ATTACK_PUNCH_L, 0xf7)
                (ATTACK_IS_CANCEL, 0xf8)
                (ATTACK_COMBO_SPECIAL_BUTTON, 0xf9)
                (ATTACK_REWIND_L, 0xfa)
                (ATTACK_REWIND_R, 0xfb)
                (ATTACK_IGNORE_FLOOR_PASSABLE, 0xfc)
                (ATTACK_BLOCKED_PUNCH_L, 0xfd)
                (ATTACK_BLOCKED_PUNCH_R, 0xfe)
                (ATTACK_JUMP_MINI_SPECIAL, 0xff)
                (ATTACK_CLEAR_COMMAND_MOVE, 0x100)
                (CATCH_REVERSE_ROT, 0x101)
                (SPECIAL_HI_IS_L, 0x102)
                (SPECIAL_HI_AIR_HOP, 0x103)
                (SPECIAL_HI_AIR_LASSO_IMMIDIATE, 0x104)
                (SPECIAL_LW_CHANGE_PUNCH_R, 0x105)
                (DETACH_RING, 0x106)
                (ATTACH_RING, 0x107)
                (REFLECTOR_ATTACK_HI4, 0x108)
                (REFLECTOR_ATTACK_HI4_BREAK, 0x109)
                (DRAGONIZE_L, 0x10a)
                (LUA_TEMP_IS_ATTACK_BOTH, 0x10b)
                (LUA_TEMP_IS_ATTACK_BEHIND_L, 0x10c)
                (LUA_TEMP_IS_ATTACK_BEHIND_R, 0x10d)
                (LUA_TEMP_IS_ATTACK_LONG_L, 0x10e)
                (LUA_TEMP_IS_ATTACK_LONG_R, 0x10f)
                (LUA_TEMP_IS_END_L, 0x110)
                (LUA_TEMP_IS_END_R, 0x111)
                (LUA_TEMP_IS_BACK_PUNCH_L, 0x112)
                (LUA_TEMP_IS_BACK_PUNCH_R, 0x113)
                (LUA_TEMP_IS_BACK_BOTH, 0x114)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (GROUND_ANGLE_RAD, 0xa)
                    (GROUND_MOTION_ROT, 0xb)
                    (MAP_COLL_OFFSET_X, 0xc)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CAN_INPUT_GROUND_ANGLE, 0x12)
                    (GROUND_HIGH_JUMP, 0x13)
                    (AIR_LASSO_FAIL, 0x14)
                    (REVERSE_LR, 0x15)
                    (SHOOT_ARM, 0x16)
                    (REWIND, 0x17)
                    (TO_CONTROL_SPEED, 0x18)
                    (ENABLE_CONTROL_SPEED, 0x19)
                    (IS_SPECIAL_HI_AIR_PHYSICS, 0x1a)
                    (IS_BLOCKED, 0x1b)
                );
            }
            pub mod air_lasso_failure {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x13)
                    (HIT_STATUS_OFF, 0x14)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SCALE_BASE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PUNCH_KIND_R, 0x5)
                    (TARGET_MOTION_INDEX, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_CORRECT_SET, 0x13)
                    (GROUND_CORRECT_ON, 0x14)
                    (TO_SCENE01, 0x15)
                    (TARGET_CHANGE_MOTION, 0x16)
                    (ABS_HIT, 0xd)
                );
            }
            pub mod catch {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SPIRAL_MOTION_RATE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REACH_COUNT, 0x5)
                    (REACH_STOP_COUNT, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (START_REACH, 0xe)
                    (REWIND_L, 0xf)
                    (REWIND_R, 0x10)
                    (REWIND_BOTH, 0x11)
                );
            }
            pub mod catch_dash {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SPIRAL_MOTION_RATE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REACH_COUNT, 0x6)
                    (REACH_STOP_COUNT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (START_REACH, 0xf)
                );
            }
            pub mod catch_turn {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SPIRAL_MOTION_RATE, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (REACH_COUNT, 0x6)
                    (REACH_STOP_COUNT, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (START_REACH, 0xe)
                );
            }
        }
    }
    pub mod pickel {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HEAD_ANGLE, 0x4c)
                (HEAD_ANGLE_PREV_MOTION, 0x4d)
                (GENERATE_BLOCK_POS_X, 0x4e)
                (GENERATE_BLOCK_POS_Y, 0x4f)
                (ATTACK_DURABILITY, 0x50)
                (RED_STONE_TO_USED, 0x51)
            );
            make_work_ids!(
                Int,
                Instance,
                (MATERIAL_NUM_GRADE_1, 0xbd)
                (MATERIAL_NUM_WOOD, 0xbe)
                (MATERIAL_NUM_STONE, 0xbf)
                (MATERIAL_NUM_IRON, 0xc0)
                (MATERIAL_NUM_GOLD, 0xc1)
                (MATERIAL_NUM_RED_STONE, 0xc2)
                (MATERIAL_NUM_DIAMOND, 0xc3)
                (STATUS_KIND_ATTACK_PREV, 0xc4)
                (ATTACK_MINI_JUMP_ATTACK_FRAME, 0xc5)
                (ATTACK_CANCEL_STATUS_KIND, 0xc6)
                (ATTACK_FRAME, 0xc7)
                (ATTACK_AIR_LW_FORBID_FRAME, 0xc8)
                (SPECIAL_S_REPEAT_COUNT_ON_CATEGORY_SPECIAL, 0xc9)
                (SPECIAL_S_JUMP_COUNT_ON_AIR, 0xca)
                (SPECIAL_N2_TABLE_REPLASE_FRAME, 0xcb)
                (SPECIAL_N2_TABLE_OBJECT_ID, 0xcc)
                (TABLE_RECREATE_FRAME, 0xcd)
                (FINAL_MOVIE_HASH, 0xce)
                (HAVE_CRAFT_WEAPON_KIND, 0xcf)
                (HAVE_CRAFT_WEAPON_MATERIAL_KIND, 0xd0)
                (HAVE_CRAFT_WEAPON_COUNT, 0xd1)
                (REQUEST_HAVE_CRAFT_WEAPON_KIND, 0xd2)
                (CATCH_OBJECT_ID, 0xd3)
                (DISABLE_CRAFT_FRAME, 0xd4)
                (LANDING_HIGH_PLACE_FRAME, 0xd5)
                (JUMP_MINI_FRAME, 0xd6)
                (SITUATION_KIND, 0xd7)
                (JUMP_COUNT_BACKUP, 0xd8)
                (SPECIAL_N1_MINING_GRADE_1_TABLE_PROGRESS, 0xd9)
                (SPECIAL_N1_MINING_WOOD_TABLE_PROGRESS, 0xda)
                (SPECIAL_N1_MINING_STONE_TABLE_PROGRESS, 0xdb)
                (SPECIAL_N1_MINING_IRON_TABLE_PROGRESS, 0xdc)
                (SPECIAL_N1_MINING_NOT_NORMAL_STAGE_TABLE_PROGRESS, 0xdd)
                (FORBID_GENERATE_PICKELOBJECT_COUNT, 0xde)
                (FORBID_JUMP_AERIAL_COUNT, 0xdf)
                (MATERIAL_KIND_FOR_UI, 0xe0)
                (EXTEND_BUFFER, 0xe1)
                (MOVE_MOTION_COMP_END_FRAME, 0xe2)
                (MOVE_MOTION_COMP_FRAME, 0xe3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xf3)
                (ATTACK_JUMP_MINI, 0xe0)
                (ATTACK_HI3, 0xe1)
                (ATTACK_AIR_HI, 0xe2)
                (ATTACK_AIR_HI_ENABLE_LANDING, 0xe3)
                (BLEND_TURN, 0xe4)
                (REQUEST_REMOVE_HAVE_CRAFT_WEAPON, 0xe5)
                (IS_CONTEST_HOMERUN, 0xe6)
                (IS_HAVE_TOOL_SHOULDER_ROTATE, 0xe7)
                (SPECIAL_LW_SITUATION_AIR, 0xe8)
                (SPECIAL_HI_AFTER_USE, 0xe9)
                (SPECIAL_N1_MINING_GOT_RARE_GRADE_1_TABLE, 0xea)
                (SPECIAL_N1_MINING_GOT_RARE_WOOD_TABLE, 0xeb)
                (SPECIAL_N1_MINING_GOT_RARE_STONE_TABLE, 0xec)
                (SPECIAL_N1_MINING_GOT_RARE_IRON_TABLE, 0xed)
                (SPECIAL_N1_MINING_GOT_RARE_NOT_NORMAL_STAGE_TABLE, 0xee)
                (IS_STOCK_ZERO_AND_CANNOT_CREATE_TABLE, 0xef)
                (IS_SUPER_SUDDEN_DEATH, 0xf0)
                (FORGE_LANDING, 0xf1)
                (FORGE_DAMAGE_CHANGE_AIR, 0xf2)
            );
        }
        pub mod status {
            use super::*;
            pub mod landing {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x12)
                    (HIGH_PLACE, 0x13)
                    (TERM, 0x14)
                );
            }
            pub mod attack_air {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (HAVE_TOOL, 0xf)
                    (TERM, 0x10)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ATTACK_LW4_MELT_LR, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x10)
                    (ATTACK_AIR_LW_COUNT, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x23)
                    (START_, 0x20)
                    (FORGE_GENERATE_ENABLE, 0x21)
                    (IS_GENERATE_FORGE, 0x22)
                );
            }
            pub mod catch_pull {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (PULL_SPEED, 0x7)
                    (LINE_LENGTH, 0x8)
                    (LINE_LENGTH_START, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xc)
                    (INIT, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (FORGE_GENERATE_ENABLE, 0xf)
                    (IS_GENERATE_FORGE, 0x10)
                    (TERM, 0x11)
                );
            }
            pub mod catch {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (SHOOT, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod special_n1 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0xa)
                    (MINING_POS_X, 0xb)
                    (MINING_POS_Y, 0xc)
                    (MINING_POS_Z, 0xd)
                    (MINING_GROUND_LINE_POS_RATIO, 0xe)
                    (MINING_GROUND_ATTACH_PREV_POS_X, 0xf)
                    (MINING_GROUND_ATTACH_PREV_POS_Y, 0x10)
                    (MINING_BATTLE_OBJECT_HP, 0x11)
                    (MINING_DAMAGE_TO_BATTLE_OBJECT, 0x12)
                    (TERM, 0x13)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MINING_COUNT, 0x9)
                    (MINING_GROUND_MATERIAL_KIND, 0xa)
                    (MINING_END_FRAME, 0xb)
                    (MINING_COLLISION_LINE_ID, 0xc)
                    (MINING_COLLISION_LINE_CHECK_COUNT, 0xd)
                    (MINING_CRAFT_WEAPON_KIND, 0xe)
                    (MINING_CRAFT_WEAPON_MATERIAL_KIND, 0xf)
                    (MINING_BATTLE_OBJECT_ID, 0x10)
                    (MINING_COUNT_TO_GENERATE_PICKELOBJECT, 0x11)
                    (MINING_ICON_EFFECT_OFFSET, 0x12)
                    (MINING_ICON_EFFECT_FRAME, 0x13)
                    (MINING_AWAY_EFFECT_KIND, 0x14)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MINING, 0x17)
                    (MINING_IS_WALL, 0x18)
                    (MINING_GROUND_LINE_LR, 0x19)
                    (MINING_CONTINUAL, 0x1a)
                    (MINING_PICKELOBJECT, 0x1b)
                );
            }
            pub mod special_n2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CRAFT_FRAME, 0x5)
                    (CRAFT_FRAME_MAX, 0x6)
                    (CRAFT_STATUS, 0x7)
                    (CRAFT_MATERIAL_KIND_SWORD, 0x8)
                    (CRAFT_MATERIAL_KIND_AXE, 0x9)
                    (CRAFT_MATERIAL_KIND_PICK, 0xa)
                    (CRAFT_MATERIAL_KIND_SHOVEL, 0xb)
                    (CRAFT_STATUS_SWORD, 0xc)
                    (CRAFT_STATUS_AXE, 0xd)
                    (CRAFT_STATUS_PICK, 0xe)
                    (CRAFT_STATUS_SHOVEL, 0xf)
                    (CRAFT_GAUGE_EFFECT_HANDLE, 0x10)
                    (CRAFT_MATERIAL_EFFECT_HANDLE, 0x11)
                    (CRAFT_GAUGE_SUCCESS_EFFECT_HANDLE, 0x12)
                    (CRAFT_EFFECT_FRAME, 0x13)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_L, 0xc)
                );
            }
            pub mod special_n3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CONTINUAL_SPECIAL_N3_COUNT, 0x9)
                    (GENERATE_PICKELOBJECT_KIND, 0xa)
                    (GENERATE_PICKELOBJECT_FAILURE_COUNT, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CONTINUAL_SPECIAL_N3, 0x17)
                    (GENERATE_OBJECT, 0x18)
                    (GENERATE_OBJECT_FALL, 0x19)
                    (GENERATE_ENABLE, 0x1a)
                    (CHECK_REQ_MISS_EFFECT, 0x1b)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (RAIL_MATERIAL_FREE_COUNT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GENERATE_TROLLEY, 0xc)
                    (GENERATED_TROLLEY, 0xd)
                    (GENERATE_TROLLEY_TOP_N, 0xe)
                    (CHANGE_STATUS_FALL, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (LIFT, 0x8)
                    (ANGLE, 0x9)
                    (TURN_TIME, 0xa)
                    (TURN_ANGLE, 0xb)
                    (ROT_ADD_X, 0xc)
                    (ROT_SET_X, 0xd)
                    (TERM, 0xe)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FIREWORKS, 0xa)
                    (JUMP_COUNT, 0x9)
                    (REFLECT_FRAME, 0xb)
                    (DECEL_FRAME, 0xc)
                    (GLIDE_FRAME, 0xd)
                    (SE_HANDLE, 0xe)
                    (TURN_FRAME, 0xf)
                    (RUMBLE_FRAME, 0x10)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GLIDE_START, 0xe)
                    (CHANGE_LR, 0x10)
                    (ENABLE_CANCEL, 0x11)
                    (TURN, 0x12)
                    (TURN_REQUEST, 0x13)
                    (WAIT_START, 0x14)
                    (GROUND_START, 0x15)
                    (TURN_END, 0x16)
                    (ROT_FLAG, 0x17)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0xa)
                    (POS_X, 0xb)
                    (POS_Y, 0xc)
                    (ANGLE, 0xd)
                    (TERM, 0xe)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME_STONE, 0x5)
                    (GENERATED_ID, 0x6)
                    (NEXT_KIND, 0x7)
                    (PLATE_PARENT_ID, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GENERATE_BOMB, 0xe)
                    (GENERATE_PLATE, 0xf)
                    (GENERATE_STONE, 0x10)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (RHOMBUS_DEFAULT_FRONT, 0x7)
                    (RHOMBUS_DEFAULT_BACK, 0x8)
                    (RHOMBUS_DEFAULT_UP, 0x9)
                    (RHOMBUS_OFFSET_FRONT, 0xa)
                    (RHOMBUS_OFFSET_BACK, 0xb)
                    (RHOMBUS_OFFSET_UP, 0xc)
                    (MOVIE_RATE, 0xd)
                    (MOTION_CAMERA_RATE, 0xe)
                    (SCALE_BASE, 0xf)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TERM, 0x9)
                    (RHOMBUS_COUNT, 0x5)
                    (COUNT, 0x6)
                    (COLOR_CORRECTION_INDEX, 0x7)
                    (OPPONENT_OBJECT_ID, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ABS_HIT, 0xd)
                    (CHANGE_RHOMBUS, 0x13)
                    (END_FINAL, 0x14)
                    (END_FINAL_DONE, 0x15)
                    (TO_SCENE01, 0x16)
                    (SCENE01_SYNC, 0x17)
                    (GROUND_CORRECT_SET, 0x18)
                    (GROUND_CORRECT_ON, 0x19)
                    (ATTACK, 0x1a)
                    (CLEAR_COLOR, 0x1b)
                    (TARGET_CHANGE_MOTION_1, 0x1c)
                    (TARGET_CHANGE_MOTION_2, 0x1d)
                );
            }
        }
    }
    pub mod edge {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_S_POWER, 0x4c)
                (SPECIAL_S_POWER_UP_ATTACK, 0x4d)
                (SPECIAL_S_POWER_UP_ATTACK_ATTR, 0x4e)
                (ONE_WINGED_THRESHOLD_ACTIVATE_POINT, 0x4f)
                (ONE_WINGED_ACTIVATE_POINT, 0x50)
                (ONE_WINGED_THRESHOLD_DEACTIVATE_POINT, 0x51)
                (ONE_WINGED_DEACTIVATE_POINT, 0x52)
                (ONE_WINGED_DAMAGE_DIFF_MIN, 0x53)
                (ONE_WINGED_DAMAGE_DIFF_MAX, 0x54)
                (ONE_WINGED_HP_MAX, 0x55)
                (ONE_WINGED_ATTACK_POWER_MUL, 0x56)
            );
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_S_TARGET_ID, 0xbd)
                (SPECIAL_S_OBJECT_ID, 0xbe)
                (ONE_WINGED_JUMP_COUNT_MAX, 0xbf)
                (ONE_WINGED_INIT_STOCK_COUNT, 0xc0)
                (ONE_WINGED_TIME_LIMIT, 0xc1)
                (ATTACKAIR_F_WALL_COUNT, 0xc2)
                (ONE_WINGED_HAIR_STATE, 0xc3)
                (ONE_WINGED_MOTION_BLEND_FRAME, 0xc4)
                (ONE_WINGED_MOTION_BLEND_STATE, 0xc5)
                (ONE_WINGED_DEACTIVATE_WING_FRAME, 0xc6)
                (ONE_WINGED_WING_STATE, 0xc7)
                (ONE_WINGED_FLARE_EFFECT_FRAME, 0xc8)
                (ONE_WINGED_PROCESS, 0xc9)
                (FINAL_MOVIE_HASH, 0xca)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xef)
                (SITUATION_GROUND, 0xe0)
                (IS_RULE_HP, 0xe1)
                (ONE_WINGED_ACTIVATED, 0xe2)
                (ONE_WINGED_END_ACTIVATE, 0xe3)
                (ONE_WINGED_HAIR_OFF_REQ, 0xe4)
                (ONE_WINGED_HAIR_OFF_CHANGED, 0xe5)
                (ONE_WINGED_JUMP_PLUS, 0xe6)
                (ONE_WINGED_RESULT_ON, 0xe7)
                (ONE_WINGED_CANNOT_JUMP_PLUS, 0xe8)
                (ONE_WINGED_JUMP_PLUS_ON, 0xe9)
                (ONE_WINGED_FLARE_EFFECT_ON, 0xea)
                (ONE_WINGED_FLARE_EFFECT_FLICKER_ON, 0xeb)
                (ONE_WINGED_WING_OFF_REQ, 0xec)
                (PAUSE, 0xed)
                (SUDDEN_DEATH, 0xee)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack_air_f {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (GROUND_LINE_PREV_POS_X, 0x7)
                    (GROUND_LINE_PREV_POS_Y, 0x8)
                    (ATTACH_PREV_POS_X, 0x9)
                    (ATTACH_PREV_POS_Y, 0xa)
                    (ATTACH_PREV_HIT_POS_X, 0xb)
                    (ATTACH_PREV_HIT_POS_Y, 0xc)
                    (GROUND_LINE_POS_RATIO, 0xd)
                    (PIERCE_EFFECT_ROT, 0xe)
                    (TERM, 0xf)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_COLLISION_BUFFER_ID, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (PIERCE_GROUND_SUCCESS, 0xf)
                    (PRESS_GROUND, 0x10)
                    (PIERCE_GROUND, 0x11)
                    (PIERCE_GROUND_DONE, 0x12)
                    (LINE_LR, 0x13)
                    (ENABLE_ACTION_BUTTON_TRIGGER, 0x14)
                    (MOVE_KINETIC_PARAM, 0x15)
                    (CHANGE_JUMP_ACCEL_Y, 0x16)
                    (JUMP_CONTROL, 0x17)
                    (SET_PIERCE_EFFECT, 0x18)
                );
            }
            pub mod attack_lw4 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (IS_HIT_FLOOR, 0x21)
                    (TERM, 0x22)
                );
            }
            pub mod catch_pull {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x5)
                    (EFFECT_HANDLE, 0x6)
                );
            }
            pub mod catch_wait {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x8)
                    (EFFECT_HANDLE, 0x9)
                );
            }
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (REVERSE_LR, 0xf)
                    (TERM, 0x10)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (CHARGE_KIND, 0x5)
                    (CANCEL_STATUS, 0x6)
                    (SHOOT_MOTION, 0x7)
                    (SHOOT_AIR_MOTION, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (REQUEST_SHOOT, 0xc)
                    (ENABLE_FALL_SPEED, 0xd)
                    (ENABLE_FALL_SPEED_END_INIT, 0xe)
                    (CANCEL_SCREEN_EFFECT, 0xf)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HOLD_FRAME, 0x5)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (DECIDE_DIR_X, 0x7)
                    (DECIDE_DIR_Y, 0x8)
                    (DECIDE_ROT_DEGREE, 0x9)
                    (RUSH_DEGREE, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (DIRECTION_EFFECT_HANDLE, 0x5)
                    (STATUS_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHARGED_RUSH, 0xc)
                    (DIRECTION_EFFECT_VISIBLE, 0xd)
                    (IS_SHIELDED, 0xe)
                    (DECIDED_RUSH, 0xf)
                    (ENABLE_CONTROL, 0x10)
                    (USE_LANDING_SPEED_MUL, 0x11)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (SHIELD, 0x7)
                    (SHIELD_DAMAGE, 0x8)
                    (TERM, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHIELD_BREAK, 0xc)
                    (ENABLE_CONTROL_X, 0xd)
                    (ENABLE_CONTROL_X_END_INIT, 0xe)
                    (ENABLE_FALL_SPEED, 0xf)
                    (ENABLE_FALL_SPEED_END_INIT, 0x10)
                    (IS_HIT_SHIELD, 0x11)
                    (IS_HIT_SHIELD_ONCE, 0x12)
                    (IS_HIT_STOP_SPEED_CHANGE, 0x13)
                    (IS_HIT_DIRECT, 0x14)
                    (VOICE, 0x15)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (MOTION_CAMERA_RATE, 0x7)
                    (SCALE_BASE, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (END_FINAL, 0x13)
                    (END_FINAL_DONE, 0x14)
                    (TO_SCENE01, 0x15)
                    (SCENE01_SYNC, 0x16)
                    (GROUND_CORRECT_SET, 0x17)
                    (GROUND_CORRECT_ON, 0x18)
                    (CLEAR_COLOR, 0x19)
                    (ABS_HIT, 0xd)
                );
            }
        }
    }
    pub mod eflame {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ESWORD_INHERIT_OPEN_MOTION_KIND, 0xc0)
                (ESWORD_REPLACE_COUNT, 0xc1)
                (N_VOICE_KIND_NUM_PREV, 0xc2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe1)
                (TERM, 0xe5)
                (HAS_ESWORD, 0xe2)
                (SPECIAL_S_FLICK, 0xe3)
                (ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING, 0xe4)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (S4_GROUND_CHECK, 0x21)
                    (TERM, 0x22)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ATTACK_MUL, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ROTATE_NUM, 0x5)
                    (VOICE_KIND_NUM, 0x6)
                    (VOICE_PLAY_FRAME, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPEED_CHANGE_HOLD_END_CHANGED, 0xc)
                    (SPEED_CHANGE_HOLD_END_REQUEST, 0xd)
                    (SPEED_CHANGE_ATK_END_CHANGED, 0xe)
                    (SPEED_CHANGE_ATK_END_REQUEST, 0xf)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (ENABLE_GROUND, 0xc)
                    (START_CONTROL, 0xd)
                    (END_CONTROL, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x8)
                    (TERM, 0xc)
                    (MAP_COLL_OFFSET_X, 0x9)
                    (MAP_COLL_OFFSET_Y, 0xa)
                    (MAP_COLL_OFFSET_Z, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MAP_COLL_COUNT, 0x5)
                    (TARGET_ID_START, 0x6)
                    (TARGET_ID_END, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GENERATE_DIVER, 0x17)
                    (REQ_RUMBLE, 0x18)
                    (UPDATE_GROUND_COLLISION_SHAPE, 0x19)
                    (REVERT_GROUND_COLLISION_SHAPE, 0x1a)
                );
            }
        }
    }
    pub mod element {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ARTICLE_ID_DIVER, 0xbd)
                (SUCCEED_DIVER_ID, 0xbe)
                (TOTAL_CHANGE_FRAME, 0xbf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe2)
                (ENABLE_CHANGE, 0xe0)
                (GENERATE_CHANGER, 0xe1)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CHANGE, 0xc)
                    (TERM, 0xe)
                );
            }
            pub mod special_lw_is {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (RESULT, 0xd)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (RETURN_SWORD_OFFSET_X, 0x7)
                    (RETURN_SWORD_OFFSET_Y, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_CORRECT_ON, 0x13)
                    (TO_SCENE01, 0x14)
                    (DETACH_ESWORD, 0x15)
                    (RETURN_SWORD_ENABLE, 0x16)
                );
            }
        }
    }
    pub mod elight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (FORESIGHT_DIR_X, 0x4c)
                (FORESIGHT_DIR_Y, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (ESWORD_INHERIT_OPEN_MOTION_KIND, 0xc0)
                (N_VOICE_KIND_NUM_PREV, 0xc1)
                (FORESIGHT_FRAME, 0xc2)
                (FORESIGHT_STATE, 0xc3)
                (FORESIGHT_COUNT, 0xc4)
                (FORESIGHT_REUSE, 0xc5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe1)
                (TERM, 0xe7)
                (FORESIGHT_FAILURE, 0xe2)
                (FORESIGHT_SUCCESS, 0xe3)
                (FORESIGHT_DISABLE, 0xe4)
                (SPECIAL_N_LANDING, 0xe5)
                (ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING, 0xe6)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ATTACK_RATIO, 0x7)
                    (EFFECT1_POS_X_MIN, 0x8)
                    (EFFECT1_POS_X_MAX, 0x9)
                    (EFFECT1_X, 0xa)
                    (EFFECT2_POS_X_MIN, 0xb)
                    (EFFECT2_POS_X_MAX, 0xc)
                    (EFFECT2_X, 0xd)
                    (TERM, 0xe)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HOLD_FRAME, 0x5)
                    (EFFECT_ID, 0x6)
                    (VOICE_KIND_NUM, 0x7)
                    (VOICE_PLAY_FRAME, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT_CHECK1, 0xc)
                    (HIT_CHECK2, 0xd)
                    (ATTACK_SET, 0xe)
                    (ENABLE_CONTROL, 0xf)
                    (HIT_ATTACK, 0x10)
                    (HIT_ATTACK_INIT, 0x11)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BUNSHIN_NUM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_NEAR_CLIFF, 0xc)
                    (IS_CHECK_CLIFF, 0xd)
                    (IS_SET_HUD_OFF, 0xe)
                    (IS_TILT, 0xf)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (FRAME_FROM_START, 0x5)
                    (SPREADBULLET_COUNT, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (GROUND_START, 0xc)
                    (SPREADBULLET, 0xd)
                    (CHECK_DIVE, 0xe)
                    (ENABLE_CONTROL, 0xf)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x8)
                    (TERM, 0xc)
                    (TARGET_X_MIN, 0x9)
                    (TARGET_X_MAX, 0xa)
                    (TARGET_Y, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (METEOR_NUM, 0x5)
                    (METEOR_FRAME, 0x6)
                    (TARGET_ID_START, 0x7)
                    (TARGET_ID_END, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SET_TARGET_POS, 0x17)
                    (GENERATE_DIVER, 0x18)
                    (REQ_RUMBLE, 0x19)
                    (CAMERA_CLIP_IN, 0x1a)
                    (TRAINING_ZOOM, 0x1b)
                    (DEMON_DOJO_ZOOM, 0x1c)
                );
            }
        }
    }
    pub mod demon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (WING_START_FRAME, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (RAGE_SYSTEM_FRAME, 0xc9)
                (RAGE_SYSTEM_COUNT, 0xca)
                (ATTACK_STAND_TURN_FRAME_COMMAND_1, 0xcb)
                (ATTACK_STAND_TURN_FRAME_COMMAND_4, 0xcc)
                (ATTACK_STAND_TURN_FRAME_COMMAND_7, 0xcd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xe2)
                (TERM, 0xf6)
                (ENABLE_RAGE_SYSTEM, 0xe3)
                (ENABLE_RAGE_SYSTEM_DONE, 0xe4)
                (PLAY_RAGE_SYSTEM_OK, 0xe5)
                (BEFORE_END_RAGE_SYSTEM, 0xe6)
                (LOW_MODE, 0xe7)
                (ATTACK_RAGE_CAPTURE, 0xe8)
                (SPECIAL_LW_ATTACK_RAGE, 0xe9)
                (DISABLE_AIR_SPECIAL_S, 0xea)
                (DISABLE_AIR_SPECIAL_HI, 0xeb)
                (DISABLE_SPECIAL_N, 0xec)
                (ENABLE_THROW_MOTION_CAMERA, 0xed)
                (DISABLE_THROW_MOTION_CAMERA, 0xee)
                (ATTACK_AIR_KINETIC_AERIAL, 0xef)
                (CLOSE_WING, 0xf0)
                (DEVIL, 0xf1)
                (DEVIL_PREV, 0xf2)
                (TRANSFORM, 0xf3)
                (REFLECTOR_ATTACK_STAND1, 0xf4)
                (ATTACK_S3_STAND_5, 0xf5)
            );
        }
        pub mod status {
            use super::*;
            pub mod fall {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x8)
                    (INVALID_ATTACK_FRAME, 0x9)
                );
            }
            pub mod landing {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (RESET_COMMAND_3, 0x8)
                    (RESET_COMMAND_9, 0x9)
                    (TERM, 0xa)
                );
            }
            pub mod attack_s4 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x10)
                    (CRITICAL_HIT_NO, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0x21)
                );
            }
            pub mod attack_combo {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COMBO, 0x11)
                    (NEXT_STATUS, 0x12)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ENABLE_COMBO, 0x21)
                    (CHANGE_STATUS, 0x22)
                    (FLASH_PUNCH, 0x23)
                );
            }
            pub mod attack_step {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CANCEL_FRAME, 0x5)
                    (HOLD_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TWO_TO_TWO_L, 0xc)
                    (NEUTRAL, 0xd)
                    (HIT_SHIELD, 0xe)
                    (HIT_JUST_SHIELD, 0xf)
                    (HIT_WIND, 0x10)
                    (CANCEL, 0x11)
                    (RAGE_SYSTEM, 0x12)
                );
            }
            pub mod attack_stand_2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COMBO, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHECK_STEP, 0x21)
                    (INC_STEP, 0x22)
                );
            }
            pub mod attack_stand_3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COMBO, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHECK_STEP, 0x21)
                    (INC_STEP, 0x22)
                );
            }
            pub mod attack_stand_6 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (START_Y, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COMBO, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (KEEP_SITUATION_AIR, 0x21)
                    (KEEP_SITUATION_AIR_PREV, 0x22)
                    (JUMP, 0x23)
                    (LANDING, 0x24)
                    (IGNORE_CHANGE_FALL, 0x25)
                    (INC_STEP, 0x26)
                    (IS_RAY_CHECK_RESULT, 0x27)
                );
            }
            pub mod attack_squat_4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK, 0x21)
                    (EXTEND_SPECIAL_HI_COMMAND, 0x22)
                    (EXTEND_COMMAND_623ALONG, 0x23)
                    (EXTEND_COMMAND_623BLONG, 0x24)
                    (EXTEND_COMMAND_623STRICT, 0x25)
                    (EXTEND_COMMAND_623A, 0x26)
                    (EXTEND_COMMAND_623NB, 0x27)
                );
            }
            pub mod attack_hi_3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (COMBO, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHECK_STEP, 0x21)
                    (INC_STEP, 0x22)
                );
            }
            pub mod attack_lw_3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CANCEL_STATUS, 0x11)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHECK_STEP, 0x21)
                    (INC_STEP, 0x22)
                );
            }
            pub mod catch_command {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xd)
                    (CHANGE_THROW, 0xe)
                    (TERM, 0xf)
                );
            }
            pub mod throw_command {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (USE_OTHER_PARAM, 0xf)
                    (TERM, 0x10)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (AIR_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ENABLE_CONTROL_ENERGY, 0xf)
                    (FOLLOW_NODE, 0x10)
                    (FOLLOW_SCALING, 0x11)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (CHANGE_HIT, 0xc)
                    (DISABLED_CHANGE_HIT, 0xd)
                    (AIR_CONTROL, 0xe)
                    (TOUCHED_WALL, 0xf)
                    (LANDING, 0x10)
                    (TERM, 0x11)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (REVERSE_LR, 0xc)
                    (AIR, 0xd)
                    (TERM, 0xe)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x7)
                    (TERM, 0xc)
                    (MAP_COLL_OFFSET_X, 0x8)
                    (MAP_COLL_OFFSET_Y, 0x9)
                    (MAP_COLL_OFFSET_Z, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PARAM_ID_HASH, 0xe)
                    (CAPTURE_FRAME, 0xf)
                    (MOTION_KIND, 0x10)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HIT, 0xf)
                    (DEAD, 0x10)
                    (ENABLE_MOTION_CAMERA, 0x11)
                    (CAPTURE_CUT, 0x12)
                    (CHECK_DAMAGE, 0x13)
                );
            }
            pub mod attack_rage_drive {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0xa)
                    (TERM, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_HIT_STATUS, 0x11)
                    (TARGET_ID, 0x12)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SPECIAL_ZOOM, 0x14)
                    (SPECIAL_ZOOM_DONE, 0x15)
                );
            }
            pub mod attack_rage_drive_disable {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (EFFECT, 0x16)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TERM, 0x9)
                    (MOTION_CAMERA_RATE, 0x7)
                    (LR, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FINAL_FRAME, 0x5)
                    (ATTACK_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE_RHOMBUS, 0x13)
                    (END_FINAL, 0x14)
                    (END_FINAL_DONE, 0x15)
                    (GROUND_CORRECT_SET, 0x16)
                    (GROUND_CORRECT_ON, 0x17)
                    (HIT_RUMBLE, 0x18)
                    (DEMON_DOJO_ZOOM, 0x19)
                );
            }
        }
    }
    pub mod trail {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (LANDING_ATTACK_AIR_FRAME_N, 0x4c)
                (LANDING_ATTACK_AIR_FRAME_F, 0x4d)
            );
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_AIR_BUTTON_COUNT, 0xbd)
                (STATUS_KIND_ATTACK_PREV, 0xbe)
                (SPECIAL_N_MAGIC_KIND, 0xbf)
                (SPECIAL_N_SHIELD_HOLD_FRMAE, 0xc0)
                (SPECIAL_N_WINDOW_FRAME, 0xc1)
                (APPEAL_HI_KIND, 0xc2)
                (APPEAL_HI_INFO, 0xc3)
                (FINISH_OBJECT_ID, 0xc4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xdf)
                (TERM, 0xe6)
                (MAGIC_SELECT, 0xe0)
                (MAGIC_SELECT_FORBID, 0xe1)
                (MAGIC_SELECT_WINDOW, 0xe2)
                (SPECIAL_N1_HOP, 0xe3)
                (SPECIAL_N2_HOP, 0xe4)
                (SPECIAL_N3_HOP, 0xe5)
            );
        }
        pub mod status {
            use super::*;
            pub mod attack_s3 {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x20)
                    (CHECK_COMBO_BUTTON_ON, 0x21)
                );
            }
            pub mod attack_air_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (TERM, 0x15)
                    (CHECK_COMBO_BUTTON_ON, 0xf)
                    (CONNECT_COMBO, 0x10)
                    (ENABLE_COMBO, 0x11)
                    (ATTACK_COMBO, 0x12)
                    (HIT_SPEED_Y, 0x13)
                    (HIT_SPEED_X, 0x14)
                );
            }
            pub mod attack_air_f {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xe)
                    (TERM, 0x15)
                    (CHECK_COMBO_BUTTON_ON, 0xf)
                    (CONNECT_COMBO, 0x10)
                    (ENABLE_COMBO, 0x11)
                    (ATTACK_COMBO, 0x12)
                    (HIT_SPEED_Y, 0x13)
                    (HIT_SPEED_X, 0x14)
                );
            }
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0xb)
                    (TERM, 0xc)
                );
            }
            pub mod special_n1 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (SHOOT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE_MAGIC, 0xc)
                    (CAN_INPUT, 0xd)
                    (NEXT_SHOOT, 0xe)
                    (SHOOTED, 0xf)
                );
            }
            pub mod special_n2 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ANGLE, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE_MAGIC, 0xc)
                    (LAST_SHOOT, 0xd)
                    (SHOOTED, 0xe)
                );
            }
            pub mod special_n3 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (BASE_POS_X, 0x7)
                    (BASE_POS_Y, 0x8)
                    (BASE_SCALE, 0x9)
                    (BASE_LR, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (THUNDER_NUM, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE_MAGIC, 0xc)
                    (SITUATION_AIR, 0xd)
                    (SHOOTED, 0xe)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (TARGET_ANGLE, 0x7)
                    (BACK_ANGLE, 0x8)
                    (TARGET_DIST, 0x9)
                    (SEARCH_LR, 0xa)
                    (GUIDE_EFFECT_ANGLE_ATTACK, 0xb)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_COUNT, 0x5)
                    (SEARCH_FRAME, 0x6)
                    (SEARCH_TARGET_ID, 0x7)
                    (SEARCH_GUIDE_EFFECT_HANDLE, 0x8)
                    (HIT_NUM, 0x9)
                    (TOUCH_GROUND_FRAME, 0xa)
                    (LOCKONCURSOR_FRAME, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TOUCH_GROUND, 0xc)
                    (SEARCH_BUTTON, 0xd)
                    (SEARCH_STICK, 0xe)
                    (TO_SEARCH, 0xf)
                    (TO_SEARCH_PREV, 0x10)
                    (CLIFF_STOP, 0x11)
                    (ATTACK_BUTTON, 0x12)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (COMMAND_LR, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (JUMP_START, 0xc)
                    (JUMP, 0xd)
                    (FALL, 0xe)
                    (RESET_SPEED_MAX_X, 0xf)
                    (COMMAND_ACCEPT, 0x10)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (ATTACK_POWER, 0x7)
                    (SHIELD_LR, 0x8)
                    (LIMIT_SPEED_Y, 0x9)
                    (TERM, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_ID, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (SHIELD, 0xc)
                    (SHIELD_CHK, 0xd)
                    (SHIELD_HIT, 0xe)
                    (SHIELD_RES, 0xf)
                    (DIRECT, 0x10)
                    (IS_ATTACK_ENEMY, 0x11)
                    (HIT_STOP, 0x12)
                    (ATTACK_HIT, 0x13)
                    (ATTACK_END, 0x14)
                    (SPECIAL_EFFECT, 0x15)
                    (ATTACK_CHK, 0x16)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x6)
                    (START_X, 0x7)
                    (START_Y, 0x8)
                    (HOLE_PX, 0x9)
                    (HOLE_PY, 0xa)
                    (HOLE_PZ, 0xb)
                    (FINAL_OWNER_SCALE, 0xc)
                    (FINAL_INIT_SCALE, 0xd)
                    (TERM, 0xe)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_SITUATION, 0x5)
                    (BOX_OBJECT_ID, 0x6)
                    (STEP, 0x7)
                    (FINAL_COUNT, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEAR_SLOW, 0xc)
                    (ABS_HIT, 0xd)
                    (FINAL_ZOOM_START, 0xe)
                    (CLEAR_ATTACK, 0xf)
                    (ABS_SET, 0x10)
                    (END_EXIT, 0x11)
                    (END_EXIT_FINISH, 0x12)
                    (ATTACK_ABS_RESET, 0x13)
                    (READY_START_SLOW, 0x14)
                    (HIT, 0x15)
                    (HOLE_ATTACK_END, 0x16)
                    (GROUND_CORRECT_SET, 0x17)
                    (GROUND_CORRECT_ON, 0x18)
                );
            }
        }
    }
    pub mod status {
        use super::*;
        pub mod item_throw {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LR, 0x7)
                (KILLER_ANGLE, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (MOTION_KIND_OPPOSITE, 0x6)
                (MOTION_KIND_TMP, 0x7)
                (FRAME, 0x8)
                (SITUATION, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0x12)
                (CONTINUE, 0xc)
                (SMASH_SE, 0xd)
                (LOOP_FIRST, 0xe)
                (KILLER, 0xf)
                (FROM_TURN_RUN, 0x10)
            );
        }
        pub mod item_swing {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SMASH_RESTART_FRAME, 0x7)
                (CLUB_REPRODUCTION_SPEED, 0x8)
                (BAT_REFLECT_MOTION_FRAME, 0x8)
                (BAT_REFLECT_MOTION_RATE, 0x9)
                (DEATHSCYTHE_DAMAGE, 0x8)
                (DEATHSCYTHE_MAX_DAMAGE_SUB, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (STEP, 0x6)
                (S4_HOLD_FRAME, 0x7)
                (SMASH_LOOP_FRAME, 0x8)
                (SMASH_LOOP_BASE_FRAME, 0x9)
                (SMASH_LOOP_TOTAL_FRAME, 0xa)
                (SMASH_HOLD_KEEP_FRAME, 0xb)
                (FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0x15)
                (RESERVED_START, 0x13)
                (HOLD, 0xc)
                (S4_CONTINE, 0xd)
                (RELEASE_BUTTON, 0xe)
                (TRIGGER_BUTTON, 0xf)
                (CHECK_MTRANS, 0x10)
                (START_SMASH_HOLD, 0x11)
                (SMASH_SMASH_HOLD_TO_ATTACK, 0x12)
                (FIREBAR_SWING_ACTION_BEGIN, 0x13)
                (FIREBAR_UPDATED_ATTACK, 0x14)
                (BAT_REFLECT_SKIP_MOTION, 0x13)
                (HOMERUNCONTEST, 0x14)
                (DEATHSCYTHE_SMASH, 0x13)
            );
        }
        pub mod item_lift {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (STICK_RATE, 0x7)
                (SPEED, 0x8)
                (SPEED_MAX_RATIO, 0x9)
                (SCALE, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (STOP, 0xc)
                (MOTION_FLIP, 0xd)
                (TERM, 0xe)
            );
        }
        pub mod item_assist_hoist {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (BORN_ITEM, 0xc)
                (TERM, 0xe)
            );
        }
        pub mod air_lasso {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MAP_COLL_OFFSET_X, 0x7)
                (MAP_COLL_OFFSET_Y, 0x8)
                (MAP_COLL_OFFSET_Z, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x8)
                (ARTICLE_ID, 0x5)
                (ARTICLE2_ID, 0x6)
                (FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (NOT_ARM, 0xc)
                (CHECK, 0xd)
                (IS_CHECK, 0xe)
                (LANDING, 0xf)
                (MAP_COLL_OFFSET, 0x10)
                (HANG_IMMIDIATE, 0x11)
            );
        }
        pub mod air_lasso_reach {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MAP_COLL_OFFSET_X, 0x7)
                (MAP_COLL_OFFSET_Y, 0x8)
                (MAP_COLL_OFFSET_Z, 0x9)
                (CLIFF_POS_X, 0xa)
                (CLIFF_POS_Y, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0xa)
                (ARTICLE_ID, 0x5)
                (ARTICLE2_ID, 0x6)
                (FRAME, 0x7)
                (ARTICLE_STATUS, 0x8)
                (MOTION_KIND_FAILURE, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (TOUCH, 0x12)
                (RAY_CHECK, 0x13)
            );
        }
        pub mod air_lasso_hang {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CLIFF_POS_X, 0xa)
                (CLIFF_POS_Y, 0xb)
                (BODY_ANGLE, 0xc)
                (UP_Z, 0xd)
                (SPEED_X, 0xe)
                (SPEED_Y, 0xf)
                (BODY_OFFSET, 0x10)
                (ROT_X_PREV, 0x11)
                (HIP_X_PREV, 0x12)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (ARTICLE_ID, 0x5)
                (ARTICLE2_ID, 0x6)
                (FRAME, 0x7)
                (ARTICLE_TIP_NODE_ID, 0x8)
                (BODY_FLIP, 0x9)
                (BODY_ANGLE_INTP, 0xa)
                (BODY_ANGLE_INTP_MAX, 0xb)
                (CHECK_CLIFF_JOINT_ID, 0xc)
                (TERM, 0xd)
            );
            make_work_ids!(
                Flag,
                Status,
                (NOT_ARM, 0xc)
                (TOUCH, 0x12)
                (ACTIVE_LOOK_AT, 0x13)
                (ACTIVE_LOOK_AT_L, 0x14)
                (BRAKE, 0x15)
                (FALL_ENABLE, 0x16)
                (EXTEND_ARM, 0x17)
                (LANDING, 0x18)
                (CATCH_SAME_CLIFF, 0x19)
            );
        }
        pub mod air_lasso_rewind {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (JUMP_SPEED_Y_MUL, 0x7)
                (BODY_ANGLE, 0xc)
                (UP_Z, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (ARTICLE_ID, 0x5)
                (ARTICLE2_ID, 0x6)
                (ARTICLE_TIP_NODE_ID, 0x8)
                (BODY_FLIP, 0x9)
                (BODY_ANGLE_INTP, 0xa)
                (BODY_ANGLE_INTP_MAX, 0xb)
                (FRAME, 0xc)
                (MOTION_START_FRAME, 0xd)
                (TERM, 0xe)
            );
            make_work_ids!(
                Flag,
                Status,
                (NOT_ARM, 0xc)
                (TOUCH, 0x12)
                (ACTIVE_LOOK_AT, 0x13)
                (BRAKE, 0x15)
                (TURN_LSHOULDER, 0x16)
            );
        }
        pub mod air_lasso_failure {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (ARTICLE_ID, 0x5)
                (ARTICLE2_ID, 0x6)
                (MOTION_KIND, 0x9)
                (REWIND_START_FRAME, 0xa)
                (WAIT_FRAME, 0xb)
                (TERM, 0xc)
            );
            make_work_ids!(
                Flag,
                Status,
                (CHANGE_MOTION, 0x12)
                (REWIND, 0x13)
            );
        }
        pub mod air_lasso_landing {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x9)
                (TERM, 0xa)
            );
        }
        pub mod appeal {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
            );
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x7)
                (MOTION_KIND_R, 0x5)
                (MOTION_KIND_L, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (TO_SMASH_APPEAL, 0xc)
            );
        }
        pub mod attack_air {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xf)
                (ENABLE_LANDING, 0xc)
                (LANDING_CLEAR_SPEED, 0xd)
                (KEEP_AIR, 0xe)
            );
        }
        pub mod attack_dash {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (CATCH_FRAME, 0x5)
                (FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xe)
                (ATTACK_HI4_DISABLE, 0xc)
            );
        }
        pub mod attack {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SMASH_RESTART_FRAME, 0x7)
                (SMASH_PREV_LR, 0x8)
                (SMASH_TARGET_LR, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (COUNT_100, 0x6)
                (CONTINUE_COUNT_100, 0x7)
                (SMASH_LOOP_FRAME, 0x8)
                (SMASH_HOLD_KEEP_FRAME, 0x9)
                (HIT_NEAR_COUNT_100, 0xa)
                (STEP_100, 0xb)
                (SMASH_LOOP_BASE_FRAME, 0xc)
                (SMASH_LOOP_TOTAL_FRAME, 0xd)
                (HIT_NEAR_COUNT_CLIFF_STOP_100, 0xe)
                (ATTACK11_MOTION, 0xf)
                (FRAME, 0x10)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0x22)
                (HOLD, 0xc)
                (ENABLE_COMBO, 0xd)
                (ENABLE_NO_HIT_COMBO, 0xe)
                (ENABLE_COMBO_INPUT, 0xf)
                (ENABLE_COMBO_PRECEDE, 0x10)
                (ENABLE_100, 0x11)
                (CONNECT_COMBO, 0x12)
                (ENABLE_RESTART, 0x13)
                (REVERSE_LR, 0x14)
                (CONTINUE_100, 0x15)
                (CONTINUE_CHECK_100, 0x16)
                (CONTINUE_INPUT_100, 0x17)
                (LOOPED_100, 0x18)
                (RELEASE_BUTTON, 0x19)
                (RESTART, 0x1a)
                (START_SMASH_HOLD, 0x1b)
                (SMASH_SMASH_HOLD_TO_ATTACK, 0x1c)
                (RESTART_COMBO, 0x1d)
                (RESTART_ATTACK, 0x1e)
                (ENABLE_NO_HIT_COMBO_TRIGGER, 0x1f)
                (CHECK_COMBO_NUM_100, 0x20)
            );
        }
        pub mod attach_wall {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x6)
                (TERM, 0x9)
                (FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (MOT_STOP, 0xc)
                (STICK_Y_NEUTRAL, 0xd)
            );
        }
        pub mod bury {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SPEED_Y, 0x7)
                (OFFSET_Y, 0x8)
                (JUMP_FRAME, 0x9)
                (START_CLATTER_TIME, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
                (MERIKOMI_EFFECT_HANDLE, 0x6)
                (SMOKE_EFFECT_FRAME, 0x7)
                (SMOKE2_EFFECT_FRAME, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (INVALID_NO_REACTION, 0xc)
                (RECOVERY, 0xd)
                (FEW_REMAINING_CLATTER_TIME_EFFECT, 0xe)
                (SWING_BINDPOSE_SKIRT, 0xf)
                (TERM, 0x10)
            );
        }
        pub mod capture_blackhole {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0xc)
                (SCALE_BACKUP, 0x7)
                (CATCH_POS_X, 0x8)
                (CATCH_POS_Y, 0x9)
                (CATCH_POS_Z, 0xa)
                (INHALE_SPEED, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (PARAM_SCALING_FRAME, 0x5)
                (FRAME_COUNT, 0x6)
                (END_INVINCIBLE_FRAME, 0x7)
                (CATCH_NODE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (END, 0xc)
            );
        }
        pub mod capture_item {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0xa)
                (CAPTURE_JUMP_SPEED_X, 0x7)
                (CAPTURE_JUMP_SPEED_Y, 0x8)
                (CAPTURE_SCALE_BACKUP, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (CAPTURE_NODE_BACKUP, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (CLATTER, 0xc)
            );
        }
        pub mod capture_mimikkyu {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (CLATTER_END, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod capture_bossgalaga {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (CAPTURE_NODE_BACKUP, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (REQUEST_START_CLATTER, 0xc)
                (STARTED_CLATTER, 0xd)
            );
        }
        pub mod capture_beitcrane {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (CAPTURE_NODE_BACKUP, 0x5)
            );
        }
        pub mod capture_pulled {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0xa)
                (MOTION_KIND_GROUND, 0x5)
                (MOTION_KIND_OFFSET, 0x6)
                (MOTION_KIND_OFFSET_LW, 0x7)
                (JUMP_BUTTON_COUNT, 0x8)
                (SITUATION, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (FIRST, 0xc)
                (JUMP, 0xd)
                (STOP_PULL, 0xe)
                (ADJUST_BUTTERFLYNET, 0xf)
                (AIR, 0x10)
                (GET_MOTION_KIND_RESULT, 0x11)
                (MOTION_END_FLAG, 0x12)
            );
        }
        pub mod capture_wait {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (MOTION_KIND_GROUND, 0x5)
                (MOTION_KIND_OFFSET, 0x6)
                (MOTION_KIND_OFFSET_LW, 0x7)
                (JUMP_BUTTON_COUNT, 0x8)
                (SITUATION, 0x9)
                (TERM, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (FIRST, 0xc)
                (JUMP, 0xd)
                (STOP_PULL, 0xe)
                (ADJUST_BUTTERFLYNET, 0xf)
                (AIR, 0x10)
            );
        }
        pub mod capture_damage {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (MOTION_KIND_GROUND, 0x5)
                (MOTION_KIND_OFFSET, 0x6)
                (MOTION_KIND_OFFSET_LW, 0x7)
                (JUMP_BUTTON_COUNT, 0x8)
                (SITUATION, 0x9)
                (TERM, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (FIRST, 0xc)
                (JUMP, 0xd)
                (STOP_PULL, 0xe)
                (ADJUST_BUTTERFLYNET, 0xf)
                (AIR, 0x10)
            );
        }
        pub mod capture_cut {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (SITUATION, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod capture_jump {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (NO_ATTACK_FRAME, 0x5)
            );
        }
        pub mod capture_masterhand {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (ENABLE_CLATTER, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod capture_mastercore {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x5)
            );
        }
        pub mod capture_nabbit {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (INVINCIBLE_FRAME, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod catched_ridley {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (INIT_OFFSET_X, 0x7)
                (INIT_OFFSET_Y, 0x8)
                (INIT_OFFSET_Z, 0x9)
                (CAPTURE_CUT_SPEED_X, 0xa)
                (SPEED_X, 0xb)
                (TERM, 0xc)
            );
            make_work_ids!(
                Int,
                Status,
                (OFFSET_COUNT, 0x5)
            );
        }
        pub mod catch {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (CATCH_WAIT, 0xc)
                (REVERSE_LR, 0xd)
                (CATCH_TERM, 0xe)
            );
        }
        pub mod catch_dash {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (CATCH_TURN_FRAME, 0x5)
            );
        }
        pub mod catch_wait {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (MOTION_KIND, 0x5)
                (LAST_STRANS, 0x6)
                (IK_LEFT_JOINT_ID, 0x7)
                (IK_RIGHT_JOINT_ID, 0x8)
                (TERM, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (ENEMY, 0xc)
            );
        }
        pub mod catch_attack {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (MOTION_KIND, 0x5)
            );
        }
        pub mod catch_turn {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MOTION_FRAME, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod catch_pull {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x6)
                (MOTION_KIND, 0x5)
                (CATCH_TERM, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (UNNECESSARY_CLEAR_TRANS, 0xc)
            );
        }
        pub mod catch_cut {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (SITUATION, 0x5)
            );
        }
        pub mod cliff_catch_move {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xc)
                (AIR_LASSO_CATCH, 0x19)
                (TERM, 0x1a)
            );
        }
        pub mod cliff_catch {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod cliff {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x9)
                (HIT_NORMAL_FRAME, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (CATCH_REST_TIME, 0x5)
                (WAIT_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (TO_CLIMB, 0xc)
                (TO_FALL, 0xd)
                (TO_DAMAGE_FALL, 0xe)
                (NEUTRAL, 0xf)
                (TO_JUMP, 0x10)
                (TO_GROUND, 0x11)
                (TO_ROB, 0x12)
                (TO_RELEASE, 0x13)
                (END, 0x14)
            );
        }
        pub mod cliff_jump {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x5)
                (TERM, 0x6)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
            );
        }
        pub mod clung_diddy {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (CLATTER_FRAME_GROUND, 0x7)
                (CLATTER_FRAME_AIR, 0x8)
                (TERM, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (THROWN_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (USE_DX_MOTION, 0xc)
                (CAPTURE_CUT_JUMP, 0xd)
                (CLUNG_THROWN_ATTACK_DIDDY, 0xe)
            );
        }
        pub mod damage {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (METEOR_FRAME, 0x7)
                (FLY_DIST, 0x8)
                (START_FALL_Y, 0x9)
                (DAMAGE_REFLECT_MOTION_RATE, 0xa)
                (DAMAGE_MOTION_RATE, 0xb)
                (ROT_ANGLE, 0xc)
                (FLY_ROLL_ANGLE_RETURN_FRAME, 0xd)
                (CORRECT_DAMAGE_VECTOR_ANGLE, 0xe)
                (REACTION_FRAME, 0xf)
                (VECOR_CORRECT_STICK_X, 0x10)
                (VECOR_CORRECT_STICK_Y, 0x11)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x16)
                (EFFECT_ID, 0x5)
                (HIT_STOP_FRAME, 0x6)
                (FRAME, 0x7)
                (FLY_SE_KIND, 0x8)
                (ATTACK_DISABLE_FRAME, 0x9)
                (ESCAPE_DISABLE_FRAME, 0xa)
                (AURA_EFFECT_ID, 0xb)
                (AURA_FRAME, 0xc)
                (ATTACKER_COLOR, 0xd)
                (DAMAGE_REFLECT_STOP_FRAME, 0xe)
                (MOTION_KIND, 0xf)
                (FIX_GRAVITY_ACCEL_FRAME, 0x10)
                (DAMAGE_MOTION_KIND, 0x11)
                (STOP_RELEASE_ACTION, 0x12)
                (WALL_DAMAGE_REFLECT_MOTION_STOP_FRAME, 0x13)
                (CORRECT_DAMAGE_VECTOR_EFFECT_ID, 0x14)
            );
            make_work_ids!(
                Flag,
                Status,
                (REACTION_CANCEL, 0xc)
                (END_REACTION, 0xd)
                (DEAD_EFFECT, 0xe)
                (ELEC, 0xf)
                (ENABLE_KINE_GRAVITY, 0x10)
                (ENABLE_DOWN, 0x11)
                (ADJUST_VECTOR, 0x12)
                (FALLING, 0x13)
                (DAMAGE_REFLECT_STOP, 0x14)
                (FLY_ROLL_SET_ANGLE, 0x15)
                (FLY_DISABLE_PASSIVE, 0x16)
                (GROUND, 0x17)
                (PREVIOUS_DOWN, 0x18)
                (NO_DROP_ITEM, 0x19)
                (FLY_ROLL_ANGLE_RETURN, 0x1a)
                (NO_SMOKE, 0x1b)
            );
        }
        pub mod damage_disable_cloud {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (THROUGH, 0x1c)
            );
        }
        pub mod damage_fly_reflect {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x11)
                (TERM, 0x14)
                (REFLECT_CHK_FRAME, 0x12)
            );
            make_work_ids!(
                Int,
                Status,
                (BUTTON_ON_FRAME, 0x15)
            );
        }
        pub mod damage_fall {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (MOT_RATE_COUNTER, 0x7)
                (PREV_MOT_RATE, 0x8)
                (TERM, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (NO_TRANSITION_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (PREV_NO_COMP, 0xc)
                (TRANSITION, 0xd)
                (REVERSE_MOTION, 0xe)
                (DISABLE_MOTION_RATE_TRANS, 0xf)
            );
        }
        pub mod dash {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (COUNT, 0x5)
                (TURN_DASH_FRAME, 0x6)
                (RETRY_TURN_DASH_FRAME, 0x7)
                (ENABLE_ATTACK_FRAME, 0x8)
                (DASH_TO_RUN_FRAME, 0x9)
                (INVALID_ATTACK_ESCAPE_FRAME, 0xa)
                (TURN_DASH_FROM_DASH_COUNT, 0xb)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0x16)
                (NO_S4, 0xc)
                (NO_ESCAPE, 0xd)
                (NO_ATTACK, 0xe)
                (NO_SLIP, 0xf)
                (ENABLE_RUN, 0x10)
                (INPUT_ATTACK, 0x11)
                (INPUT_SPECIAL_S, 0x12)
                (TURN_DASH, 0x13)
                (TURN_DASH_ON, 0x14)
            );
        }
        pub mod dead {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x18)
                (SPEED_X, 0x7)
                (SPEED_Y, 0x8)
                (SPEED_Z, 0x9)
                (ROT_X, 0xa)
                (OFFSET_X, 0xb)
                (OFFSET_Y, 0xc)
                (OFFSET_Z, 0xd)
                (ROT_X_OFFSET, 0xe)
                (ROT_Z_RANDOM_OFFSET, 0xf)
                (FIRST_DISTANCE, 0x10)
                (POS_Y, 0x11)
                (SCALE_BACKUP, 0x12)
                (RADIUS, 0x13)
                (SPEED_DEG, 0x14)
                (LAST_FOLLOW_POS_X, 0x15)
                (LAST_FOLLOW_POS_Y, 0x16)
                (LAST_FOLLOW_POS_Z, 0x17)
            );
            make_work_ids!(
                Int,
                Status,
                (DEAD_UP_STEP, 0x5)
                (FRAME, 0x6)
                (MOVE_FRAME, 0x7)
                (ICE_EFFECT, 0x8)
                (PHASE, 0x9)
                (PREV_CAMERA_TYPE, 0xa)
                (OFFSET_X_FIRST_RAND, 0xb)
                (ROT_Z_FIRST_RAND, 0xc)
                (FIRST_DISTANCE_GROUP, 0xd)
            );
            make_work_ids!(
                Flag,
                Status,
                (END_ACTION, 0xc)
                (CAMERA_FOLLOW, 0xd)
                (CRACK_EFFECT, 0xe)
                (CAMERA_FOLLOW_EXEC, 0xf)
            );
        }
        pub mod boss_dead {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (SITUATION_KIND_PREVIOUS, 0xe)
            );
            make_work_ids!(
                Flag,
                Status,
                (CHANGED_MOTION, 0x10)
                (KEYOFF_BGM, 0x11)
                (BOSS_STOP_SE, 0x12)
                (FINISH, 0x13)
            );
        }
        pub mod down {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (RAGDOLL_FRAME, 0x12)
                (DOWN_FRAME, 0x13)
                (POS_X, 0x14)
                (POS_Y, 0x15)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x14)
                (TERM, 0x19)
                (MOTION_KIND, 0x15)
                (NO_ACTION_FRAME, 0x16)
                (TERMINATE_XLU_COUNT, 0x17)
            );
            make_work_ids!(
                Flag,
                Status,
                (UP, 0x1d)
                (DAMAGE_3, 0x1e)
                (NO_DOWN_DAMAGE, 0x1f)
                (SET_POS, 0x20)
                (GROUND, 0x21)
                (PREV_STATUS_DOWN_EAT, 0x22)
                (WHOLE_HIT_XLU_END, 0x23)
            );
        }
        pub mod down_damage {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x17)
                (TERM, 0x19)
            );
            make_work_ids!(
                Flag,
                Status,
                (START_AIR, 0x24)
                (SITUATION_CHANGE, 0x25)
            );
        }
        pub mod furafura_stand {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x17)
                (TERM, 0x19)
                (TERMINATE_XLU_COUNT, 0x17)
                (FRAME_COUNT, 0x18)
            );
            make_work_ids!(
                Flag,
                Status,
                (WHOLE_HIT_XLU_END, 0x23)
            );
        }
        pub mod escape {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (MOTION_RATE_PENALTY, 0x9)
                (TERM, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
                (CATCH_FRAME, 0x7)
                (ESCAPE_ATTACK, 0x8)
                (HIT_XLU_FRAME, 0x9)
                (HIT_NORMAL_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (HIT_XLU, 0xd)
            );
        }
        pub mod escape_air {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (FALL, 0xe)
                (KINE_FALL, 0xf)
                (PREV_STATUS_PASSIVE_GROUND, 0x10)
                (PREV_STATUS_PASSIVE_AIR, 0x11)
                (SLIDE, 0x12)
                (SLIDE_ENABLE_CONTROL, 0x13)
                (SLIDE_ENABLE_GRAVITY, 0x14)
                (STIFF, 0x15)
                (END_STIFF, 0x16)
                (SLIDE_KEEP_AIR_TURNED_OFF, 0x17)
            );
        }
        pub mod escape_air_add_xlu_start {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0xb)
            );
        }
        pub mod escape_air_slide {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DIR_X, 0x7)
                (DIR_Y, 0x8)
                (BACK_ACCEL, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (SLIDE_FRAME, 0xc)
                (SLIDE_STEP, 0xd)
                (SLIDE_BACK_END_FRAME, 0xe)
            );
        }
        pub mod escape_air_stiff_start {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FRAME, 0xb)
            );
        }
        pub mod escape_air_stiff {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FRAME, 0xc)
            );
        }
        pub mod fall {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MOTION_VALUE, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND_F, 0x5)
                (MOTION_KIND_B, 0x6)
                (MOTION_KIND_2ND, 0x7)
                (FRAME, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xf)
                (FROM_GROUND, 0xc)
                (DISABLE_MOTION_INTP, 0xd)
            );
        }
        pub mod genesis_get {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (FIRST, 0xc)
            );
        }
        pub mod genesis_shoot {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (SHOOT_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (FIRST, 0xc)
                (TURN, 0xd)
                (REQUEST_RADIATING, 0xe)
                (RADIATING, 0xf)
            );
        }
        pub mod gimmick {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xd)
            );
        }
        pub mod ladder {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LADDER_UPPER_X, 0x7)
                (LADDER_UPPER_Y, 0x8)
                (LADDER_END_X, 0x9)
                (LADDER_END_Y, 0xa)
                (LADDER_END_START_X, 0xb)
                (LADDER_END_START_Y, 0xc)
                (LADDER_START_LR_BACKUP, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (STICK_X, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xe)
                (FALL, 0xf)
                (DONE_INIT_LADDER_LOOP, 0x10)
                (INHERIT_MOTION, 0x11)
                (ATTACK_FALL, 0x12)
                (TERM, 0x13)
            );
        }
        pub mod gimmick_barrel {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (SHOOT_OFFSET_X, 0x8)
                (SHOOT_OFFSET_Y, 0x9)
                (SHOOT_SPEED_Z, 0xa)
                (SHOOT_SPEED_CONTROL, 0xb)
                (ARRIVAL_Z, 0xc)
                (HIT_Z, 0xd)
                (DAMAGE_REACTION_FRAME, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (NO_CATCH_BARREL, 0x6)
                (BREAK_HITSTOP_FRAME, 0x7)
                (EFFECT_ID, 0x8)
                (SOOT_FRAME, 0x9)
                (GROUND_FLAG, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (END_SPEED, 0xc)
                (MOVE_3D, 0xd)
                (MOVE_3D_END, 0xe)
                (UPDATE_DIRECTION, 0xf)
                (REMOVE_EFFECT, 0x10)
                (END_BOUND, 0x11)
                (TERM, 0x12)
            );
        }
        pub mod gimmick_door {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CENTER_X, 0x7)
                (CENTER_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (NO_INTO, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod gimmick_spring {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SHOOT_SPEED_Y, 0x7)
                (SHOOT_ANGLE, 0x8)
                (SAFE_POS_X, 0x9)
                (SAFE_POS_Y, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xe)
                (USE_SAFE_POS, 0xc)
            );
        }
        pub mod gimmick_truck {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SPEED_X, 0x7)
                (SPEED_Y, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (RUN, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod gimmick_pipe {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PLANE_X, 0x7)
                (PLANE_Y, 0x8)
                (PLANE_W, 0x9)
                (SCALE_FRAME, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STOP_FRAME, 0x6)
                (END_CHECK, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xe)
                (FALL, 0xc)
            );
        }
        pub mod gimmick_tornado {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (REACTION_FRAME, 0x5)
                (TOUCH_CHECK_FRAME, 0x6)
                (SHOOT_LIMIT_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xf)
                (CHANGE_MOTION, 0xc)
                (SHOOT, 0xd)
            );
        }
        pub mod drum {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CLATTER_TIME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (IS_EXIT_CLATTER, 0xc)
                (IS_BROKEN_DRUM, 0xd)
                (IS_HIDE, 0xe)
                (IS_NEED_BIND, 0xf)
                (TERM, 0x10)
            );
        }
        pub mod gimmick_odin_slashed {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (EXIT_STATUS, 0xc)
            );
        }
        pub mod odin_slashed {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0xd)
            );
        }
        pub mod dolly_stage_dead {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ROT_X, 0x7)
                (START_DAMAGE_SPEED_X, 0x8)
                (START_DAMAGE_SPEED_Y, 0x9)
                (START_GRAVITY_SPEED_Y, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (START_SHAKE_AFTER_STOP, 0xc)
                (REVERT_SPEED_AFTER_CUTIN, 0xd)
                (TERM, 0xe)
            );
        }
        pub mod gimmick_jump_board {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (HEIGHT, 0xb)
                (ACCEL_Y, 0xc)
                (AFTER_ACCEL_Y, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (XLU_FRAME, 0x5)
                (ATTACK_COUNT, 0x6)
                (ACCEL_CHANGE_COUNT, 0x7)
                (JUMP_EFFECT_HANDLE_A, 0x8)
                (JUMP_EFFECT_HANDLE_STAR, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xc)
                (TO_JUMP, 0xd)
                (JUMP_MINI, 0xe)
                (TERM, 0xf)
            );
        }
        pub mod glide {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x7)
                (POWER, 0x8)
                (GRAVITY, 0x9)
                (ANGLE_SPEED, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (RAPID_FALL_COUNT, 0x5)
                (TERM, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (STOP, 0xc)
                (LANDING, 0xd)
                (RAPID_FALL, 0xe)
                (TOUCH_GROUND, 0xf)
            );
        }
        pub mod guard_on {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PREV_X, 0x7)
                (PREV_Y, 0x8)
                (REACH_PREV_X, 0x9)
                (REACH_PREV_Y, 0xa)
                (DELAY_MUL, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (MIN_FRAME, 0x5)
                (JUST_FRAME, 0x6)
                (CATCH_FRAME, 0x7)
                (LANDING_EFFECT_FRAME, 0x8)
                (JUST_SHEILD_COUNT, 0x9)
                (SHIELD_DAMAGE_EFFECT_HANDLE, 0xa)
                (SHIELD_DAMAGE2_EFFECT_HANDLE, 0xb)
                (SCALE_FADE_START_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0x13)
                (EFFECT, 0xc)
                (IS_DONE_GUARD_DAMAGE_NUM, 0xd)
                (JUST_SHIELD, 0xe)
                (DISABLE_HIT_STOP_DELAY_STICK, 0xf)
                (HIT_XLU, 0x10)
                (JUST_SHIELD_SLOW_WHOLE, 0x11)
                (SPECIAL_HI, 0x12)
            );
        }
        pub mod guard_off {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0xd)
                (CANCEL_FRAME, 0xe)
                (TERM, 0xf)
            );
        }
        pub mod guard_damage {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xc)
                (SHIELD_POWER, 0xd)
                (SHIELD_LR, 0xe)
                (PREV_SHIELD, 0xf)
                (HIT_STOP_FRAME, 0x10)
                (SHIELD_SETOFF_MUL, 0x11)
                (DELAY_MUL, 0xb)
                (TERM, 0xc)
            );
            make_work_ids!(
                Int,
                Status,
                (STIFF_FRAME, 0xe)
                (OBJECT_ID, 0xf)
                (DAMAGE, 0x10)
                (PREV_SHIELD_SCALE_FRAME, 0x11)
            );
            make_work_ids!(
                Flag,
                Status,
                (GOLD_EYE, 0x14)
            );
        }
        pub mod shield_guard {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0xf)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (DUMMY, 0x15)
                (SQUAT, 0x16)
                (TERM, 0x17)
            );
        }
        pub mod hammer {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (COUNTER, 0x5)
                (DISCONNECT_FRAME, 0x6)
                (DRIFT_FRAME, 0x7)
                (DRIFT_PAST_FRAME, 0x8)
                (DRIFT_DEC_COUNT, 0x9)
                (MOTION_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (BUTTON_JUMP, 0xc)
                (CHANGE_COLANIM, 0xd)
                (BLINK_HAMMER, 0xe)
                (BGM_STARTED, 0xf)
            );
        }
        pub mod hammer_walk {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SPEED, 0x7)
            );
        }
        pub mod ice {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ROT_X, 0x7)
                (ROT_X_SPEED, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
                (EFFECT, 0x6)
                (NO_GROUND_FRAME, 0x7)
                (PREV_SHAPE_KIND, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (CONTINUE, 0xc)
                (TOUCH_GROUND, 0xd)
                (MTRANS_AIR, 0xe)
                (TERM, 0xf)
            );
        }
        pub mod item_grass_pull {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (THROW_N_OFFSET_ANIM_START_MOT_FRAME, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (NEXT_STEP, 0x6)
                (PICKABLE_ITEM_GRASS_OBJECT_ID, 0x7)
                (ITEM_POINTER, 0x8)
                (THROW_N_OFFSET_ANIM_FRAME_COUNT, 0x9)
                (THROW_N_OFFSET_ANIM_FRAME_COUNT_MAX, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (PICKUP_FAILED, 0xc)
                (STTUS_END_IF_PICKUP_FAILED, 0xd)
            );
        }
        pub mod item_rocketbelt_hover {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (HOVER_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (PUSH_BUTTON, 0xc)
                (FIRST_SUB_ENERGY, 0xd)
                (FIRE, 0xe)
                (SMOKE, 0xf)
                (JET_ON, 0x10)
                (ROCKETBELT_REPLACE, 0x11)
            );
        }
        pub mod item_shoot {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (STAFF_MOTION_RATE, 0xe)
                (REVENGESHOOTER_START, 0xd)
                (REVENGESHOOTER_TERM, 0x10)
                (UPPER_FRAME, 0xb)
                (UPPER_RATE, 0xc)
                (HOLD_FRAME, 0xd)
                (CLAUNCHER_ANGLE, 0xe)
                (CLAUNCHER_ANGLE_ADD, 0xf)
                (REVENGESHOOTER_MIN_MOTION_RATE, 0xe)
                (REVENGESHOOTER_MAX_MOTION_RATE, 0xf)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (COMMON_TERM, 0x14)
                (RESERVED_START, 0x13)
                (RESERVED_0, 0x14)
                (RESERVED_1, 0x15)
                (RESERVED_2, 0x16)
                (RESERVED_3, 0x17)
                (TERM, 0x17)
                (LGUN_START, 0x13)
                (LGUN_TERM, 0x14)
                (FFLOWER_START, 0x13)
                (FFLOWER_TERM, 0x17)
                (SSCOPE_START, 0x13)
                (SSCOPE_TERM, 0x17)
                (CLAUNCHER_START, 0x13)
                (CLAUNCHER_TERM, 0x15)
                (MAGICPOT_START, 0x13)
                (MAGICPOT_TERM, 0x18)
                (STAFF_START, 0x13)
                (STAFF_TERM, 0x16)
                (ITEM_KIND, 0x5)
                (STATUS_KIND_WAIT, 0x6)
                (STATUS_KIND_WALK_F, 0x7)
                (STATUS_KIND_WALK_B, 0x8)
                (STATUS_KIND_WALK_BRAKE_F, 0x9)
                (STATUS_KIND_WALK_BRAKE_B, 0xa)
                (STATUS_KIND_DASH_F, 0xb)
                (STATUS_KIND_DASH_B, 0xc)
                (STATUS_KIND_TURN, 0xd)
                (STATUS_KIND_AIR, 0xe)
                (STATUS_KIND_JUMP, 0xf)
                (STATUS_KIND_JUMP_SQUAT, 0x10)
                (STATUS_KIND_JUMP_AERIAL, 0x11)
                (STATUS_KIND_FLY, 0x12)
                (STATUS_KIND_LANDING, 0x13)
                (FFLOWER_STEP, 0x14)
                (FFLOWER_SHOOT_COUNT, 0x15)
                (FFLOWER_COUNTER, 0x16)
                (SSCOPE_STEP, 0x14)
                (SSCOPE_BULLET, 0x15)
                (SSCOPE_CHARGE, 0x16)
                (CLAUNCHER_STEP, 0x14)
                (MAGICPOT_STEP, 0x14)
                (MAGICPOT_SHOOT_COUNT, 0x15)
                (MAGICPOT_COUNTER, 0x16)
                (MAGICPOT_EFFECT_COUNTER, 0x17)
                (STAFF_STOP_FRAME, 0x14)
                (STAFF_STOP_FRAME_COUNT, 0x15)
            );
            make_work_ids!(
                Flag,
                Status,
                (PASS, 0xc)
                (JUMP_FLAG_BUTTON, 0xd)
                (TO_DASH, 0xe)
                (FROM_TURN_RUN, 0xf)
                (JUMP_FLY_NEXT, 0x10)
                (CANCEL, 0x11)
                (FFLOWER_SHOOT, 0x12)
                (FFLOWER_RELEASE, 0x13)
                (SSCOPE_RELEASE, 0x12)
                (SSCOPE_SHOOT, 0x13)
                (SSCOPE_AERIAL_REQ_EFFECT, 0x14)
                (SSCOPE_AERIAL_REQ_SOUND, 0x15)
                (CLAUNCHER_ROT_WHOLE, 0x12)
                (MAGICPOT_RELEASE, 0x12)
                (FIRST_SMOKE_EFFECT, 0x13)
                (STAFF_STOP, 0x13)
                (STAFF_NO_STOP_ONCE, 0x14)
                (REVENGESHOOTER_MOTION_RATE, 0x12)
                (GENESIS_START, 0x11)
                (GENESIS_INTERRUPTED_CHANGE_STATUS, 0x12)
                (GENESIS_TERM, 0x13)
            );
        }
        pub mod item_specialflag_hoist {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MOTION_FRAME_BACKUP, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (HOST_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (HOIST_START, 0xc)
                (HOIST_KEEP, 0xd)
                (HOIST_END, 0xe)
            );
        }
        pub mod item_starring {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0xe)
                (CATCH_POS_X, 0x7)
                (CATCH_POS_Y, 0x8)
                (INHALE_SPEED, 0x9)
                (SHOOT_SPEED_X, 0xa)
                (SHOOT_SPEED_Y, 0xb)
                (GROUND_SAFE_POS_OFFSET_Y, 0xc)
                (ANGLE, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (SHOOT_NO_INHALE_FRAME, 0x5)
                (SHOOT_FRAME, 0x6)
                (SHOOT_NO_PASSABLE_FRAME, 0x7)
            );
        }
        pub mod item_kawasaki {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PRE_POT_X, 0x7)
                (PRE_POT_Y, 0x8)
                (PRE_POT_Z, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (FLY_COUNT, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (IN_POT, 0xc)
                (FALL, 0xd)
            );
        }
        pub mod item_driver {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FLY_DEG, 0x7)
                (CAPTURE_FRAME, 0x8)
                (CAPTURE_RECOVERY, 0x9)
                (CLATTER_FRAME, 0xa)
                (CAPTURE_JUMP_SPEED_X, 0xb)
                (CAPTURE_JUMP_SPEED_Y, 0xc)
                (OFFSET_X, 0xd)
                (OFFSET_Y, 0xe)
                (OFFSET_Z, 0xf)
                (FLY_DISTANCE, 0x10)
                (MAX_CHANGE_DEGREE, 0x11)
                (FLY_SPEED, 0x12)
                (FLY_MAX_SPEED, 0x13)
                (FLY_ACCEL, 0x14)
                (DEST_DISTANCE, 0x15)
                (ROT_Z_SPEED, 0x16)
                (INIT_X, 0x17)
                (INIT_Y, 0x18)
                (ROT_Z, 0x19)
                (SCALE, 0x1a)
            );
            make_work_ids!(
                Int,
                Status,
                (JOINT_ID, 0x5)
                (FLY_COUNT, 0x6)
                (XLU_FRAME, 0x7)
                (START_ACCEL_FRAME, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TO_BUS, 0xc)
                (IN_BUS, 0xd)
            );
        }
        pub mod jump {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (BUTTON_ON_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (BUTTON, 0xc)
                (FLY_NEXT, 0xd)
                (AVAILABLE_GLIDE, 0xe)
                (GLIDE_ENABLE, 0xf)
                (GLIDE_INPUT_BACK, 0x10)
                (GLIDE_INPUT, 0x11)
                (POWBLOCK_QUAKE_JUMP, 0x12)
                (GIMMICK_SPRING_JUMP, 0x13)
                (GIMMICK_SPRING_JUMP_FROM_RING, 0x14)
                (RESERVE_ATTACK_BUTTON_ON, 0x15)
                (GIMMICK_SPRING_JUMP_FROM_SPECIAL, 0x16)
            );
        }
        pub mod jump_fly {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (NEXT, 0xd)
            );
        }
        pub mod final__jump_end {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0x16)
                (ENABLE_LANDING, 0x17)
                (TERM, 0x18)
            );
        }
        pub mod kamui_pierce {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (UNLINK, 0xc)
            );
        }
        pub mod killer {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xc)
            );
        }
        pub mod killer_jump {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xc)
            );
        }
        pub mod scaling {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (AIR_NEXT_STAUS, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (SET_MOTION, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod koopa_dived {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (INIT_Y, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (CAMERA_UPDATE_POS, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod landing {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x9)
                (STIFFNESS_FRAME, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (STIFF_CANCEL, 0xc)
                (STIFF_CANCEL_CONT, 0xd)
                (SQUAT_WAIT, 0xe)
                (SLIP, 0xf)
                (ESCAPE_AIR, 0x10)
                (PROG_TURN, 0x11)
                (PROG_TURN_RESERVE, 0x12)
            );
        }
        pub mod ottotto {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (FRAME, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod pass {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xd)
                (IS_SET_PASS, 0xc)
            );
        }
        pub mod passive {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (WALL_ANGLE, 0x7)
                (TOUCH_ANGLE, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x8)
            );
        }
        pub mod passive_wall {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STOP_FRAME, 0x5)
                (JUMP_COUNT, 0x6)
            );
        }
        pub mod palutena_final_blackhole {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0x1c)
                (IS_BEAM_EXIST, 0x1d)
                (IS_BEAM_ATTACK_HIT, 0x1e)
                (TERM, 0x1f)
            );
        }
        pub mod rebirth {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0xb)
                (MOVE_START_X, 0x7)
                (MOVE_START_Y, 0x8)
                (MOVE_TARGET_X, 0x9)
                (MOVE_TARGET_Y, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (MOVE_ELAPSED_FRAME, 0x5)
                (MOVE_TOTAL_FRAME, 0x6)
                (MOVE_END_FRAME, 0x7)
                (FRAME, 0x8)
                (PLATE_EFF_ID, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (MOVE_END, 0xc)
                (ENABLE_STRANS, 0xd)
                (DROP_DRAGOON, 0xe)
                (NO_MOVE, 0xf)
                (USE_EFFECT_REBIRTH, 0x10)
                (HAS_EFFECT_REBIRTH, 0x11)
                (AUTO_FALL, 0x12)
                (MOVE_POS, 0x13)
            );
        }
        pub mod rebound_jump {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (CENCEL_FRAME, 0x5)
            );
        }
        pub mod run_brake {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START_SPEED, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x7)
                (FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (STOP, 0xc)
                (STOP_START, 0xd)
                (TURN_RUN, 0xe)
                (ATTACK_DASH_STRANS_OFF, 0xf)
                (STOP_SHAKE, 0x10)
            );
        }
        pub mod run {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (RUN_FRAME, 0x7)
                (SPEED, 0x8)
                (SPEED_MAX_RATIO, 0x9)
                (START_FRAME, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (INIT_SPEED, 0xc)
            );
        }
        pub mod saving_damage {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x17)
                (STUN_FRAME, 0x18)
            );
            make_work_ids!(
                Flag,
                Status,
                (DOWN_SPOT, 0x24)
                (DOWN_SPOT_SLOW, 0x25)
                (DOWN_SPOT_SLOW_START, 0x26)
                (TERM, 0x27)
            );
        }
        pub mod stabbed_damage {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x17)
                (STUN_FRAME, 0x18)
            );
            make_work_ids!(
                Flag,
                Status,
                (DOWN_SPOT, 0x24)
                (DOWN_SPOT_SLOW, 0x25)
                (DOWN_SPOT_SLOW_START, 0x26)
                (TERM, 0x27)
            );
        }
        pub mod fist_down {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x17)
                (STUN_FRAME, 0x18)
            );
            make_work_ids!(
                Flag,
                Status,
                (DOWN_SPOT, 0x24)
                (DOWN_SPOT_SLOW, 0x25)
                (DOWN_SPOT_SLOW_START, 0x26)
                (TERM, 0x27)
            );
        }
        pub mod slip {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (DOWN_FRAME, 0x5)
            );
        }
        pub mod special_n {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xe)
                (FIRST, 0xc)
            );
        }
        pub mod squat {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x9)
                (FRAME, 0x5)
                (COUNT, 0x6)
                (ADD_SQUAT_PASS_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (ENABLE_PASS, 0xc)
                (REQUEST_SQUAT_SE, 0xd)
            );
        }
        pub mod squat_walk {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (SPEED, 0x7)
                (SPEED_MAX_RATIO, 0x8)
                (TERM, 0x9)
            );
        }
        pub mod stop_ceil {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FALL_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xe)
                (FALL, 0xc)
            );
        }
        pub mod super_jump_punch {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x12)
                (CONST_LR_STICK_X, 0x7)
                (CONST_DIR_STICK_X, 0x8)
                (CONST_DIR_MUL, 0x9)
                (CONST_AIR_START_X_MUL, 0xa)
                (CONST_AIR_ACCEL_Y, 0xb)
                (CONST_AIR_PASS_MUL, 0xc)
                (CONST_FALL_X_MUL, 0xd)
                (CONST_PASS_MUL, 0xe)
                (MOVE_TRANS_END_SPEED_X_MUL, 0xf)
                (MOVE_TRANS_END_SPEED_Y_MUL, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (MOTION_KIND_AIR, 0x6)
                (STATUS_KIND_END, 0x7)
                (CONST_LANDING_FRAME, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (MOVE_TRANS, 0xc)
                (CHANGE_KINE, 0xd)
                (REVERSE_LR, 0xe)
                (AIR_MOTION, 0xf)
                (NO_SET_CLIFF_CHECK, 0x10)
                (CHANGE_KINE_CONTROL, 0x11)
            );
        }
        pub mod swallowed {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (WALL_REFLECTION_LR, 0x7)
                (SUM_SPD_X, 0x8)
                (SUM_SPD_Y, 0x9)
                (OFFSET_X, 0xa)
                (OFFSET_Y, 0xb)
                (PARTNER_LR, 0xc)
                (TERM, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (PARTNER_TASK_ID, 0x5)
                (PARTNER_KIND, 0x6)
                (STAR_TASK_ID, 0x7)
                (SWALLOWED_MOTION, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (THROWN_COPY, 0xc)
                (SPIT_START, 0xd)
                (ARRIVAL, 0xe)
                (COPY_DEDEDE, 0xf)
                (THROW_CUT_DAMAGE, 0x10)
                (COPY_KROOL, 0x11)
            );
        }
        pub mod swim {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TRANS_N_OFFSET_Y, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (DROWN_FRAME, 0x5)
                (COUNTER, 0x6)
                (WATER_TASK_ID, 0x7)
                (EFF_COUNTER, 0x8)
                (NO_WATER_FRAME, 0x9)
                (TERM, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (DAMAGE, 0xc)
                (IS_FLIP, 0xd)
            );
        }
        pub mod teleport {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x9)
                (MOT_RATE, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (END_EFFECT, 0xc)
            );
        }
        pub mod throw {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MOTION_RATE, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (TARGET_OBJECT, 0xa)
                (TARGET_HIT_GROUP, 0xb)
                (TARGET_HIT_NO, 0xc)
                (STOP_FRAME, 0xd)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xf)
                (START_AIR, 0xc)
                (INVINCIBLE, 0xd)
                (STOP, 0xe)
            );
        }
        pub mod thrown {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x5)
                (STOP_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (GAMEWATCH_STOCK_ICON, 0xc)
                (DISABLE_PASSIVE, 0xd)
            );
        }
        pub mod tread {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (JUMP_SPEED_MUL, 0x7)
                (ATTACK_FRAME, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (LINK_NO, 0x5)
                (RECOVERY_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (LINK_EVENT_RESULT_0, 0xf)
                (TERM, 0x13)
                (LINK_EVENT_RESULT_1, 0x10)
                (LINK_EVENT_RESULT_2, 0x11)
                (NO_REACTION, 0xc)
                (BUTTON, 0xd)
                (RECOVERY, 0xe)
            );
        }
        pub mod turn {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LR, 0x7)
                (TURN_FRAME, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (DASH, 0xc)
                (REVERSE, 0xd)
                (TURN, 0xe)
                (NO_TURN_TO_ESCAPE, 0xf)
                (TERM, 0x11)
            );
        }
        pub mod turn_run {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TURN_RUN_FRAME, 0x7)
                (TURN_LR, 0x8)
                (START_SPEED, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (TURN_FRAME, 0x5)
                (CATCH_FRAME, 0x6)
                (RUN_BRAKE_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (STOP, 0xc)
                (STOP_START, 0xd)
                (TO_RUN, 0xe)
                (STOP_SHAKE, 0xf)
                (TERM, 0x11)
            );
        }
        pub mod turn_run_brake {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xd)
            );
        }
        pub mod walk_brake {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (STOP, 0xc)
                (STOP_START, 0xd)
            );
        }
        pub mod walk {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SPEED, 0x7)
                (SPEED_SLOW_RATIO, 0x8)
                (SPEED_MIDDLE_RATIO, 0x9)
                (SPEED_FAST_RATIO, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (SLIP, 0xc)
                (MOTION_BLEND_MIDDLE_FAST, 0xd)
            );
        }
        pub mod wall_jump {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0x6)
                (TERM, 0x9)
                (DISABLE_CONT_FRAME, 0x7)
            );
        }
        pub mod warpstar {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (IS_END, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod win {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (KIND, 0x5)
                (MOTION_KIND, 0x6)
                (MOTION_KIND_WAIT, 0x7)
                (EFFECT_HANDLE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (WIN_MOT, 0xc)
            );
        }
        pub mod free_move {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (FREE_MOVE_ROTATE_X, 0x7)
                (FREE_MOVE_ROTATE_Y, 0x8)
                (FREE_MOVE_ROTATE_Z, 0x9)
                (TERM, 0xa)
            );
        }
        pub mod roulette {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x19)
                (FRAME, 0x1a)
                (SHOOT_FRAME, 0x1b)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (DUMMY, 0x1f)
                (TERM, 0x25)
                (SHOOTABLE, 0x20)
                (SHOOT, 0x21)
                (SHOOT_END, 0x22)
                (CONTINUE, 0x23)
            );
        }
        pub mod final_ {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x10)
                (PARENT_POS_X, 0x7)
                (PARENT_POS_Y, 0x8)
                (OFFSET_POS_X, 0x9)
                (OFFSET_POS_Y, 0xa)
                (TARGET_POS_X, 0xb)
                (TARGET_POS_Y, 0xc)
                (SPEED, 0xd)
                (PARENT_TO_TARGET_X, 0xe)
                (PARENT_TO_TARGET_Y, 0xf)
                (FINAL2_OFFSET_X, 0x14)
                (FINAL2_OFFSET_Y, 0x15)
                (FINAL2_FALL_POS_X, 0x16)
                (FINAL2_FALL_POS_Y, 0x17)
            );
            make_work_ids!(
                Int,
                Status,
                (LINK_TASK_ID, 0x5)
                (MOTION_KIND, 0x6)
                (MOTION_COMP_FRAME, 0x7)
                (SMOKE_EFFECT_HANDLE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (FINISH, 0xc)
                (VISUAL_ATTACK_OTHER_FLAG_STOP, 0xd)
                (VISUAL_ATTACK_OTHER_NAME_CURSOR, 0xe)
                (VISUAL_ATTACK_OTHER_PREV_NAME_CURSOR, 0xf)
                (PREV_NO_COMP, 0x10)
            );
        }
        pub mod link_final {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (PHASE, 0x5)
                (MOTION_KIND, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xf)
                (ANIM_CMD_RUN, 0xc)
                (FINISH, 0xd)
                (ABORT, 0xe)
            );
        }
        pub mod luigi_final_shoot {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (INIT_POWER, 0x12)
                (PARENT_POS_X, 0x13)
                (PARENT_POS_Y, 0x14)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x14)
                (TERM, 0x15)
            );
            make_work_ids!(
                Flag,
                Status,
                (INDIRECT_CHANGED, 0x1d)
            );
        }
        pub mod bitten_wario {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (MOTION_END_FRAME, 0x7)
                (TERM, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (PARENT_SITUATION, 0x5)
                (MOTION_RATE_FRAME, 0x6)
                (MOTION_KIND_GROUND, 0x7)
                (MOTION_KIND_AIR, 0x8)
            );
        }
        pub mod shouldered_donkey {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (START_LR, 0x5)
            );
        }
        pub mod swing_gaogaen {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (THROWN_SPEED_X, 0x7)
                (RETURN_SPEED_X, 0x8)
                (ROPE_OVER_SPEED_X, 0x9)
                (ROPE_POS_X, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (CATCH_CLATTER_FRAME, 0x6)
                (CATCH_CLATTER_DAMAGE_MUL_FRAME_ADD, 0x7)
                (CATCH_CLATTER_DEC_FRAME, 0x8)
                (MOVE_CANCEL_FRAME, 0x9)
                (THROWN_AIR_MOTION_FRAME_FIX, 0xa)
                (RETURN_AIR_MOTION_FRAME_FIX, 0xb)
                (INVALID_CAPTURE_FRAME, 0xc)
                (GAOGAEN_ID, 0xd)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (IS_HIT_LARIAT, 0xc)
                (IS_HIT_SHOULDER, 0xd)
                (IS_HIT_FAILURE, 0xe)
                (IS_ROPE, 0xf)
                (TERM, 0x10)
            );
        }
        pub mod miifighter_thrown {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (OPPONENT_OBJCET_ID, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xd)
                (TERM, 0xe)
            );
        }
        pub mod final__damage_fly_cloud {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xf)
                (TERM, 0x18)
                (POS_X, 0x10)
                (POS_Y, 0x11)
                (BEZIER_PARAM1, 0x12)
                (BEZIER_PARAM2, 0x13)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x9)
                (MOVE_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (ARRIVAL, 0x11)
                (CHANGE_MOTION, 0x12)
            );
        }
        pub mod mewtwo_thrown {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (SPEED_Y, 0x7)
                (TERM, 0x8)
            );
        }
        pub mod final__damage_fly_koopa {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xf)
                (TERM, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x9)
            );
        }
        pub mod capture_fishingrod_hook {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TOTAL_DAMAGE, 0x7)
                (INIT_SPEED, 0x8)
                (BRAKE_MUL, 0x9)
                (GROUND_HIT_SPEED, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x7)
                (GROUND_HIT_COUNT, 0x5)
                (MOTION_KIND_DAMAGE, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (INIT_BRAKE, 0xc)
                (DAMAGE_CUT, 0xd)
            );
        }
        pub mod final__damage_ryu {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xf)
                (TERM, 0x10)
            );
            make_work_ids!(
                Flag,
                Status,
                (SHINSYOURYUKEN, 0x11)
            );
        }
        pub mod visual_scene {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (CLEAR_SLOW, 0xc)
                (ABS_HIT, 0xd)
                (FINAL_ZOOM_START, 0xe)
                (CLEAR_ATTACK, 0xf)
                (ABS_SET, 0x10)
                (END_EXIT, 0x11)
                (END_EXIT_FINISH, 0x12)
            );
        }
        pub mod visual_scene_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (SCALE_BASE, 0xc)
                (SCALE_OWNER, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (POS_OBJECT_ID, 0x5)
                (POS_JOINT, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xd)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod packun_final_capture {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xf)
                (TERM, 0x15)
                (INIT_SCALE, 0x10)
                (POS_X, 0x11)
                (POS_Y, 0x12)
                (ESCAPE_SPEED_X, 0x13)
                (ESCAPE_SPEED_Y, 0x14)
            );
            make_work_ids!(
                Flag,
                Status,
                (SUSPEND, 0x11)
            );
        }
        pub mod status_jack_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SCALE_BASE, 0x7)
                (SCALE_OWNER, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (EFFECT_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (FINISH, 0xc)
                (TO_SPECIAL_RESULT, 0xd)
            );
        }
        pub mod dolly_super_special2_capture {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STOP_FRAME, 0xa)
                (MOVE_FRAME, 0xb)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0x12)
                (START_GROUND, 0x13)
                (THROWN, 0x14)
            );
        }
        pub mod status_dolly_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SCALE_BASE, 0x7)
                (SCALE_OWNER, 0x8)
                (SCALE_Z, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (FINISH, 0xc)
            );
        }
        pub mod catched_pickel_trolley {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x7)
            );
        }
        pub mod final__damage_pickel {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xf)
                (TERM, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (MOVE_FRAME, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (MOTION2, 0x11)
            );
        }
        pub mod demon_dived {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (INIT_Y, 0x7)
                (INIT_OFFSET_X, 0x8)
                (INIT_OFFSET_Y, 0x9)
                (INIT_OFFSET_Z, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (OFFSET_COUNT, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (CAMERA_UPDATE_POS, 0xc)
                (TERM, 0xd)
            );
        }
        pub mod trail_rebound {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (LIMIT_SPEED_Y, 0x7)
                (TERM, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (REBOUND_END, 0xc)
            );
        }
        pub mod murabito_final_capture {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PARENT_POS_X, 0x7)
                (PARENT_POS_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (START, 0x4)
                (TERM, 0x5)
            );
        }
        pub mod capture_trail_keyhole {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0x6)
                (TERM, 0x12)
                (SCALE_BASE, 0x7)
                (START_POS_X, 0x8)
                (START_POS_Y, 0x9)
                (START_POS_Z, 0xa)
                (INHALE_POS_X, 0xb)
                (INHALE_POS_Y, 0xc)
                (INHALE_POS_Z, 0xd)
                (INHALE_SPEED, 0xe)
                (INHALE_BRAKE, 0xf)
                (INHALE_SPEED_MIN, 0x10)
                (INHALE_SCALE, 0x11)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME_BASE, 0x5)
                (INHALE_FRAME, 0x6)
                (INHALE_INDEX, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (INHALE_START, 0xc)
                (INHALE, 0xd)
                (INHALE_END, 0xe)
            );
        }
        pub mod link_status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FINAL_TARGET_TASK_ID, 0x8)
            );
        }
        pub mod yoshi_egg {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CONTROL_ACCEL_MUL, 0x7)
                (ANIM_FRAME, 0x8)
                (COUNT_FRAME, 0x9)
                (SCALE_BACKUP, 0xa)
                (CLATTER_TIME, 0xb)
                (RECOVER_SPEED_X, 0xc)
                (RECOVER_SPEED_Y, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (RECOVER_XLU_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xd)
                (SCALING_END, 0xc)
            );
        }
        pub mod fox_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (ROT_X, 0xc)
                (ROT_Y, 0xd)
                (ROT_Z, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (PARENT_ID, 0x5)
                (SCENE, 0x6)
                (PHASE, 0x7)
                (FRAME, 0x8)
                (NO, 0x9)
                (POS_OBJECT_ID, 0xa)
                (POS_JOINT, 0xb)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod captain_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod falco_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (ROT_X, 0xc)
                (ROT_Y, 0xd)
                (ROT_Z, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (NO, 0x8)
                (POS_OBJECT_ID, 0x9)
                (POS_JOINT, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod wario_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (ROTATE_X, 0xc)
                (ROTATE_Y, 0xd)
                (ROTATE_Z, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
                (NO, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod diddy_status_final {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FINAL_TARGET_ID, 0xc)
            );
        }
        pub mod diddy_clung_thrown {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (CATCH_OBJECT_ID, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (TERM, 0xc)
            );
        }
        pub mod dedede_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (ROT_X, 0xc)
                (ROT_Y, 0xd)
                (ROT_Z, 0xe)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod lucario_status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FINAL_TARGET_POS_X, 0x9)
                (FINAL_TARGET_POS_Y, 0xa)
            );
        }
        pub mod rockman_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
                (CHANGE_DAMAGE_MOTION, 0xd)
            );
        }
        pub mod shulk_status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (FINAL_TARGET_FLY_START, 0x13)
            );
        }
        pub mod shulk_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FLY_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (KIND, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
                (CHANGE_DAMAGE_MOTION, 0xd)
            );
        }
        pub mod duckhunt_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (NO, 0x8)
                (KIND, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
                (CHANGE_DAMAGE_MOTION, 0xd)
            );
        }
        pub mod ryu_final_target {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (START, 0xa)
                (FRAME, 0xb)
                (STEP, 0xc)
                (DAMAGE2_START_FRAME, 0xd)
            );
        }
        pub mod kamui_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_NODE, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
                (EFFECT_ON, 0xd)
            );
        }
        pub mod bayonetta_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (END_VX, 0x7)
                (END_VY, 0x8)
                (OFS_X, 0x9)
                (OFS_Y, 0xa)
                (OFS_Z, 0xb)
                (MOTION_FRAME, 0xc)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (BATTLE_OBJECT_ID_GOMORRAH, 0x8)
                (NO, 0x9)
                (KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (CHANGE_DAMAGE_MOTION, 0xc)
            );
        }
        pub mod ridley_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (TARGET_COUNT, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod simon_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
            );
        }
        pub mod krool_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (ORIGINAL_SCALE, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (MOT_WAIT, 0xc)
                (EFFECT_ON, 0xd)
            );
        }
        pub mod gaogaen_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SCALE, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (PARENT_OBJECT_ID, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
            );
        }
        pub mod buddy_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (INIT_OWNER_SCALE, 0xc)
                (ROTATE_X, 0xd)
                (ROTATE_Y, 0xe)
                (ROTATE_Z, 0xf)
                (SCALE_Z, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (SET_DAMAGE_MOTION, 0xc)
                (SET_INIT_SCENE_02, 0xd)
                (SET_INIT_SCENE_04, 0xe)
                (SET_LAST_DAMAGE_MOTION, 0xf)
                (MOT_WAIT, 0x10)
            );
        }
        pub mod master_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SCALE_BASE, 0xe)
                (SCALE_OWNER, 0xf)
                (SCALE_Z, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (THROW_JOINT, 0x7)
                (NUM, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xc)
                (SET_INIT_SCENE_03, 0xd)
            );
        }
        pub mod masetr_final_target {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (SCENE04_CHANGE_MOTION, 0xe)
            );
        }
        pub mod tantan_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START, 0xd)
                (SCALE_BASE, 0xe)
                (SCALE_OWNER, 0xf)
                (SCALE_Z, 0x10)
                (MOTION_RATE, 0x11)
                (MOTION_START_FRAME, 0x12)
            );
            make_work_ids!(
                Int,
                Status,
                (ABS_HIT, 0x7)
                (MOTION_KIND, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (SCENE02, 0xd)
                (SCENE03, 0xf)
                (CHANGE_MOTION, 0x10)
            );
        }
        pub mod pickel_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (MOTION_RATE, 0xe)
                (MOTION_START_FRAME, 0xf)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xc)
                (CHANGE_MOTION, 0xd)
            );
        }
        pub mod edge_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SCALE_BASE, 0xe)
                (SCALE_OWNER, 0xf)
                (SCALE_Z, 0x10)
            );
            make_work_ids!(
                Int,
                Status,
                (NUM, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xc)
            );
        }
        pub mod trail_final_target {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FALL_SPEED, 0x7)
                (END_VX, 0x8)
                (END_VY, 0x9)
                (PITCH, 0xa)
                (INIT_SCALE, 0xb)
                (INIT_OWNER_SCALE, 0xc)
                (SCALE_Z, 0xd)
            );
            make_work_ids!(
                Int,
                Status,
                (SCENE, 0x5)
                (PHASE, 0x6)
                (FRAME, 0x7)
                (POS_OBJECT_ID, 0x8)
                (POS_JOINT, 0x9)
            );
            make_work_ids!(
                Flag,
                Status,
                (START, 0xb)
                (SET_DAMAGE_MOTION, 0xc)
                (MOT_WAIT, 0xd)
            );
        }
        make_work_ids!(
            Float,
            Status,
            (RESERVE_TERM, 0x8)
            (RESERVE_HOLD_RATE, 0x0)
            (REBOUND_FRAME, 0x1)
            (REBOUND_LR, 0x2)
            (REBOUND_MOTION_RATE, 0x3)
            (RESERVE_KINETIC_MOTION_SPEED_MUL, 0x4)
            (RESERVE_KINETIC_ENERGY_TYPE_ATTACK_SPEED_MUL, 0x5)
            (RESERVE_DAMAGE_LR, 0x6)
            (KEEP_FLAG_MARTH_FINAL_INT, 0xfffe00)
            (KEEP_FLAG_MURABITO_SPECIAL_LW_WATER_INT, 0x79dfc0)
        );
        make_work_ids!(
            Int,
            Status,
            (RESERVE_JUMP_FROM, 0x0)
            (DAMAGE_REFLECT_LAST_DIR, 0x1)
            (RESERVE_DAMAGE_REFLECT_ESCAPE_DISABLE_FRAME, 0x2)
            (RESERVE_ATTACK_MINI_JUMP_ATTACK_FRAME, 0x3)
            (RESERVE_LOG_ATTACK_KIND, 0x4)
            (UTILITY_WORK_INT_START, 0x4)
            (UTILITY_WORK_INT_MOT_KIND, 0x5)
            (UTILITY_WORK_INT_MOT_AIR_KIND, 0x6)
            (UTILITY_WORK_INT_MTRANS, 0x7)
            (UTILITY_WORK_RESERVE_TERM, 0x8)
        );
        make_work_ids!(
            Flag,
            Status,
            (RESERVE_GRAVITY_STABLE_UNABLE, 0x0)
            (RESERVE_DIVE, 0x1)
            (RESERVE_CHECK_DEAD_AREA_FORCE, 0x2)
            (RESERVE_JUMP_MINI, 0x3)
            (RESERVE_DISABLE_OUTSIDE_ENERGY, 0x4)
            (RESERVE_FALL_SLOWLY, 0x5)
            (RESERVE_RUN_FALL, 0x6)
            (RESERVE_LANDING_ATTACK_AIR_SQUAT, 0x7)
            (RESERVE_TURN_ATTACK_S4_REV_PAD, 0x8)
            (RESERVE_CLIFF_CATCH_MOVE, 0x9)
            (RESERVE_CHANGE_STATUS_DLAY_MOTION, 0xa)
            (RESERVE_ATTACK_DISABLE_MINI_JUMP_ATTACK, 0xb)
            (UTILITY_WORK_FLAG_START, 0xb)
            (UTILITY_WORK_FLAG_MOTION_TRANSITION_TERM_ID_MOT_END, 0xc)
            (CATCH_REBOUND, 0x9)
            (CATCH_REBOUND_AIR, 0x6)
        );
    }
    pub mod fox_blaster {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (LOOP_ACCEPT, 0xd)
                (LOOP, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod fox_illusion {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (RUSH_DEGREE, 0x7)
                (MAX_RUSH_DEGREE, 0x8)
                (MIN_STICK, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
                (STOP_Y_FRAME, 0x7)
                (WPN_COUNT, 0x8)
                (REVERT_ANGLE_FRAME, 0x9)
                (REVERT_ANGLE_COUNT, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (RUSH_FORCE_END, 0xd)
                (HIT_SHIELD, 0xe)
                (HIT_SHIELD_TO_END, 0xf)
                (AIR_CONTROL, 0x10)
                (END, 0x11)
            );
        }
    }
    pub mod fox_fire {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DIR, 0x7)
                (INIT_ROT_DEGREE, 0x8)
                (TO_RUSH_DEGREE, 0x9)
                (REVERT_DEGREE, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (STOP_Y_FRAME, 0x5)
                (RUSH_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (AIR, 0xd)
                (DECIDE_STICK, 0xe)
                (WOLF_KICK, 0xf)
                (WOLF_ENABLE_CONTROL, 0x10)
                (END, 0x11)
            );
        }
    }
    pub mod fox_reflector {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
                (STOP_Y_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (IS_TURN, 0xd)
                (HIT_TO_RESTART, 0xe)
                (SET_ATTACK, 0xf)
                (SET_EFFECT, 0x10)
                (END, 0x11)
            );
        }
    }
    pub mod fox_landmaster {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (APPEAR_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (END, 0xd)
            );
        }
    }
    pub mod fox_win {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xc)
                (EXIST_FALCO, 0xd)
                (END, 0xe)
            );
        }
    }
    pub mod falco_blaster {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (LOOP_ACCEPT, 0xd)
                (LOOP, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod falco_illusion {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
                (STOP_Y_FRAME, 0x7)
                (WPN_COUNT, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (RUSH_FORCE_END, 0xd)
                (HIT_SHIELD, 0xe)
                (HIT_SHIELD_TO_END, 0xf)
                (AIR_CONTROL, 0x10)
                (END, 0x11)
            );
        }
    }
    pub mod falco_fire {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DIR, 0x7)
                (INIT_ROT_DEGREE, 0x8)
                (TO_RUSH_DEGREE, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (STOP_Y_FRAME, 0x5)
                (RUSH_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (AIR, 0xd)
                (DECIDE_STICK, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod falco_reflector {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
                (STOP_Y_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (INHERIT_MOTION, 0xd)
                (END, 0xe)
            );
        }
    }
    pub mod falco_landmaster {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (APPEAR_FRAME, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (END, 0xd)
            );
        }
    }
    pub mod falco_win {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xc)
                (EXIST_FALCO, 0xd)
                (END, 0xe)
            );
        }
    }
    pub mod mewtwo_special_n {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CHARGE_RATE, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (CANCEL_STATUS, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CHARGE_MAX, 0xc)
            );
        }
    }
    pub mod pitb {
        use super::*;
        pub mod status {
            use super::*;
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x4)
                    (TERM, 0x1d)
                    (HIT_NUM, 0x5)
                    (HIT_ID0, 0x6)
                    (HIT_ID1, 0x7)
                    (HIT_ID2, 0x8)
                    (HIT_ID3, 0x9)
                    (HIT_ID4, 0xa)
                    (HIT_ID5, 0xb)
                    (HIT_ID6, 0xc)
                    (HIT_GROUP0, 0xd)
                    (HIT_GROUP1, 0xe)
                    (HIT_GROUP2, 0xf)
                    (HIT_GROUP3, 0x10)
                    (HIT_GROUP4, 0x11)
                    (HIT_GROUP5, 0x12)
                    (HIT_GROUP6, 0x13)
                    (HIT_NO0, 0x14)
                    (HIT_NO1, 0x15)
                    (HIT_NO2, 0x16)
                    (HIT_NO3, 0x17)
                    (HIT_NO4, 0x18)
                    (HIT_NO5, 0x19)
                    (HIT_NO6, 0x1a)
                    (ZOOM_FRAME, 0x1b)
                    (ZOOM_NO, 0x1c)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOT_CHANGE, 0xc)
                    (SHOOT, 0xd)
                    (SEARCH_END, 0xe)
                    (HIT, 0xf)
                );
            }
        }
    }
    pub mod didiy {
        use super::*;
        pub mod status {
            use super::*;
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOTION_VALUE, 0x7)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND_2ND, 0x7)
                );
            }
        }
    }
    pub mod lucario_attack_air {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xe)
                (DEC_SPEED, 0xf)
            );
        }
    }
    pub mod lucario_special_n {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CHARGE_RATE, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (CANCEL_STATUS, 0x5)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CHARGE_MAX, 0xc)
            );
        }
    }
    pub mod lucario_power_punch {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (HAKKEI_NEAR_SCALE, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0xe)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xe)
                (REQUEST_THROW, 0xf)
                (THROW_DONE, 0x10)
                (CRITICAL_HIT, 0x11)
            );
        }
    }
    pub mod lucario_mach {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (START_CHARA_LR, 0x7)
                (RUSH_DIR_ROT_SPEED, 0xa)
                (RUSH_DIR_ROT_ACCEL, 0xb)
                (RUSH_VX, 0xc)
                (RUSH_VY, 0xd)
                (LAST_LR, 0xe)
                (GR_ANG_DELTA, 0xf)
            );
            make_work_ids!(
                Int,
                Status,
                (RUSH_FRAME, 0x5)
                (NEXT_STATUS, 0x6)
                (RUSH_END_SITUATION, 0x7)
                (RUSH_DIR_INTP_FRAME, 0x8)
                (MOTION_KIND, 0x9)
                (MOTION_KIND_AIR, 0xa)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (RUSH_DIR, 0x13)
                (RUSH_DIR_ROT, 0x14)
                (CONTINUE, 0xc)
                (GRAVITY_ONOFF, 0xd)
                (APPLY_BRAKE, 0xf)
                (STATUS_TRANS, 0x10)
                (PREV_TURN, 0x11)
                (AIR_END_CONTROL_X, 0x12)
                (END, 0x15)
            );
        }
    }
    pub mod luacrio_mach {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (PASS_XLU_YESNO, 0xe)
            );
        }
    }
    pub mod lucario_split {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (END, 0xf)
            );
        }
    }
    pub mod lucario_final {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (END, 0xe)
            );
        }
    }
    pub mod miiswordsman_sdush {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DIR, 0x7)
                (ROT_X, 0x8)
                (INIT_ROT_DEGREE, 0x9)
            );
            make_work_ids!(
                Int,
                Status,
                (STOP_Y_FRAME, 0x5)
                (RUSH_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (AIR, 0xd)
                (DECIDE_STICK, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod miigunner_rapid_shot {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (LOOP_ACCEPT, 0xd)
                (LOOP, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod miigunner_reflector {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
                (STOP_Y_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (IS_TURN, 0xd)
                (HIT_TO_RESTART, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod miienemys_sdush {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DIR, 0x7)
                (INIT_ROT_DEGREE, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (STOP_Y_FRAME, 0x5)
                (RUSH_FRAME, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (AIR, 0xd)
                (DECIDE_STICK, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod miienemyg_rapid_shot {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (LOOP_ACCEPT, 0xd)
                (LOOP, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod miienemyg_reflector {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STEP, 0x5)
                (STEP_PREV, 0x6)
                (STOP_Y_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (PRE_START, 0xb)
                (CONTINUE, 0xc)
                (IS_TURN, 0xd)
                (HIT_TO_RESTART, 0xe)
                (END, 0xf)
            );
        }
    }
    pub mod tantan_kirby {
        use super::*;
        pub mod status {
            use super::*;
            pub mod special_n {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x7)
                    (TERM, 0x8)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ATTACK_BLOCKED, 0x12)
                );
            }
        }
    }
}
pub mod item {
    use super::*;
    pub mod instance {
        use super::*;
        make_work_ids!(
            Float,
            Instance,
            (LANDING_FRAME, 0x0)
            (HP, 0x9)
            (HP_MAX, 0xa)
            (TARGET_POS_X, 0xb)
            (TARGET_POS_Y, 0xc)
            (TARGET_POS_Z, 0xd)
            (SCALE_ANIM_MIN, 0xe)
            (SCALE_ANIM_MAX, 0xf)
            (SCALE_ANIM_NOW, 0x10)
            (BASE_SCALE, 0x11)
            (INHALED_COUNT, 0x12)
            (EQUIPMENT_FRAME, 0x13)
            (POWER_UP_THROW, 0x14)
            (POWER_UP_SHOOT, 0x15)
            (POWER_UP_ASSIST, 0x16)
            (POWER_UP_POKEMON, 0x17)
            (DAMAGE_REACTION_MUL, 0x18)
            (DAMAGE_SPEED_MUL, 0x19)
            (DAMAGE_BRAKE_MUL_GROUND, 0x1a)
            (DAMAGE_BRAKE_MUL_AIR, 0x1b)
            (HIT_EFFECT_SCALE_MUL, 0x1c)
            (BULLET_MUL, 0x1d)
            (BULLET_FLOAT, 0x1e)
            (LEVEL, 0x1f)
            (STRENGTH, 0x20)
            (DOWN_DAMAGE_MUL, 0x21)
            (DAMAGE_MAX, 0x22)
            (KIILADARZ_ATTACK_MUL, 0x23)
            (AI_VALUE_2, 0x25)
            (DAMAGE_MUL, 0x26)
            (ADDITIONAL_HP_MUL, 0x27)
            (NUM, 0x33)
        );
        make_work_ids!(
            Int,
            Instance,
            (VALUE_7, 0x6)
            (VALUE_8, 0x7)
            (AI_VALUE_1, 0x3a)
            (HAVE_NODE_HASH, 0x8)
            (TRAIT_FLAG, 0x9)
            (VARIATION, 0xa)
            (LIFE_TIME, 0xb)
            (LIFE_TIME_MAX, 0xc)
            (LIFE_TIME_EDITSTAGE, 0xd)
            (LIFE_TIME_FORCE_COUNTER1, 0xe)
            (LIFE_TIME_FORCE_COUNTER2, 0xf)
            (NO_DAMAGE_FRAME, 0x10)
            (NO_PICKUP_FRAME, 0x11)
            (COUNTER, 0x12)
            (COUNTER_2, 0x13)
            (COUNTER_3, 0x14)
            (BOMB_COUNTER, 0x15)
            (BOMB_COUNTER_MAX, 0x16)
            (MESSAGE, 0x17)
            (BULLET, 0x18)
            (PUT_IN_POCKET_COUNT, 0x19)
            (NO_GROUND_DAMAGE_FRAME, 0x1a)
            (NO_GROUND_DAMAGE_FRAME_MAX, 0x1b)
            (GROUND_DAMAGE_COUNT, 0x1c)
            (SCALE_ANIM_TYPE, 0x1d)
            (SCALE_ANIM_COUNTER, 0x1e)
            (SCALE_ANIM_NODE_HASH, 0x1f)
            (SCALE_ANIM_COUNTER_LIMIT, 0x20)
            (TARGET_TASK_ID, 0x21)
            (HIT_KIND, 0x22)
            (HIT_EFFECT_KIND, 0x23)
            (SYSTEM_SEARCH_DETECT_TYPE, 0x24)
            (BOUND_FLAG, 0x25)
            (BOUND_COUNT, 0x26)
            (SE_BOUND_HASH, 0x27)
            (SE_WATER_HASH, 0x28)
            (SE_LOST_HASH, 0x29)
            (THROW_FRAME, 0x2a)
            (ATTACK_SERIAL_ID, 0x2b)
            (ATTACK_KIND, 0x2c)
            (HAVE_COUNT, 0x2d)
            (THROW_COUNT, 0x2e)
            (HIT_COUNT, 0x2f)
            (HIT_STOP_ATTACK_SUSPEND_FRAME, 0x30)
            (TRACKING_COUNTER, 0x31)
            (INK_COLOR, 0x32)
            (ATTACKER_ATTRIBUTE, 0x33)
            (FORCE_REMOVE_COUNTER, 0x34)
            (IGNORE_CAPTURE_COUNT, 0x35)
            (THROWN_MOTION_HASH, 0x36)
            (BOSS_MODE, 0x37)
            (ADVENTURE_ROUND, 0x38)
            (PARAMETER_ITEM_KIND, 0x39)
        );
        make_work_ids!(
            Flag,
            Instance,
            (VALUE_1, 0x0)
            (VALUE_2, 0x1)
            (VALUE_3, 0x2)
            (VALUE_4, 0x3)
            (VALUE_5, 0x4)
            (VALUE_6, 0x5)
            (TERM, 0x33)
            (REACTION, 0x6)
            (REFLECT_GROUND, 0x7)
            (VANISH, 0x8)
            (VIA_EXIT, 0x9)
            (TARGET_FOUND, 0xa)
            (DISABLE_JOSTLE, 0xb)
            (HAVE_STICK, 0xc)
            (WATER, 0xd)
            (EATABLE, 0xe)
            (AUTO_PLAY_BOUND_EFFECT, 0xf)
            (AUTO_PLAY_LOST_EFFECT, 0x10)
            (HAVE_POSITION_ONLY, 0x11)
            (FORCE_WHOLE_HIT_NORMAL, 0x12)
            (DISABLE_AUTO_GRAVITY_MOVE, 0x13)
            (UPDATE_POSTURE_OWNER_SCALE, 0x14)
            (TARGETABLE, 0x15)
            (TIMER_SLOW, 0x16)
            (NO_DAMAGE_FROM_KUSUDAMA, 0x17)
            (DAMAGE_FLASHING_BOSS, 0x18)
            (DMAGE_CAMERA_QUAKE, 0x19)
            (IGNORE_DELETE_BY_STAGE, 0x1a)
            (KEEP_TARGET_ON_FIGHTER_CHANGE, 0x1b)
            (MISS_TARGET_BY_CHANGING, 0x1c)
            (POKEMON_CHANGE_START, 0x1d)
            (TURN_DAMAGE, 0x1e)
            (TURN_DAMAGE_IS_NO_REACTION, 0x1f)
            (SPEED_DAMAGE, 0x20)
            (APPLY_WORLD_MOVE, 0x21)
            (APPLY_WORLD_MOVE_Y, 0x22)
            (GROUND_DAMAGE, 0x23)
            (RECEIVE_FINAL_STATUS_EVENT, 0x24)
            (RECEIVE_STAGE_TRANSITION_EVENT, 0x25)
            (AI_SOON_TO_BE_ATTACK, 0x26)
            (AI_IS_IN_EFFECT, 0x27)
            (HAVE_SILENT, 0x28)
            (JUMP_AIR_ENABLE, 0x29)
            (TAKE_OFF, 0x2a)
            (RUN_START, 0x2b)
            (IS_SMASH_DAMAGE, 0x2c)
            (ANGRY, 0x2d)
            (IMMORTAL, 0x2e)
            (BOSS_KEYOFF_BGM, 0x2f)
            (BOSS_STOP_SE, 0x30)
            (BOSS_DEAD, 0x31)
            (GROUND_LOST, 0x32)
        );
    }
    pub mod dragoonset {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CURSOR_X, 0x1)
                (CURSOR_Y, 0x2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ATTACK, 0x0)
            );
        }
    }
    pub mod hammerbros {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (BOUND, 0x0)
            );
        }
    }
    pub mod robotgyro {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CHARGE, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ROBOT_THROW, 0x0)
            );
        }
    }
    pub mod rocketbelt {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (HAVE_COUNTER, 0x12)
                (SMOKELOOP_FRONT_EFFECT_HANDLE, 0x0)
                (SMOKELOOP_REAR_EFFECT_HANDLE, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HAVE_INFINITY, 0x1)
            );
        }
    }
    pub mod screw {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (HAVE_COUNTER, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HAVE_INFINITY, 0x0)
            );
        }
    }
    pub mod superleaf {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (HAVE_COUNTER, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HAVE_INFINITY, 0x0)
            );
        }
    }
    pub mod tabemono {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EAT_SE_HASH, 0x0)
            );
        }
    }
    pub mod usagihat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (HAVE_COUNTER, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HAVE_INFINITY, 0x0)
            );
        }
    }
    pub mod st_ice_yasai {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EAT_SE_HASH, 0x0)
            );
        }
    }
    pub mod boomerang {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_POWER_FLY, 0x0)
                (ATTACK_POWER_TURN, 0x1)
            );
        }
    }
    pub mod soccerball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_POWER, 0x0)
            );
        }
    }
    pub mod grass {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (CREATE_OBJECT_ID, 0x0)
            );
        }
    }
    pub mod magicpotwind {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DIRECTION_X, 0x1)
                (DIRECTION_Y, 0x2)
                (SCALE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (VIOLENT_WIND, 0x0)
            );
        }
    }
    pub mod powblock {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_OBJECT_ID, 0x0)
            );
        }
    }
    pub mod peachdaikon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_POWER, 0x0)
            );
        }
    }
    pub mod daisydaikon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_POWER, 0x0)
            );
        }
    }
    pub mod banana {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SLIP, 0x0)
                (HAVED, 0x1)
                (DIDDY_SPECIAL_THROW, 0x2)
            );
        }
    }
    pub mod wariobike {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (CREATE_FIGHTER_ID, 0x0)
            );
        }
    }
    pub mod metalblade {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (STICK_TOUCH_ID, 0x0)
                (INIT_SPEED_REVERSE_FRAME, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_THROW, 0x0)
                (DROP, 0x1)
                (REFLECT, 0x2)
                (SPEED_REVERSE, 0x3)
            );
        }
    }
    pub mod wiifitball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SHOT_CALC_KATAMUKI, 0x1)
                (SHOT_CALC_TAKASA, 0x2)
                (INIT_WIND_SPEED_X, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_COUNT, 0x0)
                (INIT_GRAVITY_FRAME, 0x1)
                (LIFE, 0x2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ATTACK_START, 0x0)
                (INIT_THROW, 0x1)
                (START_GROUND, 0x2)
                (INIT_GRAVITY, 0x3)
            );
        }
    }
    pub mod wood {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LOG_GROUP, 0x0)
                (STATE, 0x1)
            );
        }
    }
    pub mod pacman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0x0)
                (BOUND_COUNT, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (THROW, 0x0)
                (DROP, 0x1)
                (HIT, 0x2)
                (HOP, 0x3)
                (UNABLE_PICKUP, 0x4)
            );
        }
    }
    pub mod poweresa {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DAMAGE, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (OWNER_ID, 0x0)
                (TEAM_NO, 0x1)
            );
        }
    }
    pub mod doll {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_SPEED, 0x1)
                (ROT_Z, 0x2)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FIRST_DAMAGE, 0x0)
            );
        }
    }
    pub mod log {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_SPEED, 0x1)
                (ROT_Z, 0x2)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FIRST_DAMAGE, 0x0)
            );
        }
    }
    pub mod mechakoopa {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (TEAM_ATTACK, 0x4)
                (THROW, 0x5)
            );
        }
    }
    pub mod linkarrow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_X, 0x1)
                (ROT_Y, 0x2)
                (ROT_Z, 0x3)
                (OFFSET_X, 0x4)
                (OFFSET_Y, 0x5)
                (OFFSET_Z, 0x6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CAPTURED, 0x0)
            );
        }
    }
    pub mod linkbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (IS_BLAST, 0x0)
                (HOP, 0x1)
                (IS_RIGHT, 0x2)
                (LOST, 0x3)
            );
        }
    }
    pub mod revengeshootershot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_POWER, 0x1)
                (ATTACK_SIZE, 0x2)
            );
        }
    }
    pub mod staffshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CREATE_POS_X, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE, 0x0)
            );
        }
    }
    pub mod healball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HOW_MANY_DROP_RATE, 0x2)
                (RECOVER_REMAIN, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (UN_CHEWING_TASKID, 0x0)
            );
        }
    }
    pub mod bomber {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (BORN_END, 0x4)
                (TIME_UP_SE_PLAYED, 0x2)
            );
        }
    }
    pub mod nightmare {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SCALING_STATUS, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START_BLIND, 0x0)
                (END_BLIND, 0x1)
                (END_ATTACK, 0x2)
            );
        }
    }
    pub mod driver {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (FIGHTER_LR, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (REVERSE_LR, 0x0)
                (REVERSE_FIGHTER, 0x1)
            );
        }
    }
    pub mod backshield {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROTATE_ANGLE_DEG, 0x1)
                (TARGET_ANGLE_DEG, 0x2)
                (PRE_FIGHTER_LR, 0x3)
                (NOW_FIGHTER_LR, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE_FRAME, 0x0)
                (UNABLE_POCKET, 0x1)
                (EQUIPPED, 0x2)
                (EXEC_CHASE_FIGHTER, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (DAMAGE, 0x0)
                (LIFE_INFINITY, 0x1)
                (ENABLE, 0x2)
                (EATEN, 0x3)
            );
        }
    }
    pub mod bossgalaga {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPEED_X, 0x1)
                (SPEED_Y, 0x2)
                (ROTATE_DEG, 0x3)
                (ANIM_RAD, 0x4)
                (CLATTER_FRAME, 0x5)
                (CATCH_OFFSET_X, 0x6)
                (CATCH_OFFSET_Y, 0x7)
                (CATCH_FIGHTER_SIZE, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (ANIM_FRAME, 0x0)
                (ANIM_COUNT, 0x1)
                (CUT_FRAME, 0x2)
                (EFFECT_FRAME_INDEX, 0x3)
                (EFFECT_REMAIN_FRAME, 0x4)
                (BEAM_EFFECT_HANDLE, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (DIR_LEFT, 0x0)
                (DAMAGE_COLOR, 0x1)
                (ANIM_WAIT, 0x2)
                (PULL, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DEAD_POS_X, 0x3)
                (DEAD_POS_Y, 0x4)
                (DEAD_POS_Z, 0x5)
            );
        }
    }
    pub mod assist {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ASSIST_OFFSET_X, 0x2)
            );
        }
    }
    pub mod carrierbox {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (WARPED, 0x0)
            );
        }
    }
    pub mod chickenparty {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (IS_BOSS, 0x3)
            );
        }
    }
    pub mod clubshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (NEAR_GROUND, 0x0)
            );
        }
    }
    pub mod fairybottle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (USE_FAIRY, 0x0)
                (CAN_TOUCH, 0x1)
                (IS_BOSS, 0x2)
            );
        }
    }
    pub mod firebar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0x0)
            );
        }
    }
    pub mod killereye {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (IS_FLASHING_END, 0x4)
            );
        }
    }
    pub mod younglinkbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (LOST, 0x3)
            );
        }
    }
    pub mod pacmanbell {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (THROW_FRAME, 0x2)
                (TOP_DEAD_CENTRE, 0x3)
            );
        }
    }
    pub mod pacmanboss {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_ANGLE, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (STATE, 0x2)
                (THROW_FRAME, 0x3)
                (ROT_FRAME, 0x4)
            );
        }
    }
    pub mod pasaran {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POWER, 0x2)
                (SCALE, 0x3)
                (ATK_SIZE, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (HIT_STOP_CNT, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_BOSS, 0x0)
            );
        }
    }
    pub mod sandbag {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (PREDICT_LANDING_POS_X, 0x1)
                (PREDICT_STOP_POS_X, 0x2)
            );
            make_work_ids!(
                Int,
                Instance,
                (FINISH_LEVEL, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (NO_POCKET, 0x0)
                (NO_LANDING_SMOKE, 0x1)
                (IS_AVAILABLE_TO_BREAK_VARRIER, 0x2)
            );
        }
    }
    pub mod unira {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (UP_FLAG, 0x0)
                (DIRECT_ATTACK_FLAG, 0x1)
                (IS_BOSS, 0x2)
            );
        }
    }
    pub mod elekashot3 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (PARENT_TARGET_ID, 0x0)
            );
        }
    }
    pub mod ghirahim {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (CHANGE_ATTACK, 0x0)
            );
        }
    }
    pub mod jeff {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROCKET_ROTATE, 0x1)
            );
        }
    }
    pub mod kawashimashot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (VALUE, 0x0)
            );
        }
    }
    pub mod lin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (ENABLE_COUNTER, 0x0)
            );
        }
    }
    pub mod skullkid {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (FLIP_SCREEN, 0x0)
            );
        }
    }
    pub mod takamaru {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_SHOT, 0x0)
            );
        }
    }
    pub mod wright {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_BUILDING, 0x0)
            );
        }
    }
    pub mod eievui {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (CURRENT_FRAME, 0x0)
            );
        }
    }
    pub mod zoroark {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (THROWUP_LR, 0x1)
                (FINAL_X, 0x2)
                (FINAL_Y, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TARGET_STATE, 0x0)
                (FURYSWIPES_COUNT, 0x1)
                (TASK_ID, 0x4)
                (CUR_ACTION, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (THROW_UP_GRAVITY_START, 0x0)
                (IS_LOST_TARGET, 0x2)
                (IS_ATTACK, 0x3)
            );
        }
    }
    pub mod starring {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
            );
        }
    }
    pub mod magicball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (THROW_UPDOWN, 0x0)
                (SOUND_THROW_FIRE, 0x1)
            );
        }
    }
    pub mod robin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
            );
        }
    }
    pub mod guile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (TURN_RIGHT, 0x0)
                (VISIBLE_KUSI, 0x1)
            );
        }
    }
    pub mod krystal {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (IS_SHOOT, 0x0)
                (IS_FIRST_LANDING, 0x1)
            );
        }
    }
    pub mod moon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SHOCKWAVE_EFFECT_HANDLE, 0x0)
                (DEBRIS_RISE_EFFECT_HADNLE, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHOCKWAVE_EFFECT_REMOVE, 0x0)
                (DEBRIS_RISE_EFFECT_REMOVE, 0x1)
            );
        }
    }
    pub mod zero {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (IS_TRANS_MOVE, 0x0)
                (CAN_LANDING, 0x1)
                (SHOT_START, 0x2)
            );
        }
    }
    pub mod metamon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (EFFECT_SCALE, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FIGHTER_ON, 0x0)
            );
        }
    }
    pub mod alucard {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_CONSECUTIVE_LOOP_NUM, 0x0)
                (ATTACK_CONSECUTIVE_EFFECT_HANDLE, 0x2)
                (ATTACK_MIST_LOOP_EFFECT_HANDLE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_ANIMCMD_PARTIAL_ATTACK_CONSECUTIVE_END, 0x0)
                (IS_ANIMCMD_PARTIAL_ATTACK_CONSECUTIVE_FINISH_END, 0x1)
                (IS_DIVE_KICK_ENERGY_START, 0x2)
                (IS_TRANSFORM_END_READY, 0x2)
                (IS_VALMECEU_DIR_CHANGE, 0x3)
                (IS_CHANGE_FORM, 0x4)
                (TURN_MOVE_ENERGY_APPLICATE, 0x5)
                (ATTACK_MOVE_ENERGY_APPLICATE, 0x0)
            );
        }
    }
    pub mod akira {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (PAA, 0x0)
            );
        }
    }
    pub mod darkknight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (IS_SLASHDOWN_CANCEL_FRAME, 0x0)
                (IS_SLASHUP_CANCEL_FRAME, 0x1)
            );
        }
    }
    pub mod hebigarasu {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (NO_DAMAGE_STUN, 0x0)
                (NO_DEAD, 0x1)
                (ASSIST_BEAT_REQUEST, 0x2)
                (LOST, 0x3)
            );
        }
    }
    pub mod kawasaki {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
                (SWING_SLOPE, 0x1)
                (SLOPE_SLANT, 0x2)
                (SWING_CANCEL, 0x0)
                (COOK_MOVE, 0x0)
                (SPAWN_PRESENT, 0x0)
            );
        }
    }
    pub mod lioleus {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
                (START_ENERGY, 0x0)
                (START_BRAKE, 0x1)
                (INITIALIZE_CHECK_GROUND, 0x0)
                (INITIALIZE_ATTACH_GROUND, 0x1)
                (CHANGE_MODE_GROUND_ATTACH, 0x0)
                (TAIL_CUT_CREATE_ITEM, 0x0)
            );
        }
    }
    pub mod shovelknight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (DIG_GROUND_OBJECT_CREATE, 0x0)
                (TURN_VISIBILITY_CHANGE, 0x1)
            );
        }
    }
    pub mod nasya {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (RIGHT_COL_IDX, 0x0)
                (LEFT_COL_IDX, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START_UPDATE_COLLISION, 0x0)
            );
        }
    }
    pub mod mimikkyu {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (TARGET_ID, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CAPTURED_FIGHTER_SCALE_BEGIN, 0x0)
                (COMPLETE_CAPTURE, 0x1)
                (CATCH_CUT, 0x0)
            );
        }
    }
    pub mod solgaleo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (EFFECT_HANDLE_FIRE, 0x0)
                (EFFECT_HANDLE_FIRE2, 0x1)
                (TAKE_OFF, 0x2)
            );
        }
    }
    pub mod lunala {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (ROT_START, 0x0)
            );
        }
    }
    pub mod namakobushi {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (COUNTER_TREAD_UNABLE, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_ATTACK_CANCEL, 0x0)
            );
        }
    }
    pub mod kasey {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (APPEAR_FIGHTER, 0x0)
                (CATCHED_FIGHTER, 0x1)
            );
        }
    }
    pub mod marshadow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (ATTACK_LANDING, 0x0)
                (ATTACK_MOVE, 0x1)
                (SLOPE_SLANT, 0x2)
            );
        }
    }
    pub mod masterhand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HIPPATAKU_GA_HEIGHT, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (YUBIBEAM_EFFECT_1, 0x0)
                (YUBIBEAM_EFFECT_2, 0x1)
                (YUBIBEAM_EFFECT_3, 0x2)
                (YUBIBEAM_EFFECT_4, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (YUBIDEPPOU, 0x0)
                (YUBIBEAM_BEAMSTART, 0x0)
                (CATCH_HOMING_END, 0x0)
                (THROW, 0x0)
                (RELEASE, 0x0)
                (IRON_BALL_CREATE, 0x0)
                (IRON_BALL_THROW, 0x1)
                (PAINT_BALL_CREATE, 0x0)
                (PAINT_BALL_THROW, 0x1)
                (CHAKRAM_CREATE, 0x0)
                (CHAKRAM_THROW, 0x1)
                (WYUBIBEAM_START, 0x0)
                (WYUBIBEAM_SE_STOP, 0x1)
            );
        }
    }
    pub mod crazyhand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HIPPATAKU_GA_HEIGHT, 0x1)
                (FIRE_CHARIOT_RADIUS, 0x1)
                (FIRE_CHARIOT_ROTATE, 0x2)
                (FIRE_CHARIOT_SPEED, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (YUBIBEAM_EFFECT_1, 0x0)
                (YUBIBEAM_EFFECT_2, 0x1)
                (YUBIBEAM_EFFECT_3, 0x2)
                (YUBIBEAM_EFFECT_4, 0x3)
                (FIRE_CHARIOT_MODE, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (YUBIBEAM_BEAMSTART, 0x0)
                (NIGIRU_HOMING_END, 0x0)
                (CATCH_HOMING_END, 0x0)
                (THROW, 0x0)
                (RELEASE, 0x0)
                (BOMB_INDEX, 0x0)
                (BOMB_MIDDLE, 0x1)
                (BOMB_RING, 0x2)
                (BOMB_PINKY, 0x3)
                (BOMB_CHASE, 0x4)
                (NOTAUTSU_CHASE, 0x0)
                (NOTAUTSU_JOSTLE_OFF, 0x1)
                (NOTAUTSU_JOSTLE_ON, 0x2)
                (FIRE_CHARIOT_INDEX, 0x0)
                (FIRE_CHARIOT_RELEASE, 0x0)
                (FIRE_CHARIOT_MIDDLE, 0x1)
                (FIRE_CHARIOT_RING, 0x2)
                (FIRE_CHARIOT_PINKY, 0x3)
                (FIRE_CHARIOT_THUMB, 0x4)
                (FIRE_CHARIOT_END_PURGE, 0x0)
                (GROW_FINGER_HOMING_END, 0x0)
                (SHOCK_WAVE_CREATE, 0x0)
                (SCRATCH_JOSTLE_OFF, 0x0)
                (SCRATCH_JOSTLE_ON, 0x1)
                (FINDER_SHIRINK_START, 0x0)
                (WYUBIBEAM_START, 0x0)
            );
        }
    }
    pub mod rodin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_ARM_RIGHT, 0x0)
                (SPAWN_ARM_LEFT, 0x1)
                (SPAWN_ARM_STRAIGHT, 0x2)
                (SPAWN_ARM_UPPER, 0x3)
                (HEEL_DROP_START, 0x0)
                (LANDING_CHECK_ENABLE, 0x1)
                (WALL_CHECK_ENABLE, 0x2)
                (ITEM_CREATE, 0x0)
                (ITEM_THROW, 0x1)
            );
        }
    }
    pub mod knuckles {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (CHANGE_SPHERE, 0x0)
                (EXIT_FLIP_OFF, 0x0)
            );
        }
    }
    pub mod kozukata {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_SIGHT, 0x0)
                (START_CAMERA, 0x1)
                (VISIBLE_SIGHT, 0x2)
            );
        }
    }
    pub mod kozukatasight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_GHOST, 0x0)
                (SHUTTER_END, 0x1)
                (EXIT_FINDER, 0x0)
                (DEL_CURSOR, 0x1)
                (EXIT_KOZUKATA, 0x2)
                (END_SOUND_EFFECT, 0x3)
                (LOST, 0x4)
            );
        }
    }
    pub mod sukapon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (DOWN_BOUND_COUNT, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
                (THROW, 0x1)
            );
        }
    }
    pub mod craptrap {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (BITE_RELEASE, 0x0)
            );
        }
    }
    pub mod bombermanbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (DESTROYED, 0x0)
                (DANGER, 0x1)
            );
        }
    }
    pub mod bomberman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (REMOCON_TRIGGER, 0x0)
                (BOMBCREATE, 0x3)
                (BOMBPUT, 0x4)
            );
        }
    }
    pub mod springman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (NO_REACTION, 0x0)
                (SHOOT, 0x1)
            );
        }
    }
    pub mod ganonboss {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (DOWN_EFFECT_HANDLE_1, 0x0)
                (DOWN_EFFECT_HANDLE_2, 0x1)
                (DOWN_EFFECT_HANDLE_3, 0x2)
                (DOWN_EFFECT_HANDLE_4, 0x3)
                (DOWN_EFFECT_HANDLE_5, 0x4)
                (DOWN_EFFECT_HANDLE_6, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (WAIT_END, 0x0)
                (IS_TOUCH, 0x1)
                (HOMING_BOMB_SHOOT, 0x2)
                (VANISH_MODEL, 0x0)
            );
        }
    }
    pub mod galleom {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (MISSILE, 0x0)
                (SHOCKWAVE, 0x0)
                (CATCH, 0x0)
                (THROW, 0x0)
                (DISABLE_CLATTER, 0x1)
                (CHANGE_FORM, 0x2)
                (TANK_DEAD, 0x3)
            );
        }
    }
    pub mod ganonbossshot2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (VALUE_BOMB_SCALE, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (VALUE_BOMB_END, 0x0)
            );
        }
    }
    pub mod baitocrane {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (GRAB, 0x0)
            );
        }
    }
    pub mod dracula {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
                (UNVISIBLE, 0x0)
            );
        }
    }
    pub mod dracula2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_SHOT, 0x0)
                (VANISH_MODEL, 0x0)
            );
        }
    }
    pub mod marx {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (THICK_LASER_GA_HEIGHT, 0x1)
                (THICK_LASER_MOVE_LR, 0x2)
            );
            make_work_ids!(
                Int,
                Instance,
                (BLACK_HOLE_EFFECT, 0x0)
                (THICK_LASER_EFFECT, 0x0)
                (THICK_LASER_SIGN_WAIT_FRAME, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (PLANT_EXTINCTION_START, 0x0)
                (ICE_BOMB_SHOOT, 0x0)
                (BLACK_HOLE_VANISH, 0x0)
                (FOUR_CUTTER, 0x0)
                (FOLLOW_EYE_CREATE, 0x0)
                (FLY_OUT_HIT_ENABLE, 0x0)
                (THICK_LASER_START, 0x0)
                (THICK_LASER_END, 0x1)
                (IS_CAMERANGE_INSIDE_TELEPORT_READY, 0x5)
                (ENTRY_STOP, 0x0)
                (ENTRY_FIGHTER_VISIBLE, 0x1)
                (FLIP_RESET, 0x0)
            );
        }
    }
    pub mod lioleusboss {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (DEAD_KIND, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x0)
                (RESTART, 0x1)
                (START_ENERGY, 0x0)
                (START_BRAKE, 0x1)
                (MOVING_ON_Z_AXIS, 0x2)
                (STOP_HOLE_EFFECT, 0x0)
                (TAIL_CUT_CREATE_ITEM, 0x0)
                (LANDING, 0x1)
            );
        }
    }
    pub mod masterhandpaintball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (R, 0x1)
                (G, 0x2)
                (B, 0x3)
            );
        }
    }
    pub mod draculapillar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (MAIN_EFFECT_SCALE, 0x1)
                (FLOOR_EFFECT_SCALE, 0x2)
            );
            make_work_ids!(
                Int,
                Instance,
                (MAIN_EFFECT_HANDLE, 0x0)
                (FLOOR_EFFECT_HANDLE, 0x1)
            );
        }
    }
    pub mod masterhandsatelliteshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (POS_IDX, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SATELLITE_BEAM_MOVE_DONE, 0x0)
                (SATELLITE_BEAM_END, 0x1)
            );
        }
    }
    pub mod crazyhandsearchlight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_GROUND, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CHASE_END, 0x0)
                (ATTACK_END, 0x1)
            );
        }
    }
    pub mod crazyhandgravityball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (THROW, 0x0)
                (LOST, 0x1)
            );
        }
    }
    pub mod wilycapsule {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SHOT_START, 0x0)
                (RUSH_MOVE_START, 0x1)
                (RUSH_BRAKE_START, 0x2)
            );
        }
    }
    pub mod vince {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EASEL_EFFECT_HANDLE, 0x0)
                (EASEL_EFFECT_KIND, 0x1)
            );
        }
    }
    pub mod tiki {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (TRANSFORM_EFFECT_HANDLE, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT_ENABLE, 0x0)
                (BREATH_READY, 0x0)
                (SPREAD_STOP, 0x1)
                (NECK_RETURN_START, 0x2)
                (BREATH_EMBERS_START_EFFECT, 0x3)
            );
        }
    }
    pub mod nikki {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SCREEN_POS_X, 0x1)
                (SCREEN_POS_Y, 0x2)
                (OFFSET_Z, 0x3)
                (ROT_Y, 0x4)
                (NEAR_CLIP_OFFSET, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CAMERA_FRONT, 0x0)
            );
        }
    }
    pub mod flyandhandfly {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TARGET_LENGTH, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (CREATE_TIME, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (DEAD, 0x0)
                (LOST, 0x1)
            );
        }
    }
    pub mod springmanshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (PARENT_TARGET_ID, 0x0)
            );
        }
    }
    pub mod snakecbox {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (FOR_RESULT, 0x0)
            );
        }
    }
    pub mod marxcutter {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (LEFT_ROTATION, 0x0)
            );
        }
    }
    pub mod marxplantseed {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (UNABLE_DISP, 0x0)
            );
        }
    }
    pub mod marxplantbody {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (WITHER_FRAME, 0x0)
            );
        }
    }
    pub mod marxchaseeye {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (INIT_VISIBLE, 0x0)
            );
        }
    }
    pub mod marxeyelaser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LASER_EFFECT_1, 0x0)
                (LASER_EFFECT_2, 0x1)
                (LASER_EFFECT_3, 0x2)
                (LASER_EFFECT_4, 0x3)
                (LASER_EFFECT_5, 0x4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (VISIBILITY_ON, 0x0)
                (VISIBILITY_OFF, 0x0)
            );
        }
    }
    pub mod kiila {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_AURA, 0x0)
                (EFFECT_AURA_ANGER, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CROSS_BOMB_START, 0x0)
                (EXPLODE_SHOT_CREATE, 0x0)
                (ENERGY_SHOT_SHOOT, 0x0)
                (STATIC_MISSILE_CORE_HIT_CHANGE, 0x0)
                (DOWN_LANDING, 0x0)
                (ZOOM_IN, 0x0)
                (ZOOM_OUT, 0x1)
                (ZOOM_END, 0x2)
                (SHOW_STAGE_FLOATING_PLATES, 0x0)
                (DEAD_HIDE_HUD, 0x0)
                (STOP_STAGE_SOUND, 0x1)
                (STOP_INGAME_SE, 0x2)
            );
        }
    }
    pub mod darz {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (SPAWN_SHOT, 0x0)
                (HOMING_END, 0x1)
                (START_BRAKE, 0x2)
                (DOWN_FALL, 0x0)
                (DOWN_LANDING, 0x1)
                (ZOOM_IN, 0x0)
                (ZOOM_OUT, 0x1)
                (ZOOM_END, 0x2)
                (SHOW_STAGE_FLOATING_PLATES, 0x0)
                (DEAD_HIDE_HUD, 0x0)
                (STOP_STAGE_SOUND, 0x1)
                (STOP_INGAME_SE, 0x2)
            );
        }
    }
    pub mod nikkiillust1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_COUNT, 0x0)
            );
        }
    }
    pub mod nikkiillust6 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TARGET_OFFSET, 0x1)
            );
        }
    }
    pub mod kiilabomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (DELAY, 0x0)
            );
        }
    }
    pub mod darzbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (DELAY, 0x0)
            );
        }
    }
    pub mod kiilacrushwing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (ATTACK_END, 0x0)
            );
        }
    }
    pub mod kiilalaser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (X1, 0x1)
                (Y1, 0x2)
                (X2, 0x3)
                (Y2, 0x4)
            );
        }
    }
    pub mod kiilaexplodeshot2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (WAIT_FRAME, 0x0)
                (SE_NO, 0x1)
            );
        }
    }
    pub mod playable_masterhand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HIPPATAKU_GA_HEIGHT, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (YUBIBEAM_EFFECT_1, 0x0)
                (YUBIBEAM_EFFECT_2, 0x1)
                (YUBIBEAM_EFFECT_3, 0x2)
                (YUBIBEAM_EFFECT_4, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (YUBIDEPPOU, 0x0)
                (YUBIBEAM_BEAMSTART, 0x0)
                (YUBIBEAM_MOVE_ENABLE, 0x1)
                (IRON_BALL_CREATE, 0x0)
                (IRON_BALL_THROW, 0x1)
                (CHAKRAM_CREATE, 0x0)
                (CHAKRAM_THROW, 0x1)
                (WYUBIBEAM_START, 0x0)
            );
        }
    }
    pub mod tikishot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (ATTACK_END, 0x0)
            );
        }
    }
    pub mod kiiladarz {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (KIILA_VANISH, 0x0)
                (DARZ_VANISH, 0x1)
                (KIILA_DOWN_CHASE_ENABLE, 0x2)
                (DARZ_DOWN_CHASE_ENABLE, 0x3)
            );
        }
    }
    pub mod kiilatorrent {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (PARAMETER_IDX, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_DUET, 0x0)
            );
        }
    }
    pub mod darzpillar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (MAIN_EFFECT_SCALE, 0x1)
                (FLOOR_EFFECT_SCALE, 0x2)
            );
            make_work_ids!(
                Int,
                Instance,
                (MAIN_EFFECT_HANDLE, 0x0)
                (FLOOR_EFFECT_HANDLE, 0x1)
            );
        }
    }
    pub mod darzcentipede {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POS_X, 0x1)
                (POS_Y, 0x2)
                (ROT_Z, 0x3)
            );
        }
    }
    pub mod darzspacerush {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ENTRANCE_EFFECT_HANDLE, 0x0)
                (EXIT_EFFECT_HANDLE, 0x1)
                (PARAM_HASH, 0x2)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SE_OPEN_IN, 0x0)
                (SE_OPEN_OUT, 0x1)
            );
        }
    }
    pub mod darzpierce {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (ATTACKED, 0x0)
                (ODD, 0x1)
            );
        }
    }
    pub mod buddybomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (SPECIAL_LW_BOUND_KIND, 0x0)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SPECIAL_LW, 0x0)
            );
        }
    }
    pub mod pickelobject {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (COLLSION_LD_X, 0x1)
                (COLLSION_LD_Y, 0x2)
                (COLLSION_LU_X, 0x3)
                (COLLSION_LU_Y, 0x4)
                (COLLSION_RD_X, 0x5)
                (COLLSION_RD_Y, 0x6)
                (COLLSION_RU_X, 0x7)
                (COLLSION_RU_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLLSION_HANDLE, 0x0)
                (MATERIAL_KIND, 0x1)
                (BROKE_OBJECT_ID, 0x2)
                (GENERATE_OWNER_ID, 0x3)
                (WALL_LEFT_OBJECT_ID, 0x4)
                (WALL_LEFT_PRESS_FRAME, 0x5)
                (WALL_RIGHT_OBJECT_ID, 0x6)
                (WALL_RIGHT_PRESS_FRAME, 0x7)
            );
            make_work_ids!(
                Flag,
                Instance,
                (COLLISION_ENABLED, 0x0)
                (COLLISION_UPDATED, 0x1)
                (COLLISION_UPDATE_AS_MOVE, 0x2)
                (DONE_REPLACE_HP, 0x3)
                (HEADING, 0x4)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (FIGHTER_HEADING_JOSTLE_DOWN_GROUND_POS_X, 0x0)
                (FIGHTER_HEADING_JOSTLE_DOWN_GROUND_POS_Y, 0x1)
                (HP_DAMAGE_FOR_AI, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (STATUS_FRAME, 0x1)
                (HEADING_FRAME, 0x2)
                (FIGHTER_LANDING_FRAME, 0x3)
                (FIGHTER_LANDING_OBJECT_ID, 0x4)
                (FIGHTER_LANDING_PRESS_FRAME, 0x5)
                (FIGHTER_HEADING_OBJECT_ID, 0x6)
                (FIGHTER_HEADING_PRESS_FRAME, 0x7)
                (FIGHTER_HEADING_LONG_FRAME, 0x8)
                (SIDE_LR_EFFECT_HANDLE, 0x9)
                (SIDE_UD_EFFECT_HANDLE, 0xa)
                (SIDE_LR_MISS_EFFECT_HANDLE, 0xb)
                (SIDE_UD_MISS_EFFECT_HANDLE, 0xc)
            );
        }
    }
    pub mod pickelbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (LIFE, 0x1)
            );
            make_work_ids!(
                Int,
                Instance,
                (OBJECT_ID, 0x0)
                (SE_HANDLE, 0x1)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FIRE, 0x0)
                (FLASH, 0x1)
            );
        }
    }
    pub mod status {
        use super::*;
        make_work_ids!(
            Float,
            Status,
            (FLOAT_0, 0x0)
            (FLOAT_1, 0x1)
            (FLOAT_2, 0x2)
            (FLOAT_3, 0x3)
            (FLOAT_4, 0x4)
            (FLOAT_5, 0x5)
        );
        make_work_ids!(
            Int,
            Status,
            (INT_6, 0x6)
            (INT_7, 0x7)
            (INT_8, 0x8)
            (INT_9, 0x9)
            (INT_10, 0xa)
            (INT_11, 0xb)
            (INT_12, 0xc)
            (NO_RHOMBUS_UPDATE_COUNT, 0xd)
        );
        make_work_ids!(
            Flag,
            Status,
            (TERM, 0x9)
            (USE_SPEED_POWER, 0x0)
            (DAMAGE, 0x1)
            (DEAD, 0x2)
            (HIT, 0x3)
            (NEAR_TARGET, 0x4)
            (FOUND, 0x5)
            (LOT_CREATE_BOMB, 0x6)
            (MOVE, 0x7)
            (DOLLY_SUPER_SPECIAL2_PRE_START, 0x7)
            (DOLLY_SUPER_SPECIAL2_CAPTURE_START_FRAME, 0x8)
            (CLUNG_PRE_START, 0x7)
            (CLUNG_START_FRAME, 0x8)
        );
    }
}
pub mod enemy {
    use super::*;
    pub mod instance {
        use super::*;
        make_work_ids!(
            Float,
            Instance,
            (FLOAT_19, 0x13)
            (FLOAT_20, 0x14)
            (FLOAT_21, 0x15)
            (FLOAT_22, 0x16)
            (FLOAT_23, 0x17)
            (FLOAT_24, 0x18)
            (FLOAT_25, 0x19)
            (FLOAT_26, 0x1a)
            (FLOAT_27, 0x1b)
            (FLOAT_28, 0x1c)
            (FLOAT_29, 0x1d)
            (FLOAT_30, 0x1e)
            (FLOAT_31, 0x1f)
            (FLOAT_32, 0x20)
            (FLOAT_33, 0x21)
            (FLOAT_34, 0x22)
            (FLOAT_35, 0x23)
            (FLOAT_36, 0x24)
            (FLOAT_37, 0x25)
            (FLOAT_38, 0x26)
            (FLOAT_39, 0x27)
            (FLOAT_40, 0x28)
            (FLOAT_41, 0x29)
            (FLOAT_42, 0x2a)
            (NUM, 0x13)
        );
        make_work_ids!(
            Int,
            Instance,
            (INT_0, 0x0)
            (INT_1, 0x1)
            (INT_2, 0x2)
            (INT_3, 0x3)
            (INT_4, 0x4)
            (INT_5, 0x5)
            (INT_6, 0x6)
            (INT_7, 0x7)
            (INT_8, 0x8)
            (INT_9, 0x9)
            (INT_10, 0xa)
            (INT_11, 0xb)
            (INT_12, 0xc)
            (INT_13, 0xd)
            (INT_14, 0xe)
            (INT_15, 0xf)
            (INT_16, 0x10)
            (INT_17, 0x11)
            (INT_18, 0x12)
            (TERM, 0x13)
        );
    }
    pub mod var {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (TERM, 0x13)
            );
        }
    }
}
pub mod weapon {
    use super::*;
    pub mod instance {
        use super::*;
        make_work_ids!(
            Float,
            Instance,
            (NUM, 0x6)
            (ACTIVE_GLOBAL_FRAME, 0x0)
            (TEAM_OWNER_ATTACK_MUL, 0x1)
            (TEAM_OWNER_ATTACK_REACTION_MUL, 0x2)
        );
        make_work_ids!(
            Int,
            Instance,
            (LINK_OWNER, 0x0)
            (ACTIVATE_FOUNDER_ID, 0x1)
            (ATTACK_SERIAL_ID, 0x2)
            (ATTACK_KIND, 0x3)
            (INIT_LIFE, 0x4)
            (LIFE, 0x5)
            (CUSTOMIZE_NO, 0x6)
            (WARP_AREA_CONTACT_COUNT, 0x7)
            (HIT_STOP_ATTACK_SUSPEND_FRAME, 0x8)
            (PARRY_OWNER_ID, 0x9)
        );
        make_work_ids!(
            Flag,
            Instance,
            (TERM, 0x6)
            (NO_DEAD, 0x0)
            (NO_DETACH_INSTANCE, 0x1)
            (TASK_PRIORITY_CHANGE, 0x2)
            (WARP_AREA_CHECK, 0x3)
            (SWALLOWED, 0x4)
            (SOUND_MUTE, 0x5)
        );
    }
    pub mod lasso {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (NUM, 0x8)
                (NODE_LENGTH, 0x3)
                (REACH_ANGLE, 0x4)
                (STRECH_LENGTH, 0x5)
                (STRECH_LENGTH_INIT, 0x6)
                (CLIFF_OFFSET_X, 0x7)
                (CLIFF_OFFSET_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (NODE_NUM, 0xa)
                (HANG_FRAME, 0xb)
                (PARAM_ID, 0xc)
                (STRECH_HAVE_INDEX, 0xd)
                (STRECH_ACTIVE_INDEX, 0xe)
                (STRECH_REACH_MOTION_KIND, 0xf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xd)
                (IGNORE_END_JOINT_COLLISION_SIZE, 0x6)
                (FRAME_SYNC_ANIMCMD, 0x7)
                (STRECH, 0x8)
                (HANG_IMMIDIATE, 0x9)
                (STRECH_NEW, 0xa)
                (CLIFF_OFFSET, 0xb)
                (CLIFF_SET, 0xc)
            );
        }
        pub mod status {
            use super::*;
            pub mod wait {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x0)
                );
            }
            pub mod shoot {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (END_FRAME, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_NODE_ID, 0x0)
                    (END_NODE_ID, 0x1)
                    (COUNT, 0x2)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x3)
                    (SHOOT_FULL, 0x0)
                    (SHOOT_GROUND, 0x1)
                    (HIT, 0x2)
                );
            }
            pub mod reach {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (REACH_LENGTH_MIN, 0x0)
                    (REACH_LENGTH_MAX, 0x1)
                    (CLIFF_POS_X, 0x2)
                    (CLIFF_POS_Y, 0x3)
                    (CLIFF_POS_Z, 0x4)
                    (PREV_POS_X, 0x5)
                    (PREV_POS_Y, 0x6)
                    (CLIFF_TO_BASE_LENGTH, 0x7)
                    (SCALE, 0x8)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_NODE_ID, 0x0)
                    (END_NODE_ID, 0x1)
                    (HANG_STATUS, 0x2)
                    (FAILURE_STATUS, 0x3)
                    (REWIND_FRAME, 0x4)
                    (REWIND_START_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x3)
                    (FALL, 0x0)
                    (BEGIN, 0x1)
                    (HIT_CLIFF, 0x2)
                );
            }
            pub mod hang {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (LENGTH_MIN, 0x0)
                    (LENGTH, 0x1)
                    (TENSION, 0x2)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_NODE_ID, 0x0)
                    (END_NODE_ID, 0x1)
                    (STRECH_FRAME, 0x2)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x4)
                    (TURN_TIP_CLIFF, 0x0)
                    (MAIN, 0x1)
                    (BOUND, 0x2)
                    (STRECH, 0x3)
                );
            }
            pub mod hang_rewind {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (STRECH_BACK_SPEED, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (START_NODE_ID, 0x0)
                    (END_NODE_ID, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x3)
                    (TURN_TIP_CLIFF, 0x0)
                    (WAIT, 0x1)
                    (END_HIDE, 0x2)
                );
            }
            pub mod rewind {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (STRECH_BACK_SPEED, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WAIT_MOTION, 0x0)
                    (SPEED, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x3)
                    (END, 0x0)
                    (END_HIDE, 0x2)
                );
            }
            pub mod pull {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (LENGTH_MAX, 0x0)
                    (FRAME_MAX, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PULL_MOTION, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x0)
                );
            }
        }
    }
    pub mod pierce {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (NUM, 0x8)
                (GROUND_JOSTLE_DISTANCE, 0x3)
                (GROUND_JOSTLE, 0x4)
                (GROUND_LINE_PREV_POS_X, 0x5)
                (GROUND_LINE_PREV_POS_Y, 0x6)
                (ATTACH_PREV_POS_X, 0x7)
                (ATTACH_PREV_POS_Y, 0x8)
                (ATTACH_PREV_HIT_POS_X, 0x9)
                (ATTACH_PREV_HIT_POS_Y, 0xa)
                (GROUND_LINE_POS_RATIO, 0xb)
            );
            make_work_ids!(
                Int,
                Instance,
                (TARGET_COLLISION_BUFFER_ID, 0xa)
                (TARGET_NUM, 0xb)
                (TARGET_OBJECT_ID, 0xc)
                (TARGET_OBJECT_ID_TAIL, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xd)
                (PIERCE_GROUND_SUCCESS, 0x6)
                (PRESS_GROUND, 0x7)
                (PIERCE_GROUND, 0x8)
                (PIERCE_GROUND_DONE, 0x9)
                (LINE_LR, 0xa)
                (IS_NO_MOVE_COLLISION, 0xb)
                (PIERCE_IS_WALL, 0xc)
            );
        }
    }
    pub mod mario_cappy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod mario_dokan {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod mario_fireball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (BOUND_ROT_RAD, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_COUNT, 0xa)
            );
        }
    }
    pub mod mario_huge_flame {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (EFFECT_POS1_X, 0x3)
                (EFFECT_POS1_Y, 0x4)
                (EFFECT_POS2_X, 0x5)
                (EFFECT_POS2_Y, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
        }
    }
    pub mod mario_pump {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (CHARGE, 0x3)
                (POWERUP, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (WATER_RES_ID, 0xa)
                (WATER_SHOOT_NUM, 0xb)
                (WATER_SPAN_FRAME, 0xc)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod mario_pump_water {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (CLASH_GROUND, 0x6)
                (TERM, 0x7)
            );
        }
    }
    pub mod donkey_dkbarrel {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod link_ancientbow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod link_ancientbowarrow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DIST, 0x3)
                (STICK_ROT_X, 0x4)
                (STICK_ROT_Y, 0x5)
                (STICK_ROT_Z, 0x6)
                (HIT_FIGHTER_DIST, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARENT_OBJECT_ID, 0xa)
                (HIT_OBJECT_ID, 0xb)
                (HIT_NO, 0xc)
                (STICK_LIFE, 0xd)
                (EXPLOSION_HIT_NUM, 0xe)
                (EXPLOSION_HIT_OBJECT_ID_TOP, 0xf)
                (EXPLOSION_HIT_OBJECT_ID_END, 0x1f)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xc)
                (ABS_ATTACK_HIT, 0x6)
                (EXPLOSION, 0x7)
                (REQUEST_SLOW, 0x8)
                (REQUESTED_SLOW, 0x9)
                (WALL_HIT, 0xa)
                (INVINCIBLE_HIT, 0xb)
            );
        }
    }
    pub mod link_boomerang {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (NUM, 0x6)
                (SPEED, 0x3)
                (ANGLE, 0x4)
                (TURN_DIST, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xd)
                (APPLY_FLY_SPEED, 0x6)
                (REFLECT, 0x7)
                (REMOVE_SELF, 0x8)
                (INFLICTION, 0x9)
                (FLICK, 0xa)
                (TO_HOP, 0xb)
                (SWALLOWED_REVERSE_KINETIC, 0xc)
            );
        }
        pub mod status {
            use super::*;
            pub mod turn {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROT_SPEED, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FOLLOW_FRAME, 0x0)
                    (BACK_ROT_FRAME, 0x1)
                    (LINK_EVENT_RESULT_02, 0x3)
                    (LINK_EVENT_RESULT_03, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (LINK_EVENT_RESULT_01, 0x0)
                );
            }
        }
    }
    pub mod link_bowarrow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (NUM, 0x9)
                (CHARGE, 0x3)
                (SHOT_ANGLE, 0x4)
                (STICK_ANGLE_RAND, 0x5)
                (STICK_X, 0x6)
                (STICK_Y, 0x7)
                (STICK_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (SHOOT_NUM, 0xa)
                (HIT_OBJECT_ID, 0xb)
                (HIT_NO, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (DOUBLE, 0x6)
                (STICK_HEAD, 0x7)
            );
        }
        pub mod status {
            use super::*;
            pub mod fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROTATE_Z, 0x0)
                    (ROTATE_SPEED, 0x1)
                    (TERM, 0x2)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_POWER, 0x0)
                );
            }
            pub mod turn {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (STAY_COUNT, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod stick {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (RAND, 0x0)
                    (TERM, 0x1)
                );
            }
        }
    }
    pub mod link_navy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod link_parasail {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod link_swordbeam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CHARGE_RATE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (HIT, 0x6)
            );
        }
    }
    pub mod samus_bomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (BOMBJUMP, 0xb)
                (RANDOM_ROT_Z, 0xc)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STAY_COUNT, 0x0)
                (TERM, 0x1)
            );
        }
    }
    pub mod samus_cshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (CHARGE, 0x3)
                (CHARGE_OFFSET_X, 0x4)
                (CHARGE_OFFSET_Y, 0x5)
                (CHARGE_OFFSET_Z, 0x6)
                (SHOOT_LR, 0x7)
                (RAY_CHECK_LENGTH, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFH_BULLET, 0xa)
                (OWNER_FT_KIND, 0xb)
                (EFH_BULLET_FOLLOW, 0xc)
                (EFH_BULLET_FOLLOW_SUB, 0xd)
                (GROUND_EFFECT_COUNTER, 0xe)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STAY_COUNT, 0x0)
                (TERM, 0x1)
            );
        }
    }
    pub mod samus_gbeam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (MOTION_WHOLE_RATE, 0x9)
                (CATCH_JOINT_LENGTH, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0xd)
            );
        }
    }
    pub mod samus_gun {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (ADD_MOTION, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod samus_laser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (DST, 0x3)
                (SPD, 0x4)
                (ANG, 0x5)
                (LR, 0x6)
                (ANG_AND_GRAVITY_ROT, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (EFH_BULLET, 0xb)
                (GROUND_EFFECT_COUNTER, 0xc)
                (FOUNDER_ID, 0xd)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod samus_laser2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (OY, 0x3)
                (DST, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod samus_missile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (ROT, 0x3)
                (SPEED_MUL, 0x4)
                (SWALLOWED_SPEED_MUL, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (ACC_F, 0xb)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (GRAVITY_ANGLE, 0x0)
                (TERM, 0x1)
            );
            make_work_ids!(
                Int,
                Status,
                (STAY_COUNT, 0x0)
            );
        }
    }
    pub mod samus_transportation {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod samusd_bunshin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod yoshi_star {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (REMOVE, 0x0)
            );
        }
    }
    pub mod yoshi_tamago {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_SPEED, 0x3)
                (ROT, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLOR, 0xa)
                (SPECIAL_HI_BURST_FRAME, 0xb)
                (BOUND_NUM, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (EVENT, 0x6)
                (ON_DEACTIVATE, 0x7)
            );
        }
        pub mod status {
            use super::*;
            pub mod spit {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (GROUND_CORRECT_SHAPE_TYPE_BACKUP, 0x0)
                );
            }
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod yoshi_yoshibg01 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ANIM_PATTERN_NUM, 0xa)
                (YOSHI_MAX_NUM, 0xb)
            );
        }
    }
    pub mod yoshi_yoshimob {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod kirby_finalcutter {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod kirby_finalcuttershot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ANGLE, 0x3)
                (SPEED, 0x4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (MTRANS_SMPL_AIR, 0x6)
                (MTRANS_SMPL_GROUND, 0x7)
                (MTRANS_SMPL_MOTION_END, 0x8)
            );
        }
    }
    pub mod kirby_hammer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (EFFECT_ID_HOLE, 0x0)
                (EFFECT_ID_HOLE_MAX, 0x1)
                (EFFECT_ID_HOLE2, 0x2)
                (EFFECT_ID_HOLE_MAX2, 0x3)
                (WAIT_MTRANS_KIND, 0x4)
            );
            make_work_ids!(
                Flag,
                Status,
                (PARENTS_SITUATION_CHANGE, 0x0)
                (PARENTS_SITUATION_AIR, 0x1)
                (HOLD_MAX, 0x2)
                (CONTINUE_MOT1, 0x3)
                (CONTINUE_MOT2, 0x4)
                (EFFECT_HOLD_ON, 0x5)
                (EFFECT_HOLD_MAX_ON, 0x6)
                (EFFECT_ATTACK_ON, 0x7)
                (EFFECT_HOLD_END, 0x8)
            );
        }
    }
    pub mod kirby_hat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (ROTATE_OFFSET_X, 0x3)
                (ROTATE_OFFSET_Y, 0x4)
                (ROTATE_OFFSET_Z, 0x5)
                (ROTATE_MUL_X, 0x6)
                (ROTATE_MUL_Y, 0x7)
                (ROTATE_MUL_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (COPY_CHARA, 0xa)
            );
        }
    }
    pub mod kirby_miipartshead {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod kirby_reserve {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod kirby_rosettaticomissile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TARGET_X, 0x3)
                (TARGET_Y, 0x4)
                (TARGET_LENGTH, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (SHOOT_SMOKE_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
    }
    pub mod kirby_simple {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (ROTATE_OFFSET_X, 0x3)
                (ROTATE_OFFSET_Y, 0x4)
                (ROTATE_OFFSET_Z, 0x5)
                (ROTATE_MUL_X, 0x6)
                (ROTATE_MUL_Y, 0x7)
                (ROTATE_MUL_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (COPY_CHARA, 0xa)
                (SHULK_SPECIAL_N_TYPE_KIRBY_MONADO_EFFECT, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHULK_DEFAULT_CONSTRAINT, 0x6)
                (SHULK_SPECIAL_N_CONSTRAINT, 0x7)
                (SHULK_SPECIAL_N_ACTIVE, 0x8)
                (BUDDY_DEFAULT_CONSTRAINT, 0x9)
                (BUDDY_SPECIAL_N_CONSTRAINT, 0xa)
            );
        }
    }
    pub mod kirby_simple2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (ROTATE_OFFSET_X, 0x3)
                (ROTATE_OFFSET_Y, 0x4)
                (ROTATE_OFFSET_Z, 0x5)
                (ROTATE_MUL_X, 0x6)
                (ROTATE_MUL_Y, 0x7)
                (ROTATE_MUL_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (COPY_CHARA, 0xa)
            );
        }
    }
    pub mod kirby_starmissile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (LINK_EVENT_STAR_SHOT_CANCEL, 0x6)
                (IS_WEAPON, 0x7)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (BRAKE, 0x0)
                (SCALE, 0x1)
                (ANGLE, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (ATTACK_POWER, 0x0)
                (KIND, 0x1)
                (LIFE, 0x2)
            );
            make_work_ids!(
                Flag,
                Status,
                (SHOT_CANCELED, 0x0)
                (HIT_FIGHTER, 0x1)
            );
        }
    }
    pub mod kirby_stone {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (STONE_KIND, 0xa)
            );
        }
    }
    pub mod kirby_ultrasword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (SCALE, 0x0)
                (TERM, 0x1)
            );
        }
    }
    pub mod kirby_ultraswordhat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod kirby_warpstar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod kirby_windummy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod fox_arwing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (REMOVE_MOTION_END, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (SET_DEPTH_OFFSET, 0x0)
            );
        }
    }
    pub mod fox_arwingshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (START_POS_X, 0x3)
                (START_POS_Y, 0x4)
                (START_POS_Z, 0x5)
                (TARGET_POS_X, 0x6)
                (TARGET_POS_Y, 0x7)
                (TARGET_POS_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
        }
    }
    pub mod fox_blaster {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod fox_blaster_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SCALE, 0x3)
                (BASE_LENGTH, 0x4)
                (GROUND_OFFSET_X, 0x5)
                (SPEED, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
                (EFFECT_KIND, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (HIT_EFFECT, 0x6)
            );
        }
    }
    pub mod fox_illusion {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HIT_SHIELD_X, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (STOP, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (HIT_SHIELD, 0x0)
            );
        }
    }
    pub mod fox_reticle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pikachu_cloud {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POWERUP, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (KAMINARI_ADDRESS, 0xa)
                (PIKACHU, 0xb)
                (KAMINARI_COUNT, 0xc)
                (KAMINARI_NEED_END_COUNT, 0xd)
                (KAMINARI_END_COUNT, 0xe)
                (COLLISION_LOG_GROUP, 0xf)
                (INTERVAL_COUNT, 0x10)
                (TEAM, 0x11)
                (TASK_ID, 0x12)
                (WEAPON_ADDRESS, 0x13)
                (KIND, 0x14)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xc)
                (ALLOC_COL_LOG_GROUP, 0x6)
                (CALL_EXPLOSION, 0x7)
                (HIT_REFLECTOR, 0x8)
                (REQUEST_CHANGE_TEAM, 0x9)
                (SELF_REMOVE, 0xa)
                (ACTIVATE_KAMINARI, 0xb)
            );
        }
    }
    pub mod pikachu_dengeki {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (NUM, 0x4)
                (ATK_CLR_FRAME, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (HITTEST_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLAG, 0x5)
                (HITTEST_ONOFF, 0x6)
            );
        }
    }
    pub mod pikachu_dengekidama {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (NUM, 0x4)
                (POWERUP, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (DENGEKI_ARTICLE_ID, 0xa)
                (ARTICLE_DATA_ADDRESS, 0xb)
                (ARTICLE_ID, 0xc)
            );
        }
    }
    pub mod pikachu_kaminari {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (NUM, 0x9)
                (HEAD, 0x3)
                (TAIL, 0x4)
                (GROUND_Y, 0x5)
                (DIR, 0x6)
                (MOVE_DIST, 0x7)
                (REFLECTOR_HIT_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (CLOUD_ADDRESS, 0xa)
                (PREV_KAMINARI_ADDRESS, 0xb)
                (NEXT_KAMINARI_ADDRESS, 0xc)
                (LIFE, 0xd)
                (COLLISION_LOG_GROUP, 0xe)
                (EF_ID_HEAD, 0xf)
                (EF_ID_TAIL, 0x10)
                (TEST, 0x11)
                (FIGHTER_OBJECT_ID, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xf)
                (GROUND_CORRECT, 0x6)
                (COLLISION_CHECK, 0x7)
                (SELF_REMOVE, 0x8)
                (REFLECTOR_HIT_SELF, 0x9)
                (REFLECTOR_HIT_NOT_SELF, 0xa)
                (MTRANS_SMPL_AIR, 0xb)
                (MTRANS_SMPL_GROUND, 0xc)
                (MTRANS_SMPL_MOTION_END, 0xd)
                (IS_HEAD, 0xe)
            );
        }
    }
    pub mod pikachu_monsterball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pikachu_specialupdummy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pikachu_vortex {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (OWNER_OBJECT_ID, 0xa)
                (CAMERA_TYPE, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
    }
    pub mod luigi_dokan {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod luigi_fireball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (BOUND_ROT_RAD, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_COUNT, 0xa)
            );
        }
    }
    pub mod luigi_obakyumu {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (ATTACK_MUL, 0x3)
                (REACTION_MUL, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
                (NORMAL_OBJECT_ID, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT, 0x6)
            );
        }
    }
    pub mod luigi_plunger {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACH_GROUND_HIT_POS_X, 0x9)
                (ATTACH_GROUND_HIT_POS_Y, 0xa)
                (ATTACH_GROUND_CENTER_POS_X, 0xb)
                (ATTACH_GROUND_CENTER_POS_Y, 0xc)
                (ATTACH_GROUND_DEGREE, 0xd)
                (TIP_JOINT_LENGTH, 0xe)
                (TIP_JOINT_ROTATION_X, 0xf)
                (TIP_JOINT_ROTATION_Y, 0x10)
                (TIP_JOINT_ROTATION_Z, 0x11)
                (TIP_JOINT_POS_X, 0x12)
                (TIP_JOINT_POS_Y, 0x13)
                (NEW_TIP_JOINT_POS_X, 0x14)
                (NEW_TIP_JOINT_POS_Y, 0x15)
                (RAYCHECK_EXTEND_LENGTH, 0x16)
                (SMOKE_X, 0x17)
                (SMOKE_Y, 0x18)
                (TIP_COLLISION_POS1_X, 0x19)
                (TIP_COLLISION_POS1_Y, 0x1a)
                (TIP_COLLISION_POS1_Z, 0x1b)
                (TIP_COLLISION_POS2_X, 0x1c)
                (TIP_COLLISION_POS2_Y, 0x1d)
                (TIP_COLLISION_POS2_Z, 0x1e)
            );
            make_work_ids!(
                Int,
                Instance,
                (PLUNGERCONNECTOR_OBJECT_ID, 0x10)
                (TARGE_COLLISION_BUFFER_ID, 0x11)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0x10)
                (AIR_LASSO, 0xd)
                (RAY_CHECK, 0xe)
                (HIT_GROUND, 0xf)
            );
        }
        pub mod status {
            use super::*;
            pub mod shoot {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (STATUS_FRAME, 0x3)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x2)
                    (TERM, 0x4)
                    (HIT_GROUND, 0x3)
                );
            }
            pub mod exhaust {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (LIFE, 0x3)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x2)
                    (TERM, 0x5)
                    (HIT_GROUND, 0x3)
                    (MODIFY_PHYSICS_PARAM, 0x4)
                );
            }
            pub mod stop_ground {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROT_X, 0x0)
                    (ROT_Y, 0x1)
                    (ROT_Z, 0x2)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (LIFE, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x2)
                    (TOUCH_GROUND, 0x0)
                    (MODIFY_PHYSICS_PARAM, 0x1)
                );
            }
        }
    }
    pub mod ness_paula {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod ness_pk_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOTION, 0xa)
                (PILLAR_MOTION, 0xb)
            );
        }
    }
    pub mod ness_pk_flash {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (COUNT, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE, 0xa)
                (POWER, 0xb)
                (FRAME, 0xc)
                (NO_BOMB_FRAME, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (MAX, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod ness_pk_starstorm {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (CENTER_OFFSET_X, 0x3)
                (LENGTH, 0x4)
                (ANGLE, 0x5)
                (MOVE_DEG, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (SHOOT_NUM, 0xa)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (WALK_STICK_X, 0x0)
                (RUN_STICK_X, 0x1)
                (LENGTH, 0x2)
                (WIDTH, 0x3)
                (ANGLE, 0x4)
                (ANGLE_ADJUST, 0x5)
                (ANGLE_MAX, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod ness_pk_thunder {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (CHILD_NUM, 0xa)
                (CHILD_REG_TIMER, 0xb)
                (PENETRATION_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (CREATE_CHILD, 0x6)
                (ATTACK, 0x7)
                (REQUEST_DEACTIVATE, 0x8)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (VANISH_COUNT, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (VANISH_DONE, 0x0)
            );
        }
    }
    pub mod ness_poo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod ness_yoyo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (HEAD_NODE_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (ATTACK_HI, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod ness_yoyo_head {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_SPEED, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (YOYO_TASK_ID, 0xa)
                (YOYO_NODE_ID, 0xb)
                (ROT_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (ATTACK_HI, 0x6)
                (CORRECT, 0x7)
                (RUMBLE, 0x8)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ROT, 0x0)
                (PARENT_THROW_X, 0x2)
                (PARENT_THROW_Y, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (TAKEUP_INTP_FRAME, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x2)
                (LENGTH_MAX, 0x1)
                (ROT_STOP, 0x0)
            );
        }
    }
    pub mod captain_bluefalcon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (VISUAL_SCENE, 0x6)
            );
        }
    }
    pub mod captain_falconpunch {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (MOTION_FRAME, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (OWNER_OBJECT_ID, 0xa)
            );
        }
    }
    pub mod purin_cap {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod purin_monsterball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod peach_kassar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod peach_kinopio {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (LR, 0x3)
            );
        }
    }
    pub mod peach_kinopiospore {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (NO, 0xa)
            );
        }
    }
    pub mod koopa_breath {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (SPEED_MUL, 0x3)
                (SIZE_RATE, 0x4)
                (ANGLE, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (HIT_FRAME, 0xa)
                (KIND, 0xb)
            );
        }
    }
    pub mod koopa_koopag {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0xb)
                (POS_Y, 0x3)
                (POS_Z, 0x4)
                (STAGE_SCALE, 0x5)
                (STAGE_X, 0x6)
                (STAGE_Y, 0x7)
                (STAGE_Z, 0x8)
                (SIGHT_POS_X, 0x9)
                (SIGHT_POS_Y, 0xa)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOVE_FRAME, 0xa)
                (ATTACK_FRAME, 0xb)
                (SIGHT_EFFECT_ID, 0xc)
                (ATTACK_HIT_NUM, 0xd)
                (ATTACK_HIT_MOVE_NUM, 0xe)
                (ATTACK_HIT_OBJECT_ID, 0xf)
                (ATTACK_HIT_OBJECT_ID_TERM, 0x1d)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CAMERA_ZOOM_OUT_START, 0x6)
                (CAMERA_ZOOM_OUT, 0x7)
                (CAMERA_ZOOM_IN, 0x8)
                (END_UP, 0x9)
                (REQUEST_RUMBLE, 0xa)
                (ATTACK_HIT, 0xb)
                (FINAL_CHARGE, 0xc)
            );
        }
    }
    pub mod sheik_fusin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod sheik_ironwire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (APPEAL, 0x6)
                (SE, 0x7)
            );
        }
    }
    pub mod sheik_knife {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod sheik_needle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (NEXT_STATUS_KIND, 0xa)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (RANDOM, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (INFLICT, 0x0)
            );
        }
    }
    pub mod sheik_needlehave {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod zelda_dein {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
                (COUNT, 0x1)
                (ANGLE, 0x2)
                (SPEED, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (EP, 0x0)
                (TEAM, 0x1)
                (OWNER_ID, 0x2)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (REFLECT, 0x0)
            );
        }
    }
    pub mod zelda_dein_s {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (RATE, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod zelda_phantom {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (SUBSTANTIATION_X, 0x3)
                (ALPHA, 0x4)
                (ADD_ALPHA, 0x5)
                (CHARGE_LEVEL, 0x6)
                (HP, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (SITUATION, 0xa)
                (BUILD_STEP, 0xb)
                (BUILD_NEXT, 0xc)
                (STOP_FRAME, 0xd)
                (INVALID_STOP_FRAME, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SUBSTANTIATION, 0x6)
                (FADE, 0x7)
                (END, 0x8)
                (REFLECT, 0x9)
                (CANCEL, 0xa)
                (REBUILD, 0xb)
                (DISABLE_RUMBLE, 0xc)
            );
        }
    }
    pub mod zelda_triforce {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (HIT_OBJECT_ID, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (CATCH, 0x0)
            );
        }
    }
    pub mod mariod_capsuleblock {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod mariod_drcapsule {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (BOUND_ROT_RAD, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_COUNT, 0xa)
            );
        }
    }
    pub mod mariod_hugecapsule {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
        }
    }
    pub mod mariod_stethoscope {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod falco_arwing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (REMOVE_MOTION_END, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (SET_DEPTH_OFFSET, 0x0)
            );
        }
    }
    pub mod falco_arwingshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (START_POS_X, 0x3)
                (START_POS_Y, 0x4)
                (START_POS_Z, 0x5)
                (TARGET_POS_X, 0x6)
                (TARGET_POS_Y, 0x7)
                (TARGET_POS_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
        }
    }
    pub mod falco_blaster {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod falco_blaster_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SCALE, 0x3)
                (BASE_LENGTH, 0x4)
                (GROUND_OFFSET_X, 0x5)
                (SPEED, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
                (EFFECT_KIND, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (HIT_EFFECT, 0x6)
            );
        }
    }
    pub mod falco_illusion {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HIT_SHIELD_X, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (STOP, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (HIT_SHIELD, 0x0)
            );
        }
    }
    pub mod falco_reticle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucina_mask {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod younglink_milk {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod ganon_beast {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (VELOCITY_DX, 0x3)
                (VELOCITY_DY, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (INVINCIBLE_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (STEPPING, 0x6)
                (DASH, 0x7)
                (HITSTOP, 0x8)
            );
        }
    }
    pub mod ganon_ganond {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (VELOCITY_DX, 0x3)
                (VELOCITY_DY, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (INVINCIBLE_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (STEPPING, 0x6)
                (DASH, 0x7)
                (HITSTOP, 0x8)
                (HIT_RUMBLE_CHECK, 0x9)
            );
        }
    }
    pub mod ganon_sword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod mewtwo_bindball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod mewtwo_escapeairdummy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod mewtwo_mewtwom {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_POWER_MAX, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (INVINCIBLE_FRAME, 0xa)
                (RUSH_ANGLE_CURRENT, 0xb)
                (PSYCHOBREAK_OBJECT_ID, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (INVINCIBLE, 0x6)
                (FINAL_TIME_END_FLASH, 0x7)
            );
        }
    }
    pub mod mewtwo_psychobreak {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (TARGET_OBJECT_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (HIT_ABS, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (WAIT_FRAME, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod mewtwo_search {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (TARGET_NUM, 0xa)
                (TARGET_OBJECT_ID, 0xb)
                (TARGET_OBJECT_ID_TAIL, 0x12)
                (EFFECT_INTERVAL, 0x13)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
    }
    pub mod mewtwo_shadowball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0xd)
                (PX, 0x3)
                (PY, 0x4)
                (FX, 0x5)
                (FY, 0x6)
                (FLICKER_ANGLE, 0x7)
                (FLICKER_SPEED, 0x8)
                (FLICKER_ACCEL, 0x9)
                (FLICKER_SCALE, 0xa)
                (SCALE, 0xb)
                (CHARGE_RATE, 0xc)
            );
            make_work_ids!(
                Int,
                Instance,
                (CHARGE_FRAME, 0xa)
                (FLICKER_COUNTER, 0xb)
                (EF_ID_SHADOWBALL, 0xc)
                (OWNER_FT_KIND, 0xd)
                (PARAM_MAX_CHARGE_FRAME, 0xe)
                (SHOOT_MOTION_KIND, 0xf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (THROW_F, 0x6)
            );
        }
    }
    pub mod roy_sword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_bomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x1)
                (SPEED_Y, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (MOVE_FRAME, 0x0)
                (COUNT, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (REFLECT, 0x0)
                (DAMAGE, 0x1)
            );
        }
    }
    pub mod gamewatch_breath {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x1)
                (SPEED_Y, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (LIFE, 0x0)
                (MOVE_FRAME, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (REFLECT, 0x0)
            );
        }
    }
    pub mod gamewatch_entry {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_food {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_normal_weapon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_octopus {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (ATTACK_POWER_MAX, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (SE_COUNT, 0xa)
                (SE_ID, 0xb)
                (CATCH_OBJECT_ID_LEG_A, 0xc)
                (CATCH_OBJECT_ID_LEG_B, 0xd)
                (CATCH_OBJECT_ID_LEG_C, 0xe)
                (CATCH_OBJECT_ID_LEG_D, 0xf)
                (CATCH_PATTERN_LEG_A, 0x10)
                (CATCH_PATTERN_LEG_A_FIX, 0x11)
                (CATCH_DISABLE_FRAME_LEG_A, 0x12)
                (CATCH_DISABLE_FRAME_LEG_B, 0x13)
                (CATCH_DISABLE_FRAME_LEG_C, 0x14)
                (CATCH_DISABLE_FRAME_LEG_D, 0x15)
                (CATCH_DAMAGE_FRAME_LEG_A, 0x16)
                (CATCH_DAMAGE_FRAME_LEG_B, 0x17)
                (CATCH_DAMAGE_FRAME_LEG_C, 0x18)
                (CATCH_DAMAGE_FRAME_LEG_D, 0x19)
                (IGNORE_OBJECT_FRMAE_0, 0x1a)
                (IGNORE_OBJECT_FRMAE_N, 0x2a)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CATCH_OBJECT_LEG_A, 0x6)
                (CATCH_OBJECT_LEG_B, 0x7)
                (CATCH_OBJECT_LEG_C, 0x8)
                (CATCH_OBJECT_LEG_D, 0x9)
                (FIX_LEG_A, 0xa)
                (FIX_LEG_B, 0xb)
                (FIX_LEG_C, 0xc)
                (FIX_LEG_D, 0xd)
                (IGNORE_OBJECT_0, 0xe)
                (IGNORE_OBJECT_N, 0x1e)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
                (START_POS_X, 0x1)
                (MOTION_RATE, 0x2)
            );
            make_work_ids!(
                Int,
                Status,
                (CATCH_PATTERN_LEG_A, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x3)
                (START_ATTACK, 0x0)
                (MOT_CHANGE, 0x1)
                (FLASH, 0x2)
            );
        }
    }
    pub mod gamewatch_oil {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_panel {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_parachute {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gamewatch_rescue {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (ALPHA, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FADE, 0x6)
                (LINK_STOP, 0x7)
            );
        }
    }
    pub mod metaknight_bunshin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod metaknight_fourwings {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod metaknight_mantle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pit_bow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pit_bowarrow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPEED, 0x3)
                (ANGLE, 0x4)
                (CHARGE_SWALLOWED_BACKUP, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (DIR_S, 0x6)
            );
        }
        pub mod status {
            use super::*;
            pub mod fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (CHARGE, 0x0)
                    (ATTACK_POWER, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x0)
                );
            }
            pub mod stick {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (LIFE, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x0)
                );
            }
        }
    }
    pub mod pit_chariot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pit_chariotsight {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (CURSOR_X, 0x3)
                (CURSOR_Y, 0x4)
                (CAMERA_ZOOM_POS_X, 0x5)
                (CAMERA_ZOOM_POS_Y, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (TARGET_FRAME, 0xa)
            );
        }
    }
    pub mod pit_horse {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (CHARIOT_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (RIGHT, 0x6)
            );
        }
    }
    pub mod szerosuit_gunship {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (BRAKE_Y, 0x0)
            );
        }
    }
    pub mod szerosuit_laser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (RETICLE_OBJECT_ID, 0xa)
                (SAMUSP_SHOOT_FRAME, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (EFFECT_ALPHA, 0x0)
                (LENGTH, 0x1)
            );
            make_work_ids!(
                Int,
                Status,
                (EFFECT_HANDLE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (START_ATTACK, 0x0)
                (BEAM_EFFECT, 0x1)
            );
        }
    }
    pub mod szerosuit_paralyzer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOTION_KIND, 0xa)
            );
        }
    }
    pub mod szerosuit_paralyzer_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (TAME, 0x0)
            );
        }
    }
    pub mod szerosuit_reticle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ROTATE_DEGREE_ONCE, 0x0)
                (ROTATE_DEGREE, 0x1)
                (EFFECT_RATE, 0x2)
            );
            make_work_ids!(
                Int,
                Status,
                (EFFECT_HANDLE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (EFFECT_CHANGED, 0x0)
            );
        }
    }
    pub mod szerosuit_samusp {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PREV_X, 0x0)
                (PREV_Y, 0x1)
                (REACH_PREV_X, 0x2)
                (REACH_PREV_Y, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (COUNT, 0x0)
            );
        }
    }
    pub mod szerosuit_whip {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLLISION_LOG_GROUP, 0xa)
                (MOTION_KIND, 0xb)
            );
        }
    }
    pub mod szerosuit_whip2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SCALE, 0x9)
                (SHRINK_START_MOTION_FRAME, 0xa)
                (SHRINK_END_MOTION_FRAME, 0xb)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLLISION_LOG_GROUP, 0x10)
                (MOTION_KIND, 0x11)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0xd)
            );
        }
    }
    pub mod wario_garlic {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod wario_wariobike {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DAMAGE, 0x3)
                (CURRENT_SPEED_X, 0x4)
                (HP, 0x5)
                (SCALE_Z, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (ARCHIVE_GROUP, 0xa)
                (RESOURCE_ID, 0xb)
                (INVALID_ATTACK_FRAME, 0xc)
                (ACL_EFFECT_ID, 0xd)
                (SPARK_EFFECT_ID_0, 0xe)
                (SPARK_EFFECT_ID_1, 0xf)
                (SITUATION, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xc)
                (JUST_AFTER_INIT_PROCESS_WHEELIE, 0x6)
                (DAMAGE_DOWN, 0x7)
                (BROKEN, 0x8)
                (BROKEN_ATTACK, 0x9)
                (RESULT_BIKE, 0xa)
                (DAMAGE_EFFECT, 0xb)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x0)
                (ANGLE_PREV, 0x1)
                (GROUND_ANGLE, 0x2)
                (GROUND_ANGLE_PREV, 0x3)
                (FTIRE_ROT, 0x4)
                (RTIRE_ROT, 0x5)
                (FTIRE_ROT_SPEED, 0x6)
                (RTIRE_ROT_SPEED, 0x7)
                (LR, 0x8)
                (AIR_SPEED_Y, 0x9)
                (LOOP_FRAME, 0xa)
                (INIT_POS_Z, 0xb)
            );
            make_work_ids!(
                Int,
                Status,
                (TURN_COUNT, 0x0)
                (START_FRAME, 0x1)
                (WHEELIE_KEEP_FRAME, 0x2)
                (WHEELIE_FRAME, 0x3)
                (EFFECT_FRAME, 0x4)
                (EFFECT_ID, 0x5)
                (EFFECT_KIND, 0x6)
                (COMMAND_FLAG_CAT_1, 0x7)
                (START_ACCEL_VALID_FRAME, 0x8)
                (TARGET_OBJECT, 0x9)
                (TARGET_HIT_GROUP, 0xa)
                (TARGET_HIT_NO, 0xb)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x14)
                (NOT_SEND_DRIVE_EVENT, 0x0)
                (MOT_CHANGE, 0x1)
                (SITUATION_CHANGE, 0x2)
                (SPEED_LEQUAL_ZERO, 0x3)
                (GROUND_F, 0x4)
                (GROUND_R, 0x5)
                (GROUND_C, 0x6)
                (JUMP, 0x7)
                (WHEELIE_JUMP, 0x8)
                (ATTACK_CLEAR, 0x9)
                (DEACTIVE, 0xa)
                (CALL_SE_ACCEL, 0xb)
                (BUMP_WARIO_AWAY, 0xc)
                (CAPTURE, 0xd)
                (WALL_L, 0xe)
                (WALL_R, 0xf)
                (WHEELIE_INPUT_ON, 0x10)
                (TURN_TO_ITEM, 0x11)
                (DISABLE_TURN, 0x12)
                (WHEELIE_SITUATION_AIR, 0x13)
            );
        }
    }
    pub mod wario_warioman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
        }
    }
    pub mod snake_c4 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (STICK_ANGLE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE_COUNT, 0xa)
                (STARTUP_EXPLOSION_FRAME, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xb)
                (REQUEST_DEACTIVATE, 0x6)
                (GROUND, 0x7)
                (SQUAT, 0x8)
                (C3, 0x9)
                (STARTUP, 0xa)
            );
        }
        pub mod status {
            use super::*;
            pub mod drop_fall {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (DISAPPEAR, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod establish_ground {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (RAY_LENGTH, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_TASK_ID, 0x0)
                    (TARGET_HIT_NO, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (STICK, 0x0)
                    (START_CHECK_STICK, 0x1)
                    (FALL, 0x2)
                );
            }
            pub mod establish_wall {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (RAY_LENGTH, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_TASK_ID, 0x0)
                    (TARGET_HIT_NO, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (STICK, 0x0)
                    (START_CHECK_STICK, 0x1)
                    (FALL, 0x2)
                );
            }
            pub mod establish_target {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_TASK_ID, 0x0)
                    (TARGET_HIT_NO, 0x1)
                );
            }
            pub mod stick_target {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_TASK_ID, 0x0)
                    (TARGET_HIT_NO, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (PROCESS_SMEAR, 0x0)
                );
            }
            pub mod stick_other {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (UNSTUCK, 0x0)
                );
            }
        }
    }
    pub mod snake_c4_switch {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod snake_cypher {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE_COUNT, 0xa)
                (HP, 0xb)
            );
        }
    }
    pub mod snake_flaregrenades {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT, 0x3)
                (ROT_SPEED, 0x4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (STOP, 0x6)
                (STOP_ROT, 0x7)
            );
        }
    }
    pub mod snake_grenade {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod snake_lock_on_cursor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (ENTRY_ID, 0xa)
                (EFFECT_FRAME_READY, 0xb)
                (EFFECT_HANDLE_READY, 0xc)
                (EFFECT_HANDLE_LOCK_ON, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (EFFECT_END, 0x6)
            );
        }
    }
    pub mod snake_lock_on_cursor_ready {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE, 0xa)
            );
        }
    }
    pub mod snake_missile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0xd)
                (ROT_SPEED, 0x3)
                (DIRECTION_X, 0x4)
                (DIRECTION_Y, 0x5)
                (DIRECTION_Z, 0x6)
                (GUIDE_POINT_OFFSET_X, 0x7)
                (GUIDE_POINT_OFFSET_Y, 0x8)
                (GUIDE_POINT_OFFSET_Z, 0x9)
                (GUIDE_POINT_ORIGIN_X, 0xa)
                (GUIDE_POINT_ORIGIN_Y, 0xb)
                (GUIDE_POINT_ORIGIN_Z, 0xc)
            );
            make_work_ids!(
                Int,
                Instance,
                (MISSILE_ID, 0xa)
                (GUIDE_POINT_OFFSET_ID, 0xb)
                (DELAY_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (LOCK_ON, 0x6)
            );
        }
        pub mod status {
            use super::*;
            pub mod wait {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x0)
                );
            }
        }
    }
    pub mod snake_nikita {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIGHT_MODE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (LIGHT_ON, 0x6)
                (SHOOT, 0x7)
                (AWAY, 0x8)
            );
        }
    }
    pub mod snake_nikita_missile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DAMAGE_ROT, 0x3)
                (ROTZ_STABLE_MAX, 0x4)
                (ROTZ_STABLE_MIN, 0x5)
                (HP, 0x6)
                (TOPNB_ROTX, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (DAMAGE_ROT_FRAME, 0xa)
                (COUNTER, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_AUTONOMY, 0x6)
                (IS_HIT_END, 0x7)
                (TOUCH_SEARCH, 0x8)
                (IS_REFLECT, 0x9)
            );
        }
        pub mod status {
            use super::*;
            pub mod fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (LIMIT_ANGLE, 0x0)
                    (BRAKE_ROT_DIFF, 0x1)
                    (PREV_ROT, 0x2)
                    (STABLE_SPEED, 0x3)
                    (TURN_STABLE_SPEED, 0x4)
                    (START_Y, 0x5)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (BRAKE_COUNT, 0x0)
                    (FALL_COUNT, 0x1)
                    (ATTACK_RESTART_COUNT, 0x2)
                    (SE_INTERVAL, 0x3)
                    (SMOKE_EFFECT_HANDLE, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (BRAKE_START, 0x0)
                    (IS_STRAIGHT, 0x1)
                );
            }
        }
    }
    pub mod snake_reticle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (COUNT3_HANDLE_0, 0xa)
                (COUNT3_HANDLE_1, 0xb)
                (COUNT3_HANDLE_2, 0xc)
                (COUNT3_HANDLE_3, 0xd)
                (COUNT3_HANDLE_4, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
    }
    pub mod snake_reticle_cursor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod snake_rpg7 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod snake_trenchmortar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod snake_trenchmortar_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            pub mod fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROT_X_SPEED, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x3)
                    (TOUCH_SEARCH, 0x4)
                    (IS_REFLECT, 0x5)
                );
            }
            make_work_ids!(
                Flag,
                Status,
                (ENABLE_ADVANCE_STATUS, 0x0)
                (ROT_X_START, 0x1)
                (ROT_X_END, 0x2)
                (SKIP_FIRST_FRAME, 0x3)
                (TERM, 0x4)
            );
        }
    }
    pub mod ike_sword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x3)
                (TERM, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (THROW_RIGHT_ABOVE, 0x7)
                (FINAL, 0x8)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (HAVE, 0x0)
                    (RELEASE, 0x1)
                    (TERM, 0x2)
                );
            }
        }
    }
    pub mod pzenigame_water {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pfushigisou_leafcutter {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (OWN_ANGLE, 0x3)
                (OWN_ANGLE_ACCEL, 0x4)
                (FLY_ANGLE, 0x5)
                (FLY_ANGLE_TARGET, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (REANGLE_COUNTER, 0xa)
            );
        }
    }
    pub mod pfushigisou_seed {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (KIRBY, 0x6)
                (HARD, 0x7)
                (TERM, 0x8)
            );
        }
    }
    pub mod pfushigisou_vine {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x8)
                (TERM, 0x9)
            );
        }
    }
    pub mod plizardon_breath {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPEED_MUL, 0x3)
                (SCALE, 0x4)
                (ANGLE, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (HIT_FRAME, 0xa)
                (KIND, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod plizardon_daimonji {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (LAST, 0x6)
            );
        }
    }
    pub mod plizardon_explosion {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
    }
    pub mod plizardon_monsterball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod diddy_barreljet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_POWER_MAX, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (REFLECT_AND_DAMAGE, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (CHARGE_VALUE, 0x0)
                (FLY_TARGET_ANGLE, 0x1)
                (FLY_IMPELLENT, 0x2)
                (LIFE, 0x3)
                (START_FLY_SPD_X, 0x4)
                (START_FLY_SPD_Y, 0x5)
                (FLY_ANGLE, 0x6)
                (FLY_ANGLE_SPEED, 0x7)
                (ROLL_ANGLE, 0x8)
                (ROLL_ANGLE_SPEED, 0x9)
                (TERM, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (EXPLOSION_LIFE, 0x0)
                (FLY_ANGLE_SET_COUNT, 0x1)
                (FLY_IMPELLENT_COUNT, 0x2)
                (FLY_CONTROL_FRAME, 0x3)
                (FLY_NO_CONTROL_FRAME, 0x4)
            );
            make_work_ids!(
                Flag,
                Status,
                (FLY_TARGET_ANGLE_ARRIVAL, 0x0)
            );
        }
    }
    pub mod diddy_barreljets {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod diddy_bunshin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (ANGLE_X, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (NO, 0xa)
                (WAIT_FLY_COUNT, 0xb)
                (FLY_DIR, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (INIT_SOUND, 0x6)
            );
        }
    }
    pub mod diddy_dkbarrel {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod diddy_explosion {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod diddy_gun {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod diddy_lock_on_cursor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ENTRY_ID, 0xa)
                (EFFECT_HANDLE, 0xb)
            );
        }
    }
    pub mod diddy_peanuts {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_Y, 0x3)
                (SPEED, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x0)
                (TERM, 0x1)
            );
        }
    }
    pub mod lucas_bonnie {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucas_doseitable {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucas_himohebi {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucas_himohebi2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0xd)
            );
        }
    }
    pub mod lucas_kumatora {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucas_needle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucas_pk_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucas_pk_freeze {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (COUNT, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE, 0xa)
                (POWER, 0xb)
                (FRAME, 0xc)
                (NO_BOMB_FRAME, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (MAX, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod lucas_pk_starstorm {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (DEST_X, 0x3)
                (DEST_Y, 0x4)
                (LENGTH, 0x5)
                (MOVE_DEG, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (SHOOT_NUM, 0xa)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (WALK_STICK_X, 0x0)
                (RUN_STICK_X, 0x1)
                (LENGTH, 0x2)
                (WIDTH, 0x3)
                (ANGLE, 0x4)
                (ANGLE_ADJUST, 0x5)
                (ANGLE_MAX, 0x6)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod lucas_pk_thunder {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (CHILD_NUM, 0xa)
                (CHILD_REG_TIMER, 0xb)
                (PENETRATION_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (CREATE_CHILD, 0x6)
                (ATTACK, 0x7)
                (REQUEST_DEACTIVATE, 0x8)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ANGLE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (VANISH_DONE, 0x0)
            );
        }
    }
    pub mod sonic_chaosemerald {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod sonic_gimmickjump {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (COMP_POS_X, 0x3)
                (COMP_POS_Y, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOTION_KIND, 0xa)
                (MOTION_KIND_AIR, 0xb)
                (EXIST_COUNTER, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (INVOKE_AIR, 0x6)
                (FALL_HIT, 0x7)
                (ON_JUMP, 0x8)
            );
        }
        pub mod status {
            use super::*;
            pub mod wait {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (NOTIFY_JUMP, 0x0)
                    (TERM, 0x1)
                );
            }
        }
    }
    pub mod sonic_homingtarget {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (OFFSET_X, 0x3)
                (OFFSET_Y, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (OBJECT_ID, 0xa)
            );
        }
    }
    pub mod sonic_supersonic {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (START_X, 0x3)
                (START_Y, 0x4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLASHING, 0x6)
            );
        }
        pub mod status {
            use super::*;
            pub mod final__move {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (EXIST_COUNTER, 0x0)
                    (BLINK_COUNTER, 0x1)
                    (RESTART_COUNTER, 0x2)
                    (TERM, 0x3)
                );
            }
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (RESTART_BASE_Y, 0x0)
                    (MOVE_START_Y, 0x1)
                    (MOVE_END_Y, 0x2)
                    (DEGREE, 0x3)
                    (CAMERA_POS_X, 0x4)
                    (CAMERA_POS_Y, 0x5)
                    (CAMERA_POS_Z, 0x6)
                    (SE_PITCH_RATIO, 0x7)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TO_END, 0x0)
                );
            }
        }
    }
    pub mod dedede_gordo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DAMAGE_VALUE, 0x3)
                (DAMAGE_REACTION_FRAME, 0x4)
                (DAMAGE_REACTION_SPD_X, 0x5)
                (DAMAGE_REACTION_SPD_Y, 0x6)
                (START_SPEED, 0x7)
                (START_ANGLE, 0x8)
                (TURN_ATTACK_RATE, 0x9)
                (TURN_ATTACK_LR, 0xa)
            );
            make_work_ids!(
                Int,
                Instance,
                (KIND, 0xa)
                (OWNER_ID, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (INHALED, 0x6)
                (SELF_SHOT_OBJECT, 0x7)
                (SWALLOWED_VISIBILITY, 0x8)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x3)
                (ANGLE, 0x0)
                (ANGLE_SPEED, 0x1)
                (TURN_HAVE_ATTACK, 0x2)
            );
            make_work_ids!(
                Int,
                Status,
                (KIND, 0x0)
                (WALL_STOP_LIFE_COUNT, 0x1)
                (LIFE_COUNT, 0x2)
                (TURN_COUNT, 0x3)
                (ACTION_KIND, 0x4)
                (HAD_OWNER_ID, 0x5)
                (DEAD_REMOVE_COUNT, 0x6)
                (BOUND_COUNT, 0x7)
                (HOP_LIFE, 0x8)
            );
            make_work_ids!(
                Flag,
                Status,
                (CONTINUE_MOT, 0x0)
                (PARENTS_SITUATION_CHANGE, 0x1)
                (PARENTS_SITUATION_AIR, 0x2)
                (JUMP_START, 0x3)
                (REMOVE, 0x4)
                (REMOVE_HIT, 0x5)
                (VISIBILITY_ON, 0x6)
                (THROW_ON, 0x7)
                (TRANSITION_GROUND, 0x8)
                (TRANSITION_AIR, 0x9)
                (BOUND, 0xa)
                (ATTACK_TURN, 0xb)
                (HOP_TURN, 0xc)
                (DROP, 0xd)
                (EFFECT, 0xe)
                (DEAD_STAY, 0xf)
                (REMOVE_FACE_MOTION, 0x10)
                (HIT_REFLECTOR, 0x11)
                (HIT_REFLECTOR_AFTER, 0x12)
            );
        }
    }
    pub mod dedede_mask {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod dedede_missile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod dedede_newdededehammer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod dedede_shrine {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod dedede_starmissile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (LINK_EVENT_STAR_SHOT_CANCEL, 0x6)
                (TERM, 0x7)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (BRAKE, 0x0)
                (SCALE, 0x1)
                (ANGLE, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (ATTACK_POWER, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (SHOT_CANCELED, 0x0)
                (HIT_FIGHTER, 0x1)
            );
        }
    }
    pub mod pikmin_dolfin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (CAMERA_ROT_TOTAL, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (START_AFTER_FRAME, 0xa)
            );
        }
        pub mod status {
            use super::*;
            pub mod final__fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROT_Z, 0x0)
                    (CAM_ROT_X, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WAIT_COUNTER, 0x0)
                    (CAM_ROT_COUNTER, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FINAL_STATUS_ON, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod final__attack {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROT_Z, 0x0)
                    (TERM, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x0)
                );
            }
            pub mod final__fall {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (CAM_ROT_X, 0x0)
                    (TERM, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (CAM_ROT_COUNTER, 0x0)
                    (CAM_ROT_COUNTER_FIX, 0x1)
                    (FALL_COUNTER, 0x2)
                );
            }
        }
    }
    pub mod pikmin_pikmin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_POWER_MAX, 0x3)
                (OWNER_X, 0x4)
                (OWNER_Y, 0x5)
                (TARGET_X, 0x6)
                (TARGET_Y, 0x7)
                (OWNER_LR_CURRENT, 0x8)
                (OWNER_LR_FOLLOW, 0x9)
                (STATUS_FRAME, 0xa)
                (TARGET_OFFSET_X, 0xb)
                (SPECIAL_S_TARGET_HIT_LR, 0xc)
                (SPECIAL_S_TARGET_HIT_OFFSET_X, 0xd)
                (SPECIAL_S_TARGET_HIT_OFFSET_Y, 0xe)
                (SPECIAL_S_TARGET_HIT_OFFSET_Z, 0xf)
                (OWNER_LR_SPECIAL_HI_SET, 0x10)
                (FOLLOW_SPEED_LIMIT, 0x11)
                (FOLLOW_SPEED_STABLE, 0x12)
                (PARTICULAR_GRAVITY_LIMIT_SPEED, 0x13)
                (THROW_POWER_UP_DEFAULT, 0x14)
                (MOTION_SPEED_X_MUL, 0x15)
            );
            make_work_ids!(
                Int,
                Instance,
                (VARIATION, 0xa)
                (HP, 0xb)
                (AUTONOMY_DEAD_COUNT, 0xc)
                (ACTION_COMP_FRAME, 0xd)
                (JUMP_COUNT, 0xe)
                (DROWN_COUNT, 0xf)
                (COLLISION_LOG_GROUP, 0x10)
                (OWNER_CONDITION_CURRENT, 0x11)
                (OWNER_CONDITION_FOLLOW, 0x12)
                (OWNER_OPTION_FLAG_FOLLOW, 0x13)
                (TROOPS_MANAGER_ADDRESS, 0x14)
                (SPECIAL_S_TARGET_TASK_ID, 0x15)
                (SPECIAL_S_TARGET_HIT_NO, 0x16)
                (SPECIAL_S_ITEM_OBJECT_ID, 0x17)
                (HOLD_INDEX, 0x18)
                (HOLD_NUM, 0x19)
                (TROOPS_INDEX, 0x1a)
                (DROWN_DEAD_FRAME, 0x1b)
                (CATCH_TARGET_BATTLE_OBJECT_ID, 0x1c)
                (BLOOM_STATE, 0x1d)
                (BLOOM_COUNT, 0x1e)
                (OWNER_OBJECT_ID, 0x1f)
                (SITUATION_AIR_COUNT, 0x20)
                (ATTACK_AIR_SHIELD_HIT_OPPONENT_ID, 0x21)
                (ATTACK_AIR_SHIELD_HIT_GROUP, 0x22)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x1a)
                (AUTONOMY, 0x6)
                (UNABLE_HIDE_WAIT, 0x7)
                (IS_HOMERUN_CONTEST, 0x8)
                (IS_REFLECT, 0x9)
                (IS_SPECIAL_S_PICK_UP_ITEM, 0xa)
                (IS_SPECIAL_S_MOVE_ITEM, 0xb)
                (IS_SPECIAL_S_CLING_CARRIER, 0xc)
                (IS_SPECIAL_S_CLING_ENEMY, 0xd)
                (IS_SPECIAL_HI_DISABLE_AIR_FOLLOW, 0xe)
                (IS_GIMMICK_BARREL, 0xf)
                (IS_CATCH_RETURN_END, 0x10)
                (IS_CATCH_FAILURE_WAIT_END, 0x11)
                (IS_CATCH_FAILURE_GROUND_FOLLOW_FORCE, 0x12)
                (IS_CATCH_SUB, 0x13)
                (TAKE_FROM_POCKET, 0x14)
                (NO_DEAD, 0x15)
                (JUMP, 0x16)
                (FALL_DEAD, 0x17)
                (SHIELD_HIT, 0x18)
                (REFLECTOR_HIT, 0x19)
            );
        }
        pub mod status {
            use super::*;
            pub mod wait {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TOP_OBJECT_ID, 0x0)
                    (NO_SLEEP_FRAME, 0x1)
                    (TERM, 0x2)
                );
            }
            pub mod turn {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (FORCE_ASSIST, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod follow_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (PERPLEXED_DIST_SQ, 0x0)
                    (PERPLEXED_TARGET_DIST, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PERPLEXED_COUNTER, 0x0)
                    (PERPLEXED_CHECK_INTERVAL, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x2)
                    (IS_CHECK_AUTONOMY, 0x0)
                    (IS_PERPLEXED, 0x1)
                );
            }
            pub mod dead_wait {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (RAND, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod drown_wait {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x1)
                    (WATER_AREA_ID, 0x2)
                    (TERM, 0x3)
                );
            }
            pub mod damage_fly {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (REACTION_FRAME, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod attack_s4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (GROUND_Y, 0x0)
                    (AIR_Y, 0x1)
                    (TERM, 0x2)
                );
            }
            pub mod attack_hi4 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (SUPPORT_FALL_COUNT, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (UNIQ_ON, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod catch_start {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (DASH_START, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod catch_wait {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (THROW_B, 0x0)
                    (THROW_F, 0x1)
                    (THROW_HI, 0x2)
                    (THROW_LW, 0x3)
                    (ADDED_CLATTER_TIME, 0x4)
                    (TERM, 0x5)
                );
            }
            pub mod throw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_KIND, 0x0)
                    (TARGET_TASK, 0x1)
                    (TARGET_HIT_GROUP, 0x2)
                    (TARGET_HIT_NO, 0x3)
                    (MOTION_START_DELAY_FRAME, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (MOTION_STARTED, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod pull_out_start {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOT_RATE, 0x0)
                    (TERM, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_ENTRY, 0x0)
                );
            }
            pub mod pull_out {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (GROUND_Y, 0x0)
                    (OWNER_X, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_ENTRY, 0x0)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START_ROT, 0x0)
                    (GROUND_Y, 0x1)
                    (CLING_START_X, 0x2)
                    (CLING_START_Y, 0x3)
                    (CLING_START_Z, 0x4)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TARGET_TASK_ID, 0x0)
                    (TARGET_HIT_NO, 0x1)
                    (TARGET_NODE, 0x2)
                    (POKEMON_TRAINER_OBJECT_ID, 0x3)
                    (CLATTER_TIME, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FLICK_THROW, 0x0)
                    (IS_REFLECT, 0x1)
                    (IS_SHIELD, 0x2)
                    (LANDING, 0x3)
                    (POKEMON_CHANGE_START, 0x4)
                );
            }
            pub mod special_s_cling {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_EXIT, 0x5)
                    (IS_CONSTRAINT, 0x6)
                );
            }
            pub mod special_hi_set {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (POS_X_OFFSET, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod special_hi_hang_start {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROT_Z, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (INDEX, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod special_hi_hang {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (INDEX, 0x0)
                    (TERM, 0x1)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x6)
                    (SPEED_Y, 0x0)
                    (ACCEL_Y, 0x1)
                    (RAPID_DOWN_SPEED_Y, 0x2)
                    (RAPID_DOWN_ACCEL_Y, 0x3)
                    (BASE_POS_X, 0x4)
                    (BASE_POS_Y, 0x5)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (TOTAL_JUMP_FRAME, 0x0)
                    (RAPID_FRAME, 0x1)
                    (NORMAL_FRAME, 0x2)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (RAPID_MOVE, 0x0)
                    (NORMAL_MOVE, 0x1)
                    (DOWN_MOVE, 0x2)
                );
            }
        }
    }
    pub mod pikmin_win1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pikmin_win2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pikmin_win3 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod lucario_auraball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x11)
                (PX, 0x3)
                (PY, 0x4)
                (FX, 0x5)
                (FY, 0x6)
                (FLICKER_ANGLE, 0x7)
                (FLICKER_SPEED, 0x8)
                (FLICKER_ACCEL, 0x9)
                (FLICKER_SCALE, 0xa)
                (AURAPOWER, 0xb)
                (SCALE, 0xc)
                (CHARGE_RATE, 0xd)
                (SE_AURAPOWER_MIDDLE, 0xe)
                (SE_AURAPOWER_HIGH, 0xf)
                (EFFECT_JOINT_SCALE, 0x10)
            );
            make_work_ids!(
                Int,
                Instance,
                (CHARGE_FRAME, 0xa)
                (FLICKER_COUNTER, 0xb)
                (EF_ID_AURABALL, 0xc)
                (OWNER_FT_KIND, 0xd)
                (PARAM_MAX_CHARGE_FRAME, 0xe)
            );
        }
    }
    pub mod lucario_lucariom {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (FINAL_CURRENT_ANGLE, 0x3)
                (FINAL_ANGLE_REVERT_DELTA, 0x4)
                (FINAL_TARGET_LR, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (FINAL_INTERVAL, 0xa)
            );
        }
    }
    pub mod lucario_qigong {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (OFFSET_X, 0x3)
                (OFFSET_Y, 0x4)
                (OFFSET_AIR_X, 0x5)
                (OFFSET_AIR_Y, 0x6)
            );
        }
    }
    pub mod robot_beam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (FOLAT_CHARGE_VALUE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (STRONG, 0x6)
            );
        }
    }
    pub mod robot_final_beam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (PATTERN_NUM, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (ATTACK_RUNBLE, 0x0)
            );
        }
    }
    pub mod robot_gyro {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (FOLAT_CHARGE_VALUE, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x8)
                (ANG_Y, 0x0)
                (ANG_SPD_Y, 0x1)
                (SPD_X, 0x2)
                (ABS_SPD_X, 0x3)
                (CHARGE_VALUE, 0x4)
                (STOP_SPD_X, 0x5)
                (END_ANG_SPD_Y, 0x6)
                (ANG_Y_INC, 0x7)
            );
            make_work_ids!(
                Int,
                Status,
                (END_COUNT, 0x0)
            );
        }
    }
    pub mod robot_gyro_holder {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x0)
                (MOTION_KIND_AIR, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (CONTINUE_MOT, 0x0)
                (PARENTS_SITUATION_CHANGE, 0x1)
                (PARENTS_SITUATION_AIR, 0x2)
            );
        }
    }
    pub mod robot_hominglaser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ANGLE, 0x3)
                (ANGLE_MUL, 0x4)
                (TARGET_POS_X, 0x5)
                (TARGET_POS_Y, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (INDEX, 0xa)
                (TARGET_OBJECT_ID, 0xb)
                (ARTICLE_OBJECT_ID, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (HOMING, 0x6)
                (HOMING_DISABLE, 0x7)
                (LOCK_ON, 0x8)
                (BURST, 0x9)
            );
        }
    }
    pub mod robot_hugebeam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (LENGTH, 0x3)
            );
        }
    }
    pub mod robot_mainlaser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (LENGTH, 0x3)
            );
        }
    }
    pub mod robot_narrowbeam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (BEAM_LENGTH, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ID, 0xa)
            );
        }
    }
    pub mod robot_widebeam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (BEAM_LENGTH, 0x3)
            );
        }
    }
    pub mod toonlink_fairy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod toonlink_hookshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x6)
                (TERM, 0x7)
            );
        }
    }
    pub mod toonlink_hookshothand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod toonlink_pig {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod toonlink_takt {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_balloon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TEAM_COLOR_R, 0x3)
                (TEAM_COLOR_G, 0x4)
                (TEAM_COLOR_B, 0x5)
                (ROT_X, 0x6)
                (ROT_Z, 0x7)
                (TOP_ANGLE, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (NO, 0xa)
                (FRAME, 0xb)
                (TEAM_COLOR, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (SINGLE, 0x6)
                (BURST, 0x7)
                (UPDATE_LOG_ATTACK_INFO, 0x8)
            );
        }
    }
    pub mod murabito_beetle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_bowling_ball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (FRONT, 0x6)
            );
        }
    }
    pub mod murabito_butterflynet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_clayrocket {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HP, 0x3)
                (BASE_ROT_X, 0x4)
                (BASE_ROT_Y, 0x5)
                (BASE_ROT_Z, 0x6)
                (SAFE_POS_X, 0x7)
                (SAFE_POS_Y, 0x8)
                (LODGED_POS_X, 0x9)
                (LODGED_POS_Y, 0xa)
                (DIRECTION_X, 0xb)
                (DIRECTION_Y, 0xc)
                (MODEL_ANGLE, 0xd)
                (GRAVITY_ANGLE, 0xe)
                (LODGED_THETA, 0xf)
                (SWALLOWED_START_LR, 0x10)
            );
            make_work_ids!(
                Int,
                Instance,
                (CONTROL_SPEED, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x13)
                (RIDE, 0x6)
                (GET_OFF, 0x7)
                (DETACH, 0x8)
                (LODGED, 0x9)
                (GROUND, 0xa)
                (BURST, 0xb)
                (LOCK_DIRECTION, 0xc)
                (HIT, 0xd)
                (SHOOT, 0xe)
                (NOTIFY_PANIC, 0xf)
                (PANIC, 0x10)
                (RIDE_REFLECTED, 0x11)
                (RIDE_BURST, 0x12)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (FRAME, 0x0)
                (END_FRAME, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (FALL, 0x0)
            );
        }
    }
    pub mod murabito_firework {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_flowerpot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_X, 0x3)
                (ROT_Y, 0x4)
                (ROT_Z, 0x5)
                (ROT, 0x6)
                (ROT_SPEED, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (DISABLE_TOUCH_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (BOUND, 0x6)
                (ASASE, 0x7)
                (WATER, 0x8)
            );
        }
    }
    pub mod murabito_furniture {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_helmet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_house {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_moneybag {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_seed {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COUNT, 0xa)
            );
        }
    }
    pub mod murabito_slingshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (FRONT, 0x6)
            );
        }
    }
    pub mod murabito_sprinkling_water {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (EFFECT_REQUEST, 0x6)
            );
        }
    }
    pub mod murabito_sprout {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (ROT, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (GROW, 0xb)
            );
        }
        pub mod status {
            use super::*;
            pub mod disappear {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ALPHA, 0x0)
                    (ADD_ALPHA, 0x1)
                );
            }
            pub mod grow {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PREV_GROW, 0x0)
                );
            }
        }
    }
    pub mod murabito_stump {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_timmy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (CONSTRUCT_NUM, 0xa)
            );
        }
    }
    pub mod murabito_tommy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (CONSTRUCT_NUM, 0xa)
            );
        }
    }
    pub mod murabito_tomnook {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (POS_X, 0x3)
                (POS_Y, 0x4)
                (POS_Z, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (CONSTRUCT_NUM, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CATCH, 0x6)
                (VIS_WHOLE, 0x7)
                (ATTACK, 0x8)
            );
        }
    }
    pub mod murabito_tree {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HP, 0x3)
                (RATE, 0x4)
                (HIT_NORMAL_X, 0x5)
                (HIT_NORMAL_Y, 0x6)
                (PREV_POS_X, 0x7)
                (PREV_POS_Y, 0x8)
                (SPEED_X, 0x9)
                (SPEED_Y, 0xa)
                (SMOKE_POS_X, 0xb)
                (SMOKE_POS_Y, 0xc)
                (SMOKE_POS_Z, 0xd)
                (SMOKE_ROT_X, 0xe)
                (SMOKE_ROT_Y, 0xf)
                (SMOKE_ROT_Z, 0x10)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (CRACK_RIGHT, 0xc)
                (DISAPPEAR_MOTION_KIND, 0xd)
                (JOINT_ID, 0xe)
                (LOG_GROUP, 0xf)
                (LAST_ATTACKER, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (CRACK_LEFT, 0x6)
                (TERM, 0xa)
                (CRACK, 0x7)
                (DISAPPEAR, 0x8)
                (MELEE_NO_RANDOM, 0x9)
            );
        }
        pub mod status {
            use super::*;
            pub mod disappear {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ALPHA, 0x0)
                    (ADD_ALPHA, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (DEAD, 0x0)
                );
            }
            pub mod stand {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (CRACK, 0x0)
                    (HIT, 0x1)
                );
            }
            pub mod fallen {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOTION_ANGLE, 0x0)
                    (WOOD_SPEED, 0x1)
                    (WOOD_ANGLE, 0x2)
                    (HIT_RAY_POS_X, 0x3)
                    (HIT_RAY_POS_Y, 0x4)
                    (HIT_RAY_VEC_X_0, 0x5)
                    (HIT_RAY_VEC_Y_0, 0x6)
                    (HIT_RAY_VEC_X_1, 0x7)
                    (HIT_RAY_VEC_Y_1, 0x8)
                    (HIT_POS_X, 0x9)
                    (HIT_POS_Y, 0xa)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ITEM_NUM, 0x0)
                    (ITEM_INTERVAL, 0x1)
                    (HIT_NUM, 0x2)
                    (LINE_CHECK_DISABLE_PASSABLE_FRAME, 0x3)
                    (LINE_CHECK_DISABLE_FRAME, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (LINE_HIT, 0x0)
                    (LINE_HIT_FLOOR, 0x1)
                    (ATTACK_CLEAR, 0x2)
                    (INITIALIZED, 0x3)
                    (HIT, 0x4)
                );
            }
        }
    }
    pub mod murabito_umbrella {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod murabito_weeds {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod rockman_airshooter {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (REFLECT_COUNT, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ATTACK_VECTOR_REVERSE_UD_CHECK, 0x6)
            );
        }
    }
    pub mod rockman_blackhole {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
                (COUNT, 0x1)
                (ANGLE, 0x2)
                (SPEED, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (EP, 0x0)
                (TEAM, 0x1)
                (NO_BANG, 0x2)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x4)
                (HIT, 0x0)
                (SEND_ATTACK_END, 0x1)
                (FINAL_SUCCESS, 0x2)
                (PULL, 0x3)
            );
        }
    }
    pub mod rockman_chargeshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POWER_RATE, 0x3)
                (HOLD_RATE, 0x4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (GROUND_TOUCH, 0x6)
            );
        }
    }
    pub mod rockman_crashbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (STICK_TARGET_BATTLE_OBJECT_ID, 0xa)
                (STICK_TARGET_HIT_NO, 0xb)
                (NOW_STICK_BATTLE_OBJECT_ID, 0xc)
                (DISABLE_SEARCH_COUNT, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xb)
                (USE_SECOND_STICK_KEEP_FRAME, 0x6)
                (EXPLODE, 0x7)
                (DROP_FALL, 0x8)
                (CHANGING, 0x9)
                (SLEEP, 0xa)
            );
        }
    }
    pub mod rockman_hardknuckle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (ROT_Z, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (REFLECT_COUNT, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (REFLECT, 0x6)
                (ATTACK_VECTOR_REVERSE_UD_CHECK, 0x7)
            );
        }
    }
    pub mod rockman_leafshield {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (INIT_LR, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_COUNT_0, 0xa)
                (ATTACK_COUNT_1, 0xb)
                (ATTACK_COUNT_2, 0xc)
                (ATTACK_COUNT_3, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (DEAD_0, 0x6)
                (DEAD_1, 0x7)
                (DEAD_2, 0x8)
                (DEAD_3, 0x9)
            );
        }
        pub mod status {
            use super::*;
            pub mod shield {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (SHIELD_MOTION_START, 0x0)
                    (SHIELD_MOTION_NOW, 0x1)
                    (SHOOT_READY, 0x2)
                    (TERM, 0x3)
                );
            }
        }
    }
    pub mod rockman_leftarm {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod rockman_rightarm {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod rockman_rockbuster {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod rockman_rockmandash {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TIME, 0xa)
            );
        }
    }
    pub mod rockman_rockmanexe {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TIME, 0xa)
            );
        }
    }
    pub mod rockman_rockmanx {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TIME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (VISIBILITY_CHANGE, 0x6)
            );
        }
    }
    pub mod rockman_rushcoil {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (SQUAT_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (JUMP, 0x6)
                (EXIT, 0x7)
                (FIRST_JUMP_END, 0x8)
            );
        }
        pub mod status {
            use super::*;
            pub mod coil {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (FIRST, 0x0)
                    (TERM, 0x1)
                );
            }
        }
    }
    pub mod rockman_shootingstarrockman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TIME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (VISIBILITY_CHANGE, 0x6)
            );
        }
    }
    pub mod wiifit_balanceboard {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod wiifit_hulahoop {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (OFFSET_RAND_Y, 0x3)
                (START_FRAME, 0x4)
                (MOTION_RATE, 0x5)
                (ROTATION, 0x6)
                (LR, 0x7)
                (SCALE_RATE, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOTION_NO, 0xa)
                (EFFECT_ID_TWINKLE_UP, 0xb)
                (EFFECT_ID_TWINKLE_CENTER, 0xc)
                (EFFECT_ID_TWINKLE_LOW, 0xd)
                (BREAK_LIFE, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (VIS_OFF_1, 0x6)
                (VIS_OFF_2, 0x7)
                (VIS_OFF_3, 0x8)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (REMOVE_REQUEST, 0x0)
            );
        }
    }
    pub mod wiifit_silhouette {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
                (EFFECT_VALUE, 0xb)
            );
        }
    }
    pub mod wiifit_silhouettel {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod wiifit_sunbullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SHOOT_SCALE, 0x3)
                (OFFSET_Y, 0x4)
                (EFFECT_BULLET_ALPHA, 0x5)
                (EFFECT_HOLD_ALPHA, 0x6)
                (EFFECT_HOLD_LENSFLARE, 0x7)
                (CHARGE_LEVEL_RATIO, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID_BULLET, 0xa)
                (EFFECT_ID_HOLD, 0xb)
                (EFFECT_ID_SHOT, 0xc)
                (EFFECT_ID_LENSFLARE, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (GROUND_TOUCH, 0x6)
            );
        }
    }
    pub mod wiifit_towel {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod wiifit_wiibo {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod rosetta_meteor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SET_ATTACK_VECTOR, 0x6)
            );
        }
    }
    pub mod rosetta_pointer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (PHASE_POS, 0x3)
                (PHASE_LENGTH, 0x4)
            );
        }
    }
    pub mod rosetta_powerstar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (ANGLE, 0x3)
                (ADD_SCALE, 0x4)
                (ADD_ANGLE, 0x5)
                (METEOR_ANGLE, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (FRAME, 0xa)
                (SHOOT_INTERVAL, 0xb)
                (SHOOT_START_FRAME, 0xc)
                (SHOOT_END_FRAME, 0xd)
            );
        }
    }
    pub mod rosetta_ring {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (MOTION_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (BURST, 0x6)
            );
        }
    }
    pub mod rosetta_starpiece {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ANGLE, 0x3)
                (ROT, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLOR, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (BURST, 0x6)
            );
        }
    }
    pub mod rosetta_tico {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (PARENT_LR, 0x3)
                (PARENT_SPEED_X, 0x4)
                (PARENT_SPEED_Y, 0x5)
                (TARGET_X, 0x6)
                (TARGET_Y, 0x7)
                (TARGET_Z, 0x8)
                (TARGET_LENGTH, 0x9)
                (TARGET_LR, 0xa)
                (ATTACK_LR, 0xb)
                (PARENT_ROT_X, 0xc)
                (PARENT_ROT_Y, 0xd)
                (PARENT_ROT_Z, 0xe)
                (TURN_FRAME, 0xf)
                (MOTION_TRANS_ADD_SPEED_X, 0x10)
                (MOTION_TRANS_ADD_SPEED_Y, 0x11)
                (LOITER_LR, 0x12)
                (COMMON_1, 0x13)
                (COMMON_2, 0x14)
                (COMMON_3, 0x15)
                (SMASH_ATTACK_MUL, 0x13)
                (WARP_OFFSET_X, 0x13)
                (WARP_OFFSET_Y, 0x14)
                (WARP_OFFSET_Z, 0x15)
                (SPECIAL_HI_ANGLE, 0x13)
                (SPECIAL_HI_MODEL_ANGLE, 0x14)
                (SPECIAL_S_PARENT_X, 0x13)
                (SPECIAL_S_PARENT_LENGTH, 0x14)
            );
            make_work_ids!(
                Int,
                Instance,
                (EXTEND_BUFFER, 0xa)
                (HIT_WALL_FRAME, 0xb)
                (PARENT_STATUS_KIND, 0xc)
                (PARENT_SITUATION_KIND, 0xd)
                (PARENT_MOTION_KIND, 0xe)
                (ATTACK_MOTION_KIND, 0xf)
                (DAMAGE_REACTION_FRAME, 0x10)
                (DAMAGE_FLY_REFLECT_COUNT, 0x11)
                (JUMP_COUNT, 0x12)
                (ATTACKER_COLOR, 0x13)
                (ATTACK_SERIAL, 0x14)
                (HIT_STOP_IGNORE_JOSTLE_FRAME, 0x15)
                (SEARCH_FREE_ATTACK_LR, 0x16)
                (RETURN_EFFECT_HANDLE, 0x17)
                (MOTION_TRANS_ADD_SPEED_FRAME, 0x18)
                (FOLLOW_SPEED_UP_FRAME, 0x19)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x20)
                (FREE, 0x6)
                (CANCEL, 0x7)
                (DAMAGE_PARENT, 0x8)
                (CATCH_PARENT, 0x9)
                (CHANGE_MOTION_PARENT, 0xa)
                (ENABLE_TRANSITION_SELF, 0xb)
                (TRANSITION_SELF, 0xc)
                (TARGET_MOVE, 0xd)
                (TARGET_FLIP, 0xe)
                (TARGET_SAME_FLOOR, 0xf)
                (LOITER_MOVE, 0x10)
                (FREE_DISABLE_JUMP, 0x11)
                (FOLLOW_SYNC_MOTION_PARENT, 0x12)
                (TOGGLE_TWINKLE_EFFECT, 0x13)
                (RETURN, 0x14)
                (PLAYED_DEAD_SE, 0x15)
                (DEAD_PARENT, 0x16)
                (DEAD_OUTSIDE, 0x17)
                (DEAD_DAMAGE, 0x18)
                (DEAD_INHALED, 0x19)
                (CAMERA_OFF, 0x1a)
                (REBIRTH_XLU, 0x1b)
                (APPEAL, 0x1c)
                (NO_DEAD, 0x1d)
                (JOSTLE, 0x1e)
                (MENU_MODE, 0x1f)
            );
        }
        pub mod status {
            use super::*;
            pub mod common {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (ARG_0, 0x2)
                    (PAD_FLAG, 0x0)
                    (COMMAND_FLAG_CAT1, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x2)
                    (CATCH_SPEED, 0x0)
                    (JOSTLE_WAIT, 0x1)
                );
            }
            pub mod demo {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (WARP_ORIGIN_Y, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x3)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (SETUP, 0x2)
                    (END, 0x3)
                );
            }
            pub mod standby {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (START, 0x2)
                    (FRAME, 0x3)
                );
            }
            pub mod warp {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x0)
                    (END, 0x5)
                    (WARP_POS, 0x1)
                    (WARP_ORIGIN_X, 0x2)
                    (WARP_ORIGIN_Y, 0x3)
                    (WARP_ORIGIN_Z, 0x4)
                );
            }
            pub mod attack_common {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (PARENT_MOTION, 0x3)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (TERM, 0x2)
                );
            }
            pub mod attack {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (COUNT_100, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (ENABLE_COMBO, 0x2)
                    (ENABLE_100, 0x3)
                    (CONNECT_COMBO, 0x4)
                );
            }
            pub mod attack_100 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (REBOUND_SPEED, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION_LOOP_NUM, 0x4)
                    (HIT_NEAR_COUNT, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (CONTINU, 0x2)
                    (CONTINUE_CHECK, 0x3)
                    (ENABLE_COMBO_PRECEDE, 0x4)
                    (LOOPED, 0x5)
                );
            }
            pub mod attack_3 {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (KIND, 0x2)
                );
            }
            pub mod attack_4 {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOTION_FRAME, 0x1)
                    (ATTACK_MUL, 0x2)
                    (REACTION_MUL, 0x3)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (SMASH_KIND, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (START_SMASH_HOLD, 0x2)
                    (ATTACK_LW4_KINETIC_PARAM, 0x3)
                );
            }
            pub mod damage {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (FLY_START_POS_X, 0x1)
                    (FLY_START_POS_Y, 0x2)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x3)
                    (HIT_STOP_FRAME, 0x4)
                    (REFLECT_DIRECTION, 0x5)
                    (CHECK_REFLECT_FRAME, 0x6)
                    (AURA_FRAME, 0x7)
                    (AURA_COLOR, 0x8)
                    (AURA_EFFECT_HANDLE, 0x9)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (END_REACTION, 0x2)
                    (REACTION_CANCEL, 0x3)
                    (ELEC, 0x4)
                    (ENABLE_GRAVITY, 0x5)
                    (ENABLE_DOWN, 0x6)
                    (ENABLE_AURA, 0x7)
                );
            }
            pub mod follow {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (MOVE, 0x2)
                );
            }
            pub mod follow_turn {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (MOTION, 0x2)
                );
            }
            pub mod free_wait {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x0)
                    (TARGET_LENGTH, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (WAIT_FRAME, 0x3)
                );
            }
            pub mod free_ground_move {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FALL_FRAME, 0x3)
                    (BRAKE_FRAME, 0x4)
                    (BRAKE_MOTION, 0x5)
                    (JOSTLE_FRAME, 0x6)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                );
            }
            pub mod free_brake {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x4)
                    (MOTION, 0x5)
                    (JOSTLE_FRAME, 0x6)
                );
            }
            pub mod free_jump_squat {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x0)
                    (LR, 0x1)
                );
            }
            pub mod special_n_common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (RATE, 0x1)
                    (CHARGE_MOTION_RATE, 0x2)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (TERM, 0x3)
                    (REFLECT, 0x2)
                );
            }
            pub mod special_n_shoot {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (FRAME, 0x3)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (RUN_SMOKE_FRAME, 0x3)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x2)
                    (HIT, 0x3)
                    (HIT_FIGHTER, 0x4)
                );
            }
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (SHOOT_PATERN, 0x3)
                    (SHOOT_NUM, 0x4)
                    (SHOOT_FRAME, 0x5)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (TERM, 0x6)
                    (SHOOT, 0x2)
                    (END, 0x3)
                    (LIMIT, 0x4)
                    (UNSYNC_LR, 0x5)
                );
            }
            pub mod special_hi {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (START, 0x0)
                    (JUMP_SPEED, 0x1)
                    (JUMP_ANGLE, 0x2)
                    (JUMP_ANGLE_SPEED, 0x3)
                    (END_GRAVITY, 0x4)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x3)
                    (INTERRUPT_FRAME, 0x4)
                    (INTERRUPT_STATUS_KIND, 0x5)
                    (INTERRUPT_STATUS_KIND_NEXT, 0x6)
                    (SITUATION_KIND, 0x2)
                );
            }
            pub mod special_lw {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x3)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x1)
                    (TERM, 0x2)
                );
            }
        }
    }
    pub mod littlemac_championbelt {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod littlemac_doclouis {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod littlemac_littlemacg {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod littlemac_sweatlittlemac {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod littlemac_throwsweat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gekkouga_bunshin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gekkouga_gekkougas {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x11)
                (TARGET_BASE_POS_X, 0x3)
                (TARGET_BASE_POS_Y, 0x4)
                (TARGET_OFFSET_X, 0x5)
                (TARGET_OFFSET_Y, 0x6)
                (TO_TARGET_LR, 0x7)
                (MOVE_TARGET_X, 0x8)
                (MOVE_TARGET_Y, 0x9)
                (OFFSET_LR, 0xa)
                (ATTACK_LR, 0xb)
                (MOVE_SPEED, 0xc)
                (MOVE_FRAME, 0xd)
                (MOVE_ANGLE, 0xe)
                (MOVE_START_FRAME, 0xf)
                (MOON_MOVE_SPEED, 0x10)
            );
            make_work_ids!(
                Int,
                Instance,
                (REQUEST_LOOP_DAMAGE_MOTION, 0xb)
                (HIT_NUM, 0xa)
                (BLACKOUT_FRAME, 0xc)
                (TARGET_ID, 0xd)
                (TARGET_ID_MAX, 0x14)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ENABLE_FINISH, 0x6)
                (HIT, 0x7)
                (HIT_LINK, 0x8)
                (MOVE_START, 0x9)
                (ATTACK_END, 0xa)
                (CHANGE_STATUS, 0xc)
                (TARGET_NOREAC_OFF, 0xd)
            );
        }
    }
    pub mod gekkouga_monsterball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gekkouga_moon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gekkouga_shuriken {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CHARGE_RATE, 0x3)
                (CHARGE_FRAME_MAX, 0x4)
                (ANGLE, 0x5)
                (SHOOT_SCALE, 0x6)
                (CHARGE_LEVEL_RATIO, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFF_ID, 0xa)
                (HIT_COUNT, 0xb)
                (VANISH_COUNT, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (SHOT, 0x6)
                (CHANGE_FLY_MOT, 0x7)
                (IS_POCKET, 0x8)
                (CHANGE_EFFECT, 0x9)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (NEXT_MOTION_KIND, 0x0)
                (NEXT_MOTION_KIND_AIR, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod gekkouga_tatami {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gekkouga_water {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (SET_ANGLE_COUNT, 0xa)
            );
        }
    }
    pub mod palutena_autoaimbullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (HAS_EFFECT_BOUND, 0x6)
            );
        }
    }
    pub mod palutena_autoreticle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
            );
        }
    }
    pub mod palutena_beam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (BEAM_LENGTH, 0x3)
            );
        }
    }
    pub mod palutena_blackhole {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod palutena_explosiveflame {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (INIT_X, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (RESERVE_MISS, 0x6)
            );
        }
    }
    pub mod palutena_explosiveflame_reserve {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (PALUTENA_PREV_POS_X, 0x3)
                (PALUTENA_PREV_POS_Y, 0x4)
            );
        }
    }
    pub mod palutena_gate {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod palutena_godwing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod palutena_reflectionboard {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (DAMAGE_STORE, 0x3)
            );
        }
    }
    pub mod pacman_artisticpoint {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pacman_bigpacman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x13)
                (START_LR, 0x3)
                (START_POS_X, 0x4)
                (START_POS_Y, 0x5)
                (FINISH_POS_X, 0x6)
                (FINISH_POS_Y, 0x7)
                (SPEED, 0x8)
                (ACCEL, 0x9)
                (MOVE_DEGREE, 0xa)
                (PATH_DEGREE, 0xb)
                (EAT_TARGET_LENGTH, 0xc)
                (PREV_POS_X, 0xd)
                (PREV_POS_Y, 0xe)
                (PREV_MOVE_FRAME, 0xf)
                (PARTIAL_MOTION_RATE, 0x10)
                (ATTACK_MUL, 0x11)
                (ATTACK_REACTION_MUL, 0x12)
            );
            make_work_ids!(
                Int,
                Instance,
                (EAT_TARGET_OBJECT_ID, 0xa)
                (SOUND_HANDLE, 0xb)
                (SOUND_LABEL, 0xc)
                (NO_EAT_FRAME, 0xd)
                (FINISH_EFFECT_HANDLE, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLASH, 0x6)
                (EAT, 0x7)
                (FINISH_SPEED, 0x8)
            );
        }
        pub mod status {
            use super::*;
            pub mod move_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x0)
                );
            }
        }
    }
    pub mod pacman_esa {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (NUM, 0xa)
                (PREV_POS_X, 0x3)
                (PREV_POS_Y, 0x4)
                (ANGLE, 0x5)
                (POS_X, 0x6)
                (POS_Y, 0x7)
                (POS_Z, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
                (TOUCH_FLAG, 0xb)
                (TOUCH_SE_HANDLE, 0xc)
                (TOUCH_SE_COUNT, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (STOP, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (PUT_ESA, 0x0)
                (TERM, 0x1)
            );
        }
    }
    pub mod pacman_fairy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pacman_firehydrant {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x15)
                (POWER_UP, 0x3)
                (ROT, 0x4)
                (ROT_SPEED, 0x5)
                (HIT_ROT_SPEED, 0x6)
                (ROT_NUM, 0x7)
                (ROT_CENTER_X, 0x8)
                (ROT_CENTER_Y, 0x9)
                (GROUND_EDGE_X, 0xa)
                (GROUND_EDGE_Y, 0xb)
                (GROUND_ANGLE, 0xc)
                (GROUND_ANGLE_PRE, 0xd)
                (WIDTH, 0xe)
                (HEIGHT, 0xf)
                (OFFSET, 0x10)
                (CHECK_PRE_X, 0x11)
                (CHECK_PRE_Y, 0x12)
                (CHECK_POST_X, 0x13)
                (CHECK_POST_Y, 0x14)
                (WATER_OFFSET_X, 0x12)
                (WATER_OFFSET_Y, 0x13)
                (WATER_OFFSET_UP, 0x14)
            );
            make_work_ids!(
                Int,
                Instance,
                (OWNER_ID, 0xa)
                (HP, 0xb)
                (WAIT_SHOOT, 0xc)
                (SHOOT_NUM, 0xd)
                (SMASH_REFLECT_NUM, 0xe)
                (ROT_LR, 0xf)
                (DOWN_LIFE, 0x10)
                (TOUCH_POS, 0x11)
                (HIT_COUNT, 0x12)
                (LANDING_NUM, 0x13)
                (PRE_SHOT_EFFECT_ID_0, 0x14)
                (PRE_SHOT_EFFECT_ID_1, 0x15)
                (POCKET_FOUNDER_ID, 0x16)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT, 0x6)
                (INIT_CENTER, 0x7)
                (SET_CENTER, 0x8)
                (USE_RIGHT_EDGE, 0x9)
                (USE_LEFT_EDGE, 0xa)
                (USE_EDGE, 0xb)
                (KEEP_ANGLE, 0xc)
                (DECCEL, 0xd)
                (ROT_REVERSE, 0xe)
                (FLY_TOUCH, 0xf)
                (WATER_REVERSE, 0x10)
                (WATER_UP, 0x11)
                (CHANGE_AREA_SIZE, 0x12)
            );
        }
    }
    pub mod pacman_firehydrant_water {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
                (NUM, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (HIT_EFFECT_FRAME, 0xa)
                (HIT_EFFECT_WAIT, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SHOOT_UP, 0x6)
            );
        }
    }
    pub mod pacman_trampoline {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (START, 0x9)
                (TERM, 0x18)
                (OWNER_OBJECT_ID, 0xa)
                (JUMP_COUNT, 0xb)
                (MOTION_KIND_AIR, 0xc)
                (AREA_BODY_FRAME, 0xd)
                (RIDER_NUM, 0xe)
                (XLU_FRAME, 0xf)
                (RIDER_OBJECT_ID_0, 0x10)
                (RIDER_OBJECT_ID_1, 0x11)
                (RIDER_OBJECT_ID_2, 0x12)
                (RIDER_OBJECT_ID_3, 0x13)
                (RIDER_OBJECT_ID_4, 0x14)
                (RIDER_OBJECT_ID_5, 0x15)
                (RIDER_OBJECT_ID_6, 0x16)
                (RIDER_OBJECT_ID_7, 0x17)
            );
            make_work_ids!(
                Flag,
                Instance,
                (INVOKE_AIR, 0x6)
                (FALL_HIT, 0x7)
                (ON_JUMP, 0x8)
                (CAN_OWNER, 0x9)
                (DEAD_AREA, 0xa)
                (AREA_BODY, 0xb)
            );
        }
        pub mod status {
            use super::*;
            pub mod wait {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (NOTIFY_JUMP, 0x0)
                    (TERM, 0x1)
                );
            }
        }
    }
    pub mod reflet_book {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (START_MAT_FRAME, 0xa)
                (END_MAT_FRAME, 0xb)
                (CURRENT_MAT_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (IS_EXAUSTING, 0x6)
            );
        }
    }
    pub mod reflet_chrom {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (LAUNCH_OK, 0x6)
                (LAUNCH_HIT, 0x7)
            );
        }
    }
    pub mod reflet_elwind {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID_BULLET, 0xa)
            );
        }
    }
    pub mod reflet_gigafire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HP, 0x3)
                (PILLAR_POS_X, 0x4)
                (PILLAR_POS_Y, 0x5)
                (PILLAR_POS_Z, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID_BULLET, 0xa)
                (OPPONENT_CATEGORY, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (VANISH, 0x6)
            );
        }
    }
    pub mod reflet_thunder {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TRON_X_LENGTH, 0x3)
                (TRON_X_ORIGINAL_LENGTH, 0x4)
                (TRON_MIN_HOLD_TIME, 0x5)
                (TRON_MAX_LENGTH, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID_BULLET, 0xa)
                (OPPONENT_CATEGORY, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (IS_CAPTURED, 0x6)
                (IS_REFLECT, 0x7)
                (IS_PARRY, 0x8)
            );
        }
    }
    pub mod reflet_thudner {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE_TRON_ORIGIN, 0xb)
            );
        }
    }
    pub mod reflet_window {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shulk_dunban {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shulk_fiora {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shulk_riki {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod koopajr_batten {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (OFFSET_X, 0x3)
                (OFFSET_Y, 0x4)
                (OFFSET_Z, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (HIT_FRAME_COUNT, 0xa)
                (MAIN_EFFECT_ID, 0xb)
                (SPLASH_EFFECT_ID, 0xc)
                (FINAL_FINISH_EFFECT_ID, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (JUMP, 0x6)
                (CHANGE_EFFECT, 0x7)
            );
        }
    }
    pub mod koopajr_cannonball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (CHARGE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (GRAVITY_FRAME, 0xa)
                (BOUND_NUM, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT_WALL, 0x6)
                (HOP, 0x7)
                (ATTACK, 0x8)
            );
        }
    }
    pub mod koopajr_hammer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod koopajr_kart {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (NO_FLOOR, 0x6)
            );
        }
    }
    pub mod koopajr_magichand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod koopajr_picopicohammer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod koopajr_remainclown {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (START_SITUATION_KIND, 0xa)
                (BURST_FRAME, 0xb)
            );
        }
    }
    pub mod koopajr_shadowmario {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (OFFSET_X, 0x3)
                (OFFSET_Y, 0x4)
                (OFFSET_Z, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (JUMP, 0x6)
                (GENERATE_BATTEN, 0x7)
            );
        }
    }
    pub mod duckhunt_can {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x12)
                (ROTATION_SPEED, 0x3)
                (MAX_FALL_SPEED, 0x4)
                (HP, 0x5)
                (GIVEN_ATTACK_POWER, 0x6)
                (NEXT_ROT_SPEED, 0x7)
                (MAX_HP, 0x8)
                (FALL_ACCEL, 0x9)
                (SPIN_DIR, 0xa)
                (PRE_HOP_INIT_SPEED_Y, 0xb)
                (HIT_SIZE, 0xc)
                (BASE_HOP_SPEED_X, 0xd)
                (YARARE_SPEED_X, 0xe)
                (YARARE_SPEED_Y, 0xf)
                (GROUND_MOVEMENT_SPEED_X, 0x10)
                (GROUND_MOVEMENT_SPEED_Y, 0x11)
            );
            make_work_ids!(
                Int,
                Instance,
                (INVALID_HOP_FRAMES, 0xa)
                (CURRENT_FLYING_FRAME, 0xb)
                (MAX_COUNT, 0xc)
                (HOP_TIMES, 0xd)
                (GUN_MARK_TYPE, 0xe)
                (EXPLODE_EFFECT_HANDLE, 0xf)
                (ORIGINAL_HIT_TEAM, 0x10)
                (ORIGINAL_TEAM, 0x11)
                (THREE_PS_INVALID_FRAMES_AFTER_ATTACK_CHANGE, 0x12)
                (THREE_PS_USER_ID, 0x13)
                (HIT_TEAM_NO, 0x14)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLY, 0x6)
                (HOP_BY_ATTACK, 0x7)
                (HOP_BY_FIGTHER, 0x8)
                (HOP_BY_3PS, 0x9)
                (HOP_BY_ATTACK_SAME_TEAM, 0xa)
                (IS_REFLECTED, 0xb)
                (LETS_REVERSE, 0xc)
                (RECORD_YARARE_SPEED, 0xd)
                (IS_ABSORBED, 0xe)
                (IS_TAKENOUT, 0xf)
                (GO_EXPLODE, 0x10)
            );
        }
    }
    pub mod duckhunt_clay {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x30)
                (ORIGINAL_ROT_X, 0x3)
                (ORIGINAL_ROT_Y, 0x4)
                (ORIGINAL_ROT_Z, 0x5)
                (TARGET_ROT_X, 0x6)
                (TARGET_ROT_Y, 0x7)
                (TARGET_ROT_Z, 0x8)
                (HISTORY_POS_X_0, 0x9)
                (HISTORY_POS_Y_0, 0xa)
                (HISTORY_POS_X_1, 0xb)
                (HISTORY_POS_Y_1, 0xc)
                (HISTORY_POS_X_2, 0xd)
                (HISTORY_POS_Y_2, 0xe)
                (HISTORY_POS_X_3, 0xf)
                (HISTORY_POS_Y_3, 0x10)
                (HISTORY_POS_X_4, 0x11)
                (HISTORY_POS_Y_4, 0x12)
                (HISTORY_POS_X_5, 0x13)
                (HISTORY_POS_Y_5, 0x14)
                (HISTORY_POS_X_6, 0x15)
                (HISTORY_POS_Y_6, 0x16)
                (HISTORY_POS_X_7, 0x17)
                (HISTORY_POS_Y_7, 0x18)
                (HISTORY_POS_X_8, 0x19)
                (HISTORY_POS_Y_8, 0x1a)
                (HISTORY_POS_X_9, 0x1b)
                (HISTORY_POS_Y_9, 0x1c)
                (HISTORY_POS_X_10, 0x1d)
                (HISTORY_POS_Y_10, 0x1e)
                (HISTORY_POS_X_11, 0x1f)
                (HISTORY_POS_Y_11, 0x20)
                (HISTORY_POS_X_12, 0x21)
                (HISTORY_POS_Y_12, 0x22)
                (HISTORY_POS_X_13, 0x23)
                (HISTORY_POS_Y_13, 0x24)
                (HISTORY_POS_X_14, 0x25)
                (HISTORY_POS_Y_14, 0x26)
                (HISTORY_POS_X_15, 0x27)
                (HISTORY_POS_Y_15, 0x28)
                (HP, 0x29)
                (MAX_HP, 0x2a)
                (RELEASE_POS_X, 0x2b)
                (RELEASE_POS_Y, 0x2c)
                (RELEASE_POS_Z, 0x2d)
                (ACCEL_Y, 0x2e)
                (ROT_ANGLE_AXIS, 0x2f)
            );
            make_work_ids!(
                Int,
                Instance,
                (RESTORE_COUNT, 0xa)
                (BROKEN_EFFECT_HANDLE, 0xb)
                (HISTORY_HEAD, 0xc)
                (HISTORY_CURRENT_NUM, 0xd)
                (HIT_INVALID_FRAME, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLY, 0x6)
                (BY_SMASH, 0x7)
                (IS_REFLECTED, 0x8)
                (IS_REBOUND, 0x9)
                (IS_ABSORBED, 0xa)
                (IS_TAKENOUT, 0xb)
                (IS_HIT, 0xc)
                (IS_ADD_ACCEL_Y, 0xd)
                (IS_WALL_HIT, 0xe)
                (IS_FLOOR_HIT, 0xf)
                (IS_OPPONENT_BREAK, 0x10)
                (IS_DISABLE, 0x11)
            );
        }
    }
    pub mod duckhunt_finalbird {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (START_POS_X, 0x3)
                (START_POS_Y, 0x4)
                (START_POS_Z, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (TIME, 0xa)
            );
        }
    }
    pub mod duckhunt_finalcan {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod duckhunt_finaldog {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod duckhunt_finalduck {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod duckhunt_finalenemy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (GUN_OFFSET_Z, 0x3)
                (GUN_OFFSET_Y, 0x4)
                (ROT_Y, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (KIND, 0xa)
                (READY_FRAME, 0xb)
                (WAIT_FRAME, 0xc)
                (ROT_WAIT_FRAME, 0xd)
                (ROT_PATTERN, 0xe)
            );
        }
    }
    pub mod duckhunt_finalgrass {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod duckhunt_finalgunman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (GUN_OFFSET_Z, 0x3)
                (GUN_OFFSET_Y, 0x4)
            );
        }
    }
    pub mod duckhunt_grass {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod duckhunt_gunman {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0xb)
                (HP, 0x3)
                (MAX_HP, 0x4)
                (YARARE_SPEED_X, 0x5)
                (YARARE_SPEED_Y, 0x6)
                (GUN_OFFSET_Z, 0x7)
                (GUN_OFFSET_Y, 0x8)
                (DIE_SMOKE_SCALE, 0x9)
                (SHOOT_LENGTH, 0xa)
            );
            make_work_ids!(
                Int,
                Instance,
                (KIND, 0xa)
                (END_EFFECT_HANDLE_ID, 0xb)
                (RAY_EFFECT_HANDLE_ID, 0xc)
                (SHOOT_COUNT, 0xd)
                (DAMAGE_FLY_BOUND_NUM, 0xe)
                (RESULT_MUZZLEFLASH_EFFECT_HANDLE_ID, 0xf)
                (RESULT_COUNTER, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (AIR_START, 0x6)
                (SPECIAL_DEAD, 0x7)
                (RECORD_YARARE_SPEED, 0x8)
                (DEAD_DAMAGE_FLY, 0x9)
                (RESULT_SHOT, 0xa)
                (RESULT_SHOT_AFTER, 0xb)
            );
        }
        pub mod status {
            use super::*;
            pub mod common {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (BOUNDED, 0x0)
                    (VISIBILITY_CHANGED, 0x1)
                    (TERM, 0x2)
                );
            }
        }
    }
    pub mod duckhunt_gunmanbullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0xd)
                (HIT_WALL_POS_X, 0x3)
                (HIT_WALL_POS_Y, 0x4)
                (HIT_OPPONENT_DISTANCE, 0x5)
                (REFLECTED_POS_X, 0x6)
                (REFLECTED_POS_Y, 0x7)
                (LENGTH, 0x8)
                (ANGLE, 0x9)
                (PARENT_POS_X, 0xa)
                (PARENT_POS_Y, 0xb)
                (RAY_EFFECT_LENGTH, 0xc)
            );
            make_work_ids!(
                Int,
                Instance,
                (HIT_OPPONENT_ID, 0xa)
                (GUNMAN_ID, 0xb)
                (ATTACK_DELAY_FRAME, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT_WALL, 0x6)
                (DAMAGE_DONE, 0x7)
                (SEARCH_SET, 0x8)
                (IS_REFLECTED, 0x9)
                (IS_PARRY, 0xa)
            );
        }
    }
    pub mod duckhunt_kurofukuhat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod duckhunt_reticle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (SIZE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (USER_ID, 0xa)
                (RETICLE_EFFECT_HANDLE, 0xb)
                (RETICLE_EFFECT_HANDLE_2, 0xc)
                (RETICLE_EFFECT_HANDLE_3, 0xd)
                (RETICLE_EFFECT_HANDLE_4, 0xe)
                (RETICLE_EFFECT_HANDLE_5, 0xf)
                (RETICLE_EFFECT_LIFE, 0x10)
                (RETICLE_EFFECT_LIFE_2, 0x11)
                (RETICLE_EFFECT_LIFE_3, 0x12)
                (RETICLE_EFFECT_LIFE_4, 0x13)
                (RETICLE_EFFECT_LIFE_5, 0x14)
            );
        }
    }
    pub mod ryu_hadoken {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
                (STRENGTH, 0xb)
                (HIT_NUM, 0xc)
                (HOP_COUNTER, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (COMMAND, 0x6)
                (LAST_HIT, 0x7)
                (HIT_END, 0x8)
                (HIT_SPEED_MUL, 0x9)
                (HIT_ABSORBER, 0xa)
                (HOP_SPEED_MUL, 0xb)
            );
        }
    }
    pub mod ryu_sack {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod ryu_shinkuhadoken {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod ken_shinryuken {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ADD_ATTACK_COUNT, 0xa)
                (ADD_ATTACK_DEC_FRAME, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ADD_ATTACK, 0x6)
            );
        }
    }
    pub mod cloud_fusionsword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod cloud_wave {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (GROUND_ANGLE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (HIT_COLLISION_HIT, 0x6)
                (ATTACK_POWER_LOW, 0x7)
            );
        }
    }
    pub mod kamui_dragonhand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HOLD_RATE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (IS_KAMUI, 0x6)
            );
        }
    }
    pub mod kamui_ryusensya {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HOLD_RATE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (WN_REMOVED, 0x6)
            );
        }
    }
    pub mod kamui_spearhand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (GROUND_JOSTLE_DISTANCE, 0x3)
                (GROUND_JOSTLE, 0x4)
                (GROUND_LINE_PREV_POS_X, 0x5)
                (GROUND_LINE_PREV_POS_Y, 0x6)
                (GROUND_LINE_POS_RATIO, 0x7)
                (ATTACH_PREV_POS_X, 0x8)
                (ATTACH_PREV_POS_Y, 0x9)
                (ATTACH_PREV_HIT_POS_X, 0xa)
                (ATTACH_PREV_HIT_POS_Y, 0xb)
                (SE_RANDOM_VALUE, 0xc)
                (TARGET_POS_X, 0xd)
                (TARGET_POS_X_TAIL, 0x13)
                (TARGET_POS_Y, 0x14)
                (TARGET_POS_Y_TAIL, 0x1a)
                (TARGET_ORIGINAL_POS_X, 0x1b)
                (TARGET_ORIGINAL_POS_X_TAIL, 0x21)
                (TARGET_ORIGINAL_POS_Y, 0x22)
                (TARGET_ORIGINAL_POS_Y_TAIL, 0x28)
            );
            make_work_ids!(
                Int,
                Instance,
                (TARGET_NOT_LINK_NUM, 0xa)
                (TARGET_NUM, 0xb)
                (TARGET_OBJECT_ID, 0xc)
                (TARGET_OBJECT_ID_TAIL, 0x12)
                (TARGET_BACKSHIELD_NUM, 0x13)
                (TARGET_BACKSHIELD_OBJECT_ID, 0x14)
                (TARGET_BACKSHIELD_OBJECT_ID_TAIL, 0x1a)
                (TARGET_COLLISION_BUFFER_ID, 0x1b)
                (TARGET_HIT_STOP_FRAME_TO_FIGHTER, 0x1c)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xc)
                (PRESS_GROUND, 0x6)
                (PIERCE_GROUND, 0x7)
                (LINE_LR, 0x8)
                (PIERCE_GROUND_DONE, 0x9)
                (PIERCE_GROUND_SUCCESS, 0xa)
                (IS_NO_MOVE_COLLISION, 0xb)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ATTACK_S4_REBOUND_ATTACK_POWER, 0x0)
                (ATTACK_S4_REBOUND_ATTACK_LR, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x6)
                (PIERCE_RELEASE, 0x0)
                (PIERCE_IS_WALL, 0x1)
                (PIERCE_IS_CHECK_PIERCE, 0x2)
                (PIERCE_IS_HIT_ATTACK, 0x3)
                (PIERCE_PLAY_MISSED_SE, 0x4)
                (PIERCE_IS_PLAY_VC_01, 0x5)
            );
        }
    }
    pub mod kamui_waterdragon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPECIAL_LW_POWER, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (SET_SPECIAL_LW_POWER, 0x6)
                (SYNC_SPYCLOAK, 0x7)
                (SET_CRITICAL_HIT_SE, 0x8)
            );
        }
    }
    pub mod kamui_waterstream {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod bayonetta_bat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0xb)
                (BAT_FRAME, 0x3)
                (MOTION_RATE, 0x4)
                (TRA_X, 0x5)
                (TRA_Y, 0x6)
                (TRA_Z, 0x7)
                (ROT_Z, 0x8)
                (OLD_POS_X, 0x9)
                (OLD_POS_Y, 0xa)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARENT_STATUS_KIND, 0xa)
                (INTER_FRAME, 0xb)
                (COSTUME_KIND, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CONSTRAINT_ROT_N, 0x6)
                (VISIBLE_EFFECT, 0x7)
                (CHANGE_VISIBLE_EFFECT, 0x8)
            );
        }
    }
    pub mod bayonetta_gomorrah {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COSTUME_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SEND_NEXT_SCENE, 0x6)
            );
        }
    }
    pub mod bayonetta_hair {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COSTUME_KIND, 0xa)
            );
        }
    }
    pub mod bayonetta_specialn_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CHARGE_BULLET, 0x6)
            );
        }
    }
    pub mod bayonetta_wickedweavearm {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (INTERRUPT_MOT_FRAME, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COSTUME_KIND, 0xa)
                (MOTION_KIND, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (REMOVE, 0x6)
                (INTERRUPTION, 0x7)
                (INVISIBLE, 0x8)
                (DISABLE_LINK_STOP, 0x9)
                (CANCEL_EFFECT, 0xa)
            );
        }
    }
    pub mod bayonetta_wickedweaveleg {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (INTERRUPT_MOT_FRAME, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COSTUME_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (REMOVE, 0x6)
                (INTERRUPTION, 0x7)
                (INVISIBLE, 0x8)
                (DISABLE_LINK_STOP, 0x9)
                (CANCEL_EFFECT, 0xa)
            );
        }
    }
    pub mod inkling_blaster {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (R, 0x3)
                (G, 0x4)
                (B, 0x5)
            );
        }
    }
    pub mod inkling_brush {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (R, 0x3)
                (G, 0x4)
                (B, 0x5)
            );
        }
    }
    pub mod inkling_copy_inklinggun {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod inkling_copy_inklingtank {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (TANK_HEIGHT, 0x3)
                (TANK_RADIUS, 0x4)
                (INK_MAX, 0x5)
                (SUB_INK_SPECIAL_LW, 0x6)
            );
        }
    }
    pub mod inkling_inkbullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK, 0x3)
                (INK, 0x4)
                (R, 0x5)
                (G, 0x6)
                (B, 0x7)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (HIT, 0x6)
                (HIT_WALL, 0x7)
            );
        }
    }
    pub mod inkling_megaphonelaser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (SHOOT_DEGREE, 0x3)
                (R, 0x4)
                (G, 0x5)
                (B, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (FIRE_COUNT, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CHANGE_DEGREE, 0x6)
            );
        }
    }
    pub mod inkling_roller {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (POWER_UP, 0x3)
                (R, 0x4)
                (G, 0x5)
                (B, 0x6)
                (INK, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (OWNER_ID, 0xa)
                (INK_ID, 0xb)
            );
        }
    }
    pub mod inkling_rollerink {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROLLER_POS_X, 0x3)
                (ROLLER_POS_Y, 0x4)
                (R, 0x5)
                (G, 0x6)
                (B, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_LINE_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (PROCESS, 0x6)
                (REMOVE_INK, 0x7)
                (REMOVE, 0x8)
                (DISCONNECT, 0x9)
            );
        }
    }
    pub mod inkling_slosher {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (R, 0x3)
                (G, 0x4)
                (B, 0x5)
            );
        }
    }
    pub mod inkling_splash {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (R, 0x3)
                (G, 0x4)
                (B, 0x5)
            );
        }
    }
    pub mod inkling_splashbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HP, 0x3)
                (CHARGE_RATE, 0x4)
                (STOP_FRAME, 0x5)
                (RADIUS, 0x6)
                (ATTACK, 0x7)
                (INK, 0x8)
                (R, 0x9)
                (G, 0xa)
                (B, 0xb)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_NUM, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xb)
                (DOWN_LIFE, 0x6)
                (EXPLODE, 0x7)
                (LANDING, 0x8)
                (REFLECT, 0x9)
                (HOP, 0xa)
            );
        }
    }
    pub mod inkling_squid {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (R, 0x3)
                (G, 0x4)
                (B, 0x5)
                (SPECIAL_HI_ROT_X, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (JET_EFFECT_HANDLE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (NO_FLIP, 0x6)
            );
        }
    }
    pub mod ridley_breath {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (CHARGE_RATE, 0x3)
                (ATTACK_MUL, 0x4)
                (SCALE, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (BREATH_NUM, 0xa)
                (BOUND_NUM, 0xb)
                (CHANGE_SCALE_LIFE, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (CHANGE_SCALE, 0x6)
            );
        }
    }
    pub mod ridley_gunship {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TARGET_NUM, 0xa)
            );
        }
    }
    pub mod simon_axe {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (STICK_X, 0x3)
                (PREV_CENTER_X, 0x4)
                (PREV_CENTER_Y, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xb)
                (HOP, 0x6)
                (HOP_BOUND, 0x7)
                (HOP_LANDING, 0x8)
                (NO_OFFSET, 0x9)
                (IN_POCKET, 0xa)
            );
        }
        pub mod status {
            use super::*;
            pub mod fly {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (MOTION_RATE_VAL, 0x0)
                );
            }
            pub mod hop {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (GROUND_TOUCH_POS_X, 0x0)
                    (GROUND_TOUCH_POS_Y, 0x3)
                    (GROUND_TOUCH_NORMAL_X, 0x6)
                    (GROUND_TOUCH_NORMAL_Y, 0x9)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (GROUND_TOUCH_FLAG, 0x0)
                    (GROUND_TOUCH_NUM, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (HORIZON, 0x0)
                );
            }
        }
    }
    pub mod simon_coffin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ROT_Y, 0x3)
                (ROT_Y_SPEED, 0x4)
                (ROT_Y_ACCEL, 0x5)
                (ROT_Y_SPEED_MAX, 0x6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (START_ROT_Y, 0x6)
            );
        }
    }
    pub mod simon_cross {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x6)
                (SPEED, 0x3)
                (ROT_SPEED, 0x4)
                (ROT_SPEED_TURN, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (FORCE_TURN, 0x6)
                (REFLECT, 0x7)
                (FLICK, 0x8)
                (DISABLE_PUT_IN_POCKET, 0x9)
            );
        }
        pub mod status {
            use super::*;
            pub mod fly {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TURN_FRAME, 0x0)
                );
            }
            pub mod turn {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (STAY_FRAME, 0x0)
                );
            }
        }
    }
    pub mod simon_crystal {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod simon_stake {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod simon_whip {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (PHYSICS_NODE_LENGTH, 0x9)
                (PHYSICS_NODE_AIR_RESISTANCE, 0xa)
                (HOLD_STICK_X, 0xb)
                (HOLD_STICK_Y, 0xc)
                (HOLD_STICK_X_REINPUT, 0xd)
                (HOLD_STICK_Y_REINPUT, 0xe)
                (HOLD_STICK_X_CHAIN_SE, 0xf)
                (HOLD_STICK_Y_CHAIN_SE, 0x10)
                (GUARD_2ND_MOTION_FRAME, 0x11)
                (GUARD_2ND_MOTION_WEIGHT, 0x12)
                (DEFAULT_GRAVITY, 0x13)
                (DEFAULT_AIR_RESISTANCE, 0x14)
                (STATUS_GRAVITY, 0x15)
                (STATUS_AIR_RESISTANCE, 0x16)
            );
            make_work_ids!(
                Int,
                Instance,
                (REFLECT_PHYSICS_UPDATE_COUNT, 0x10)
                (HOLD_MOVE_STICK_COUNT, 0x11)
                (HOLD_TIP_NODE_MOVE_AFTER_COUNT, 0x12)
                (HOLD_REINPUT_COUNTER, 0x13)
                (HOLD_SE_HANDLE, 0x14)
                (HOLD_SE_SPEED_AFTER_FRAME, 0x15)
                (HOLD_SE_REQUEST_AFTER_FRAME, 0x16)
                (HOLD_CHAIN_SE_STICK_COUNT, 0x17)
                (HOLD_ATTACK_SPEED_COUNT_TOP, 0x18)
                (HOLD_ATTACK_SPEED_COUNT_MAX, 0x22)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0x18)
                (UPDATE_NODE_FIX_LIST, 0xd)
                (HOLD_WALL, 0xe)
                (HOLD_ATTACK_SLEEP, 0xf)
                (HOLD_BOUND_SE_ONCE, 0x10)
                (HOLD_SE_GROUND, 0x11)
                (HOLD_SE_REQUESTED, 0x12)
                (HOLD_SE_CHAIN_REQUESTED, 0x13)
                (REFLECT_PHYSICS_UPDATED, 0x14)
                (VISIBILITY_CHAIN_2, 0x15)
                (REFLECT_REMOVE_EFFECT, 0x16)
                (REMOVE_AFTER_IMAGE, 0x17)
            );
        }
        pub mod status {
            use super::*;
            pub mod hold {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (PHYSICS_NODE_NUM, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ATTACK_NUM, 0x0)
                );
            }
        }
    }
    pub mod simon_whip2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod simon_whiphand {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod simon_whipwire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (PHYSICS_NODE_LENGTH, 0x9)
                (HANG_LENGTH, 0xa)
            );
            make_work_ids!(
                Int,
                Instance,
                (HANG_REWIND_COUNT, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0xe)
                (FAILURE, 0xd)
            );
        }
    }
    pub mod krool_backpack {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (OWNER_SPEED_X, 0x3)
                (OWNER_SPEED_Y, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (SHAKE_COUNT, 0xa)
                (STATUS_COUNT, 0xb)
            );
        }
    }
    pub mod krool_blunderbuss {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod krool_crown {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x11)
                (SCALE, 0x3)
                (BASE_POS_X, 0x4)
                (BASE_POS_Y, 0x5)
                (SPEED_X, 0x6)
                (SPEED_Y, 0x7)
                (OWNER_TOP_OFFSET_Y, 0x8)
                (THROW_SPEED_X, 0x9)
                (THROW_SPEED_Y, 0xa)
                (ROT_NODE_POS_X, 0xb)
                (ROT_NODE_POS_Y, 0xc)
                (MOTION_RATE, 0xd)
                (STAGE_GRAVITY_ANGLE, 0xe)
                (ROT_POS_X_PREV, 0xf)
                (ROT_POS_X, 0x10)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARENT_OWNER_ID, 0xa)
                (MY_OWNER_ID, 0xb)
                (REBOUND_AFTER_FRAME_COUNT, 0xc)
                (FALL_COUNT, 0xd)
                (FOLLOW_START_COUNT, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_U_TURN, 0x6)
                (IS_REQUEST_U_TURN, 0x7)
                (IS_HIT, 0x8)
                (IS_REBOUND, 0x9)
                (IS_THROW_MOTION_END, 0xa)
                (IS_BOUND, 0xb)
                (IS_REFLECT, 0xc)
                (IS_HOP, 0xd)
                (IS_INHALED_REMOVE, 0xe)
                (IS_REFLECT_HIT_SYNC_MOTION_FRAME, 0xf)
                (IS_U_TURN_SHIFT_MOTION_FRAME_RESERVE, 0x10)
            );
        }
    }
    pub mod krool_ironball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (SCALE, 0x3)
                (ANGLE, 0x4)
                (TEMP_SPEED_X, 0x5)
                (TEMP_SPEED_Y, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARENT_OWNER_ID, 0xa)
                (MY_OWNER_ID, 0xb)
                (COUNT, 0xc)
                (BOUND_NUM, 0xd)
                (BOUND_EFFECT_NUM, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT_CEIL, 0x6)
                (HOP, 0x7)
                (HOP_ATTACK_CLEAR, 0x8)
                (ATTACK, 0x9)
                (SPIT, 0xa)
                (SWALLOWED, 0xb)
                (SWALLOWED_EXEC, 0xc)
            );
        }
    }
    pub mod krool_piratehat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod krool_spitball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (ANGLE, 0x3)
                (THROWN_FIGHTER_DAMAGE, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (TARGET_OBJECT_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (THROWN_FIGHTER_LINK, 0x6)
                (THROWN_FIGHTER_LINKED, 0x7)
                (HIT_WALL, 0x8)
                (HOP, 0x9)
                (FRONT_SHOOT, 0xa)
                (UP_SHOOT, 0xb)
                (BACK_SHOOT, 0xc)
                (UNABLE_HIT, 0xd)
                (SHOW_OWNER, 0xe)
                (RESERVE_SHOW_OWNER, 0xf)
            );
        }
    }
    pub mod shizue_balloon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shizue_broom {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shizue_bucket {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shizue_clayrocket {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DAMAGE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (DAMAGE_OBJECT_ID, 0xa)
                (DAMAGE_TEAM_NO, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (BURST_DAMAGE, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (HIT, 0x0)
            );
        }
    }
    pub mod shizue_fishingline {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0xd)
            );
        }
    }
    pub mod shizue_fishingrod {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (LINE_LENGTH, 0x3)
                (REEL_SPEED, 0x4)
                (PULL_SPEED, 0x5)
                (HOOK_RESTITUTION_RATE, 0x6)
                (LINE_JOINT_LENGTH, 0x7)
                (HOOK_ANGLE, 0x8)
                (THROW_POS_X, 0x9)
                (THROW_POS_Y, 0xa)
                (FLOAT_SPEED_Y, 0xb)
                (HOOK_OFFSET_X, 0xc)
                (HOOK_OFFSET_Y, 0xd)
                (HOOK_OFFSET_Z, 0xe)
            );
            make_work_ids!(
                Int,
                Instance,
                (LINE_JOINT_ID_START, 0xa)
                (LINE_JOINT_ID_END, 0xb)
                (LINE_JOINT_INDEX_START, 0xc)
                (LINE_JOINT_INDEX_END, 0xd)
                (LINE_JOINT_NUM, 0xe)
                (HOOK_JOINT_ID, 0xf)
                (HIT_OBJECT_ID, 0x10)
                (TARGET_OBJECT_CATEGORY, 0x11)
                (TARGET_OBJECT_ID, 0x12)
                (CUT_JOINT_ID, 0x13)
                (SHOOT_FRAME, 0x14)
                (WATER_EFFECT_HANDLE, 0x15)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x12)
                (SHOOT, 0x6)
                (FLICK, 0x7)
                (ENABLE_BOUND, 0x8)
                (ENABLE_HOOK, 0x9)
                (HIT, 0xa)
                (HIT_EVENT, 0xb)
                (HOOK, 0xc)
                (SET_ROPE_PRECEDE, 0xd)
                (ROPE_PRECEDE, 0xe)
                (FLOAT_TOUCH_FLOOR, 0xf)
                (IN_WATER, 0x10)
                (ITEM_HOOKED, 0x11)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod shizue_picopicohammer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shizue_pompon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shizue_swing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod shizue_trafficsign {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gaogaen_championbelt {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gaogaen_monsterball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod gaogaen_rope {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (GAOGAEN_OBJECT_ID, 0xa)
                (THROWN_FIGHTER_OBJECT_ID, 0xb)
                (CANCEL_FRAME, 0xc)
                (REBOUND_FRAME, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (SWING_THROWN, 0x6)
                (SWING_THROWN_FIGHTER_HIT, 0x7)
            );
        }
    }
    pub mod gaogaen_rope2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod miifighter_hat {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod miifighter_ironball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (SPEED, 0x3)
                (ANGLE, 0x4)
                (POWER_RATE, 0x5)
                (REFLECTED_SPEED_X, 0x6)
                (REFLECTED_SPEED_Y, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_COUNT, 0xa)
                (FALL_MAX_SPEED_COUNT, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (TOUCH, 0x6)
                (HIT, 0x7)
                (FALL_MAX_SPEED, 0x8)
                (REFLECT, 0x9)
                (DAMAGE_REFLECT, 0xa)
                (DAMAGE_REFLECTED, 0xb)
            );
        }
    }
    pub mod miiswordsman_chakram {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (SPEED, 0x3)
                (ANGLE, 0x4)
                (FALL_ANGLE, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (APPLY_FLY_SPEED, 0x6)
                (REFLECT, 0x7)
                (FLICK, 0x8)
                (ENABLE_FALL, 0x9)
                (ONE_F_FALL, 0xa)
            );
        }
    }
    pub mod miiswordsman_lightshuriken {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (SPEED, 0x3)
                (ANGLE, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (APPLY_FLY_SPEED, 0x6)
                (GROUND_TOUCH, 0x7)
            );
        }
    }
    pub mod miiswordsman_tornadoshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (PREV_STATUS, 0xa)
            );
        }
    }
    pub mod miiswordsman_wave {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (ANGLE, 0x3)
                (SPEED, 0x4)
                (INIT_SCALE, 0x5)
                (SCALE_MAX, 0x6)
                (SCALE_MUL, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_TYPE, 0xa)
            );
        }
    }
    pub mod miigunner_attackairf_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod miigunner_bottomshoot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID_BULLET, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT, 0x6)
            );
        }
    }
    pub mod miigunner_flamepillar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (SPD, 0x3)
                (DIR, 0x4)
            );
        }
    }
    pub mod miigunner_fullthrottle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (DST, 0x3)
                (SPD, 0x4)
                (ANG, 0x5)
                (LR, 0x6)
                (SCALE, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (EFH_BULLET, 0xb)
                (FINAL_MOT2ND, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (STOP_ROLL, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (COUNT, 0x0)
            );
        }
    }
    pub mod miigunner_grenadelauncher {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (ROTATE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (BOUND_COUNT, 0xa)
            );
        }
    }
    pub mod miigunner_groundbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (REFLECTED_SPEED_X, 0x3)
                (REFLECTED_SPEED_Y, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (RANDOM_ROT_Z, 0xa)
                (BOUND_COUNT, 0xb)
                (HIT_AFTER_COUNT, 0xc)
                (DAMAGE_REFLECT_AFTER_COUNT, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLASH_START, 0x6)
                (TOUCH, 0x7)
                (DAMAGE_REFLECT, 0x8)
                (DAMAGE_REFLECTED, 0x9)
                (REFLECT, 0xa)
            );
        }
    }
    pub mod miigunner_gunnercharge {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0xa)
                (CHARGE, 0x3)
                (CHARGE_OFFSET_X, 0x4)
                (CHARGE_OFFSET_Y, 0x5)
                (CHARGE_OFFSET_Z, 0x6)
                (SHOOT_LR, 0x7)
                (SHOOT_ANGLE, 0x8)
                (TRANS_JOINT_SCALE, 0x9)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFH_BULLET, 0xa)
                (OWNER_FT_KIND, 0xb)
                (EFH_BULLET_FOLLOW, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (GROUND_TOUCH, 0x6)
            );
        }
    }
    pub mod miigunner_laser {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (DST, 0x3)
                (SPD, 0x4)
                (ANG, 0x5)
                (LR, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (EFH_BULLET, 0xb)
            );
        }
    }
    pub mod miigunner_miimissile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (ROT, 0x3)
                (SPEED_MUL, 0x4)
                (START_LR, 0x5)
                (SWALLOWED_SPEED_MUL, 0x6)
                (MODEL_ROT_ANGLE, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (ACC_F, 0xb)
                (LAST_TARGET_ID, 0xc)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (GRAVITY_ANGLE, 0x0)
                (TERM, 0x1)
            );
            make_work_ids!(
                Int,
                Status,
                (STAY_COUNT, 0x0)
            );
        }
    }
    pub mod miigunner_rapidshot_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (SCALE, 0x3)
                (BASE_LENGTH, 0x4)
                (SPEED, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
                (EFFECT_KIND, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (GROUND_TOUCH, 0x6)
            );
        }
    }
    pub mod miigunner_stealthbomb {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
                (COUNT, 0x1)
                (ANGLE, 0x2)
                (SPEED, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (EP, 0x0)
                (TEAM, 0x1)
                (OWNER_ID, 0x2)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
                (REFLECT, 0x0)
            );
        }
    }
    pub mod miigunner_stealthbomb_s {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (SCALE, 0x3)
                (RATE, 0x4)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LIFE, 0x0)
                (COUNT, 0x1)
                (SIZE, 0x2)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod miigunner_supermissile {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (ROT, 0x3)
                (MODEL_ROT_ANGLE, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (ACC_F, 0xb)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (STAY_COUNT, 0x0)
                (TERM, 0x1)
            );
        }
    }
    pub mod popo_blizzard {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (REBOUND_ATTACK_SIZE, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (REBOUND_OBJECT_ID, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x2)
                (REBOUND_EFFECT, 0x0)
                (REBOUND_EFFECT_DONE, 0x1)
            );
        }
    }
    pub mod popo_condor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (OWNER_ID, 0xa)
                (ICEBERG_OBJECT_ID, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (NO_TURN, 0x6)
                (CAN_CATCH, 0x7)
            );
        }
        pub mod status {
            use super::*;
            pub mod loop_ {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (TURN_COUNTER, 0x0)
                );
            }
            pub mod end {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (UNLINK, 0x0)
                );
            }
        }
    }
    pub mod popo_iceberg {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SCALE_X, 0x3)
                (SCALE_Y, 0x4)
                (TARGET_POS_X, 0x5)
                (TARGET_POS_Y, 0x6)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (CHANGE_ATTACK_MAIN, 0x6)
                (CHANGE_ATTACK_SUB, 0x7)
                (CHANGE_ATTACK_UPDATE_BASE, 0x8)
                (CHANGE_ATTACK_UPDATE, 0x9)
            );
        }
        pub mod status {
            use super::*;
            pub mod common {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ROTATE_DEGREE, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (ADVANCE_COUNTER, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (TERM, 0x0)
                );
            }
        }
    }
    pub mod popo_iceberghit {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ICEBERG_OBJECT_ID, 0xa)
            );
        }
    }
    pub mod popo_iceberg_wind {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x5)
                (SCALE_X, 0x3)
                (SCALE_Y, 0x4)
            );
        }
    }
    pub mod popo_iceshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_POWER, 0x3)
                (FOUNDER_POS_X, 0x4)
                (FOUNDER_POS_Y, 0x5)
                (TOP_DEGREE, 0x6)
                (ROT_DEGREE, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE_FRAME, 0xa)
                (HP, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (REMOVE, 0x6)
                (REFLECT, 0x7)
                (COLLI_ATTACK_LOG_SHIELD, 0x8)
                (COLLI_ATTACK_LOG_OTHER, 0x9)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (ROTATE_DEGREE_SPEED, 0x0)
                (ROTATE_DEGREE, 0x1)
                (REFLECTED_SPEED_X, 0x2)
                (REFLECTED_SPEED_Y, 0x3)
                (ANOTHER_ICESHOT_SPEED_X, 0x4)
                (ANOTHER_ICESHOT_SCALE, 0x5)
                (TO_AIR_SPEED_VECTOR_X, 0x6)
                (TO_AIR_SPEED_VECTOR_Y, 0x7)
                (GROUND_EFFECT_HANDLE_LR, 0x8)
                (SUSPEND_START_FALL_SPEED_Y, 0x9)
                (SUSPEND_START_FALL_ACCEL_Y, 0xa)
            );
            make_work_ids!(
                Int,
                Status,
                (ROTATE_Y_REVERSE_FRAME, 0x0)
                (ROTATE_Y_REVERSE_COUNTER, 0x1)
                (GROUND_EFFECT_HANDLE, 0x2)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x7)
                (DAMAGE_REFLECT, 0x0)
                (DAMAGE_TO_AIR, 0x1)
                (HIT_ANOTHER_ICESHOT, 0x2)
                (INIT_ROTATE, 0x3)
                (GROUND_TO_AIR, 0x4)
                (TO_AIR_HOP, 0x5)
                (SUSPEND_START_FALL, 0x6)
            );
        }
    }
    pub mod popo_rubber {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (LENGTH, 0x3)
                (BASE_SCALE, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (JOINT_NUM, 0xa)
                (PARTNER_OBJECT_ID, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (DEACTIVATE, 0x6)
            );
        }
    }
    pub mod popo_whitebear {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Int,
                Status,
                (TARGET_OBJECT_ID, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x0)
            );
        }
    }
    pub mod packun_bosspackun {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ATTACK_MUL, 0x3)
                (REACTION_MUL, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (HOP_FRAME, 0xa)
                (TARGET_NOT_LINK_NUM, 0xb)
                (TARGET_NUM, 0xc)
                (TARGET_OBJECT_ID_LEFT, 0xd)
                (TARGET_OBJECT_ID_RIGHT, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (ATTACK_MOTION, 0x6)
                (FIRST_LANDING, 0x7)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (NECK_ROTATE_DEGREE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x9)
                (HOP_HIGH, 0x0)
                (HOP_LANDING_START_TURN, 0x1)
                (HOP_LANDING_HOP_SPEED_Y_ADD, 0x2)
                (HOP_LANDING_TURN, 0x3)
                (FLAME_DAMAGE_LEFT, 0x4)
                (FLAME_DAMAGE_RIGHT, 0x5)
                (FLAME_EFFECT_LEFT, 0x6)
                (FLAME_EFFECT_RIGHT, 0x7)
                (END_CAPTURE, 0x8)
            );
        }
    }
    pub mod packun_mario {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod packun_poisonbreath {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (CHARGE_RATIO, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_HANDLE, 0xa)
            );
        }
        pub mod status {
            use super::*;
            pub mod shoot {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (DONE_REMOVE_EFFECT, 0x0)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (START_SCALE, 0x0)
                (SCALE, 0x1)
            );
        }
    }
    pub mod packun_spikeball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPEED_RATE, 0x3)
                (POWER_RATE, 0x4)
                (POS_X_START, 0x5)
                (POS_X_END, 0x9)
                (POS_Y_START, 0xa)
                (POS_Y_END, 0xe)
            );
            make_work_ids!(
                Int,
                Instance,
                (OWNER_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (COLLISION_HIT, 0x6)
                (REACTIVE, 0x7)
                (KIRBY, 0x8)
                (STAGE_GRAVITY, 0x9)
            );
        }
        pub mod status {
            use super::*;
            pub mod loop__ {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (DOWN_LOWER_Y, 0x0)
                    (DIFF_X_FROM_FOUNDER, 0x1)
                    (MOTION_FRAME, 0x2)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (UPDOWN_STATUS, 0x0)
                    (HIT_REASON, 0x1)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (FOLLOW_X, 0x0)
                    (FOLLOW_UP_Y, 0x1)
                    (FOLLOW_DOWN_Y, 0x2)
                    (REFLECTED, 0x3)
                );
            }
            pub mod hop {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (DEGREE, 0x3)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (HOP_NUM, 0x2)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (CLEARED_ATTACK, 0x4)
                    (ATTACK_HIT_BOUND, 0x5)
                );
            }
            pub mod start {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (IS_GROUND, 0x6)
                );
            }
            pub mod shoot {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (ADD_ACCEL_X, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (PASSABLE_END, 0x7)
                );
            }
            pub mod wait {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (UPDATED_DIFF_X, 0x8)
                );
            }
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x5)
            );
        }
    }
    pub mod jack_background {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod jack_bus {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod jack_doyle {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (PREV_TARGET_POS_X, 0x3)
                (PREV_TARGET_POS_Y, 0x4)
                (SPEED, 0x5)
                (LIFE, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARENT_STATUS_PREV, 0xa)
                (FOLLOW_MOTION, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (FLIP, 0x6)
                (SOLID, 0x7)
                (FOLLOW_KINETIC, 0x8)
                (FOLLOW_DAMAGE, 0x9)
                (FOLLOW_DAMAGE_VANISH, 0xa)
                (FOLLOW_NEXT_DAMAGE_VANISH_END, 0xb)
                (FOLLOW_VANISH_CANCEL, 0xc)
                (VISIBLE_AURA, 0xd)
                (INVISIBLE, 0xe)
                (LOW_MODE, 0xf)
                (MUTE_VOICE, 0x10)
            );
        }
        pub mod status {
            use super::*;
            pub mod follow {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (CHANGE_MOTION, 0x0)
                    (VANISH_END, 0x1)
                );
            }
        }
    }
    pub mod jack_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARAM_ID, 0xa)
            );
        }
    }
    pub mod jack_mona {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod jack_windummy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (MOVE_END, 0x6)
            );
        }
    }
    pub mod jack_wing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod jack_wirerope {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x8)
                (TERM, 0xf)
                (EC_LENGTH, 0x9)
                (EC_TARGET_LENGTH, 0xa)
                (EXTEND_SPEED, 0xb)
                (CONTRACT_SPEED, 0xc)
                (TARGET_FRAME, 0xd)
                (CONTRACT_END_FRAME, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CHECK_GROUND, 0xd)
            );
        }
    }
    pub mod brave_blue {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod brave_crash {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SP, 0x3)
                (MAX_SP, 0x4)
                (SP_RATIO, 0x5)
                (CAMERA_RENGE_ADD_UP, 0x6)
                (CAMERA_RENGE_ADD_DOWN, 0x7)
                (CAMERA_RENGE_ADD_FRONT, 0x8)
                (CAMERA_RENGE_ADD_BACK, 0x9)
            );
            make_work_ids!(
                Int,
                Instance,
                (FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (STRENGTH, 0x6)
            );
        }
    }
    pub mod brave_deathball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (TYPE2, 0x6)
                (SUCCEEDED, 0x7)
            );
        }
    }
    pub mod brave_explosion {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (STRENGTH, 0x6)
            );
        }
    }
    pub mod brave_fireball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (GROUND_EFFECT_COUNT, 0xa)
                (EFFECT_HANDLE_M_0, 0xb)
                (EFFECT_HANDLE_M_1, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (HIT_WALL, 0x6)
                (ATTACK, 0x7)
                (HIT_NO_0_M, 0x8)
                (HIT_NO_1_M, 0x9)
            );
        }
    }
    pub mod brave_flash {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (TYPE2, 0x6)
            );
        }
    }
    pub mod brave_lightning {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (NUM, 0x9)
                (HEAD, 0x3)
                (TAIL, 0x4)
                (GROUND_Y, 0x5)
                (DIR, 0x6)
                (MOVE_DIST, 0x7)
                (REFLECTOR_HIT_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLLISION_LOG_GROUP, 0xa)
                (EF_ID_HEAD, 0xb)
                (EF_ID_TAIL, 0xc)
                (FIGHTER_OBJECT_ID, 0xd)
                (BRAVE_OBJECT_ID, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x12)
                (GROUND_CORRECT, 0x6)
                (COLLISION_CHECK, 0x7)
                (SELF_REMOVE, 0x8)
                (REFLECTOR_HIT_SELF, 0x9)
                (REFLECTOR_HIT_NOT_SELF, 0xa)
                (MTRANS_SMPL_AIR, 0xb)
                (MTRANS_SMPL_GROUND, 0xc)
                (MTRANS_SMPL_MOTION_END, 0xd)
                (IS_HEAD, 0xe)
                (IS_TAIL, 0xf)
                (IS_PUT_IN_POCKET, 0x10)
                (TAKE_FROM_POCKET, 0x11)
            );
        }
    }
    pub mod brave_sleep {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TOUCH_GROUND, 0x6)
                (TERM, 0x7)
            );
        }
    }
    pub mod brave_spark {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLLISION_LOG_GROUP, 0xa)
            );
        }
    }
    pub mod brave_tornado {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod buddy_bigbird {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
        }
    }
    pub mod buddy_bigbirdbase {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod buddy_bird {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
        }
    }
    pub mod buddy_bullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
                (LEVEL, 0xb)
                (BOUND_KIND, 0xc)
                (BUDDY_FOUNDER_ID, 0xd)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x1)
                (ROT_Z, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (BOUNDED, 0x0)
            );
        }
    }
    pub mod buddy_horn {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod buddy_pad {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DEGREE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (SHOOTED, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (FALL_HIT, 0x0)
                (FALL_LAY_HIT, 0x1)
                (FALL_LEANING_TO_THE_LEFT, 0x2)
                (FALL_LEANING_TO_THE_RIGHT, 0x3)
                (WAIT_SEARCH_HIT, 0x4)
                (BOUND_ROT_START, 0x5)
                (REFLECTED, 0x6)
            );
        }
    }
    pub mod buddy_partner {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod buddy_piece {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod buddy_strings {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod dolly_burst {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOTION_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT_SUPER_SPECIAL, 0x6)
                (AIR, 0x7)
            );
        }
    }
    pub mod dolly_cap {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (SPEED_X, 0x3)
                (SPEED_Y, 0x4)
                (ROT_X, 0x5)
                (ROT_Y, 0x6)
                (ROT_SPEED_X, 0x7)
                (ROT_SPEED_Y, 0x8)
            );
        }
    }
    pub mod dolly_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (GROUND_ANGLE, 0x3)
            );
        }
    }
    pub mod dolly_wave {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (GROUND_ANGLE, 0x3)
                (SPEED_GROUND, 0x4)
                (SPEED_AIR, 0x5)
                (POS_OFFSET_X, 0x6)
                (SWALLOWED_SPEED_MUL, 0x7)
            );
            make_work_ids!(
                Int,
                Instance,
                (STRENGTH, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (TYPE_AIR, 0x6)
                (HIT_AIR, 0x7)
            );
        }
    }
    pub mod master_arrow1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SHOOT_ANGLE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (IS_MAX, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (HIT_POS_X, 0x0)
                (HIT_POS_Y, 0x1)
                (END_POS_X, 0x2)
                (END_POS_Y, 0x3)
                (HIT_OPPONENT_DISTANCE, 0x4)
                (PRE_MOVE_POS_X, 0x5)
                (PRE_MOVE_POS_Y, 0x6)
                (EFFECT_NEST_POS_X_START, 0x7)
                (EFFECT_NEST_POS_X_END, 0x8)
                (EFFECT_NEST_POS_Y_START, 0x9)
                (EFFECT_NEST_POS_Y_END, 0xa)
                (EFFECT_TIP_POS_X_START, 0xb)
                (EFFECT_TIP_POS_X_END, 0xc)
                (EFFECT_TIP_POS_Y_START, 0xd)
                (EFFECT_TIP_POS_Y_END, 0xe)
                (BACKUP_HIT_OPPONENT_DISTANCE_START, 0xf)
                (BACKUP_HIT_OPPONENT_DISTANCE_END, 0x10)
                (BACKUP_HIT_POS_X_START, 0x11)
                (BACKUP_HIT_POS_X_END, 0x12)
                (BACKUP_HIT_POS_Y_START, 0x13)
                (BACKUP_HIT_POS_Y_END, 0x14)
            );
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x5)
                (HIT_OPPONENT_ID, 0x0)
                (REFLECTED_STATUS, 0x1)
                (EFFECT_HANDLE_START, 0x2)
                (EFFECT_HANDLE_END, 0x3)
                (HIT_REFLECTOR_OPPONENT_ID_DEBUG, 0x4)
            );
            make_work_ids!(
                Flag,
                Status,
                (HIT_GROUND, 0x0)
                (SEARCH_HIT_COLLISION, 0x1)
                (ATTACK_HIT_COLLISION, 0x2)
                (ATTACKED, 0x3)
                (ABSORBED_ATTACK, 0x4)
                (REFLECTED_ATTACK, 0x5)
                (PARRY_ATTACK, 0x6)
            );
        }
    }
    pub mod master_axe {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (BASE_ATTACK_X, 0xc)
                (BASE_ATTACK_Y, 0xd)
                (BASE_ATTACK_Z, 0xe)
                (OFFSET_X, 0xf)
                (OFFSET_Y, 0x10)
                (OFFSET_Z, 0x11)
            );
            make_work_ids!(
                Int,
                Instance,
                (CRITICAL_ATTACK_ID, 0x13)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0x10)
                (SET_BASE_ATTACK, 0xd)
                (MOVE_ATTACK, 0xe)
                (PULLED, 0xf)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (PARENTS_POS_X, 0x0)
                (PARENTS_POS_Y, 0x1)
                (ATTACK_POS_X_START, 0x2)
                (ATTACK_POS_X_END, 0x9)
                (ATTACK_POS_Y_START, 0xa)
                (ATTACK_POS_Y_END, 0x11)
            );
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (INIT_ATTACK, 0x0)
            );
        }
    }
    pub mod master_background {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod master_baton {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod master_bow {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod master_spear {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod master_sword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x8)
                (TERM, 0x10)
                (EC_LENGTH, 0x9)
                (EC_TARGET_LENGTH, 0xa)
                (CONTRACT_SPEED, 0xb)
                (TARGET_FRAME, 0xc)
                (SECOND_GRAVITY, 0xd)
                (SECOND_AIR_RESISTANCE, 0xe)
                (CONNECT_DIST_MAX, 0xf)
            );
            make_work_ids!(
                Int,
                Instance,
                (COLOR, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (PHYSICS, 0xd)
                (PHYSICS_ENABLE, 0xe)
                (HIT_EFFECT, 0xf)
                (HIT_EFFECT_DETACH, 0x10)
                (IGNORE_LINE_TYPE1, 0x11)
            );
        }
        pub mod status {
            use super::*;
            pub mod extend {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (COLLIDE_END, 0x0)
                );
            }
            pub mod fail {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (BACK_SPEED, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (STOP_FRAME, 0x2)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x2)
                );
            }
        }
    }
    pub mod master_sword2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod master_swordflare {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod tantan_ally1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod tantan_allyarm1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (INDEX, 0xa)
            );
        }
    }
    pub mod tantan_allyarmbullet1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (INDEX, 0xa)
            );
        }
    }
    pub mod tantan_beam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (OFFSET_X, 0x3)
                (OFFSET_Y, 0x4)
                (TIP_POS_X, 0x5)
                (TIP_POS_Y, 0x6)
                (TIP_POS_Z, 0x7)
                (PARENT_JOINT_POS_X, 0x8)
                (PARENT_JOINT_POS_Y, 0x9)
            );
            make_work_ids!(
                Int,
                Instance,
                (BEAM_EFFECT_HANDLE, 0xa)
                (BEAM_TIP_BASE_EFFECT_HANDLE, 0xb)
                (BEAM_TIP_ADD_EFFECT_HANDLE, 0xc)
                (BEAM_NEST_BASE_EFFECT_HANDLE, 0xd)
                (BEAM_NEST_ADD_EFFECT_HANDLE, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x9)
                (INIT_ATTACK_SLEEP, 0x6)
                (IS_REINFORCE, 0x7)
                (BEAM_EFFECT_DONE, 0x8)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (LENGTH, 0x0)
                (ATTACK_HIT_POS_X, 0x1)
                (ATTACK_HIT_POS_Y, 0x2)
                (HIT_OPPONENT_DISTANCE, 0x3)
                (ROTATE_DEGREE, 0x4)
            );
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x2)
                (HIT_GROUND_EFFECT_HANDLE, 0x0)
                (HIT_GROUND_LINE_ID, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (INIT_LENGTH, 0x0)
                (INIT_ROTATE_DEGREE, 0x1)
                (HIT_GROUND, 0x2)
                (ATTACK_HIT_COLLISION, 0x3)
                (SUCCESSFUL, 0x4)
                (WARP, 0x5)
                (FOUNDER_SCALING, 0x6)
            );
        }
    }
    pub mod tantan_gongfinal {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod tantan_punch1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (POWER_UP_ATTACK, 0x3)
                (POWER_UP_ATTACK_ATTR, 0x4)
                (CHILD_POWER_UP_ATTACK, 0x5)
                (CHILD_POWER_UP_ATTACK_ATTR, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (MOTION_KIND, 0xa)
                (PUNCH3_WIND_EFFECT_HANDLE, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT_SHOT, 0x6)
                (HIT_NOT_SHOT, 0x7)
                (HIT_SHIELD, 0x8)
                (IS_LEFT, 0x9)
                (AIR, 0xa)
                (IS_LONG, 0xb)
                (IS_REINFORCE, 0xc)
                (CHANGE_HIT_EFFECT, 0xd)
                (IS_KIRBY, 0xe)
                (IS_DRAGONIZE, 0xf)
                (BOUND, 0x10)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (DRAGON_DEGREE, 0x0)
                (TARGET_POS_X, 0x1)
                (TARGET_POS_Y, 0x2)
                (TARGET_POS_Z, 0x3)
                (INIT_PARENT_ROTATE_X, 0x4)
                (INIT_PARENT_ROTATE_Y, 0x5)
                (INIT_PARENT_ROTATE_Z, 0x6)
                (DRAGON_ROTATE_X_DEGREE, 0x7)
                (DRAGON_ROTATE_Y_DEGREE, 0x8)
            );
            make_work_ids!(
                Int,
                Status,
                (TERM, 0x2)
                (TARGET_CATEGORY, 0x0)
                (TARGET_OBJECT_ID, 0x1)
            );
            make_work_ids!(
                Flag,
                Status,
                (TO_BEAM_STATUS, 0x0)
                (TARGET_EXIST, 0x1)
                (DAMAGE_END, 0x2)
                (FORCE_END, 0x3)
            );
        }
    }
    pub mod tantan_ring {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ANGLE, 0x3)
                (SPEED, 0x4)
                (REWIND_SPEED, 0x5)
                (TARGET_X, 0x6)
                (TARGET_Y, 0x7)
                (THETA, 0x8)
                (ANGLE_BASE, 0x9)
            );
            make_work_ids!(
                Int,
                Instance,
                (REWIND_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0xc)
                (TERM, 0x11)
                (IS_REINFORCE, 0xd)
                (IS_LONG, 0xe)
                (IS_AIR, 0xf)
                (TARGET, 0x10)
            );
        }
    }
    pub mod tantan_spiralleft {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x8)
                (TERM, 0x15)
                (ANGLE, 0x9)
                (GRAVITY_ANGLE, 0xa)
                (ATTACK_MUL, 0xb)
                (ATTACK_MUL_SCALE, 0xc)
                (ATTACK_SHIELD_STIFF_MUL, 0xd)
                (SHOOT_FRAME_MUL, 0xe)
                (REWIND_FRAME_MUL, 0xf)
                (INIT_LENGTH, 0x10)
                (POWER_UP_ATTACK, 0x11)
                (POWER_UP_ATTACK_ATTR, 0x12)
                (PUNCH_CHILD_POWER_UP_ATTACK, 0x13)
                (PUNCH_CHILD_POWER_UP_ATTACK_ATTR, 0x14)
            );
            make_work_ids!(
                Int,
                Instance,
                (PUNCH_OBJECT_ID, 0x10)
                (PUNCH_KIND, 0x11)
                (IGNORE_FLAG, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IS_LONG, 0xd)
                (IS_LEFT, 0xe)
                (IS_PHYSICS, 0xf)
                (IS_AIR, 0x10)
                (IS_DRAGONIZE, 0x11)
                (IS_SPECIAL_HI_AIR_PHYSICS, 0x12)
                (IS_CURVE, 0x13)
                (IS_REINFORCE, 0x14)
                (HIT, 0x15)
                (IS_CATCH_PHYSICS, 0x16)
                (IGNORE_LINE_TYPE1, 0x17)
                (IS_KIRBY_COPY, 0x18)
                (IS_WARP, 0x19)
            );
        }
        pub mod status {
            use super::*;
            pub mod shoot {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (CONTROL_ANGLE, 0x1)
                    (CURVE_ANGLE, 0x2)
                    (X_ANGLE, 0x3)
                    (FINISH_PAUSE_TIP_ROTATE_X, 0x4)
                    (FINISH_PAUSE_TIP_ROTATE_Y, 0x5)
                    (FINISH_PAUSE_TIP_ROTATE_Z, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PHASE, 0x3)
                    (FRAME, 0x4)
                    (BRAKE_FRAME, 0x5)
                    (CONTROL_WAIT_FRAME, 0x6)
                    (CURVE_WAIT_FRAME, 0x7)
                    (BEAM_SHOOT_COUNTER, 0x8)
                    (BEAM_START_COUNTER, 0x9)
                    (KIRBY_HIT_STATUS, 0xa)
                    (KIRBY_END_MOTION_FRAME, 0xb)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x2)
                    (REFLECT_GROUND, 0x3)
                    (IGNORE_FLOOR, 0x4)
                    (SET_TIP_RESIST_Y, 0x5)
                    (CLEAR_TIP_SPEED, 0x6)
                    (INIT_FINISH_PAUSE_TIP_ROTATE, 0x7)
                    (HIT_SLOW, 0x8)
                );
            }
            pub mod rewind {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SPEED, 0x1)
                    (BACK_SPEED, 0x2)
                    (FRAME_MUL, 0x3)
                    (FINISH_PAUSE_TIP_ROTATE_X, 0x4)
                    (FINISH_PAUSE_TIP_ROTATE_Y, 0x5)
                    (FINISH_PAUSE_TIP_ROTATE_Z, 0x6)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (PHASE, 0x2)
                    (FRAME, 0x3)
                    (BRAKE_FRAME, 0x4)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x2)
                    (IGNORE_FLOOR, 0x4)
                    (SET_TIP_RESIST_Y, 0x5)
                    (CLEAR_TIP_SPEED, 0x6)
                    (INIT_FINISH_PAUSE_TIP_ROTATE, 0x7)
                    (TERM, 0x8)
                );
            }
            pub mod bound {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x0)
                );
            }
            pub mod dragon {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (TERM, 0x1)
                    (NEST_POS_X, 0x0)
                    (NEST_POS_Y, 0x1)
                    (NEST_POS_Z, 0x2)
                    (TIP_POS_X, 0x3)
                    (TIP_POS_Y, 0x4)
                    (PHYSICS_TIP_POS_X, 0x5)
                    (PHYSICS_TIP_POS_Y, 0x6)
                    (PHYSICS_TIP_ROTATE_Z, 0x7)
                    (MOTION_FRAME, 0x8)
                    (FOUNDER_SCALING_TYPE, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (START, 0x7)
                    (INIT_PHYSICS_TIP_POS, 0x8)
                    (INIT_ROTATE_Z, 0x9)
                    (INIT_FOUNDER_SCALING, 0xa)
                    (KIRBY_ATTACK_BLOCKED, 0xb)
                    (UPDATE_DRAGON_NEST_TIP_POS, 0xc)
                    (UPDATE_RESERVE_UPDATE_DRAGON_PHYSICS_TIP_POS, 0xd)
                );
            }
            pub mod damage {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (WEIGHT, 0x0)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (INIT, 0x0)
                );
            }
        }
    }
    pub mod tantan_spiralleftloupe {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x8)
                (TERM, 0x9)
            );
        }
    }
    pub mod pickel_building {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_crack {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (MINING_COUNT, 0xa)
                (MINING_END_FRAME, 0xb)
                (MINING_COLLISION_LINE_ID, 0xc)
                (REMOVE_FRAME, 0xd)
                (EXIST_FRAME, 0xe)
                (EFFECT_ID, 0xf)
                (ATTACH_GROUND_ID, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (MODEL, 0x6)
                (EFFECT, 0x7)
                (OVERLAP_INVISIBLE, 0x8)
            );
        }
    }
    pub mod pickel_entryobject {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_fence {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (COMPLETE_RATIO, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (BREAK, 0x6)
                (COMPLETE, 0x7)
            );
        }
    }
    pub mod pickel_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_fishingrod {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x8)
                (TERM, 0xc)
                (LINE_JOINT_LENGTH, 0x9)
                (PULL_START_FRAME, 0xa)
                (FLOAT_SPEED_Y, 0xb)
            );
            make_work_ids!(
                Int,
                Instance,
                (WATER_EFFECT_HANDLE, 0x10)
                (TARGET_OBJECT_ID, 0x11)
                (TARGET_JOINT_ID, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (IN_WATER, 0xd)
                (ENABLE_REWIND, 0xe)
                (PULL_FIX_LINE_LENGTH, 0xf)
                (PULL_LINE_UPDATE, 0x10)
                (TOUCH_FLOOR, 0x11)
            );
        }
    }
    pub mod pickel_forge {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x4)
                (MAP_COLL_Y, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (LANDING_NUM, 0xa)
                (LANDING_NUM_PREV, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HI_PRIORITY, 0x6)
                (UPDATE_ATTACK, 0x7)
                (INIT_ATTACK, 0x8)
                (THROW_MODE, 0x9)
                (REFLECT, 0xa)
            );
        }
    }
    pub mod pickel_maskfinal {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_melt {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_plate {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (RADIUS, 0x3)
                (SCALE, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (PREV, 0xa)
                (NEXT, 0xb)
                (OBJECT_ID, 0xc)
                (SEARCH_ID, 0xd)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (RIDE, 0x6)
                (IGNITION, 0x7)
            );
        }
    }
    pub mod pickel_pushfinal {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_pushobject {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_rail {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (LIFETIME, 0xa)
                (LIFETIME_MAX, 0xb)
                (LIFETIME_MUL_ON_TROLLEY_DEACTIVATED, 0xc)
                (PREV_RAIL_OBJECT_ID, 0xd)
                (NEXT_RAIL_OBJECT_ID, 0xe)
                (TORCH_EFFECT_ID, 0xf)
                (TORCH_FLASH_EFFECT_ID, 0x10)
                (RAIL_GENERATION, 0x11)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xc)
                (TYPE_AIR, 0x6)
                (WITH_TORCH, 0x7)
                (IS_POWERED, 0x8)
                (IS_LEFT, 0x9)
                (IS_PROMOTED, 0xa)
                (IS_TROLLEY_DEACTIVATED, 0xb)
            );
        }
    }
    pub mod pickel_scarier {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod pickel_stone {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SCALE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (PREV, 0xa)
                (NEXT, 0xb)
                (OBJECT_ID, 0xc)
                (FRAME, 0xd)
                (SEARCH_ID, 0xe)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x6)
            );
        }
    }
    pub mod pickel_stuff {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (STUFF_KIND, 0xa)
            );
        }
    }
    pub mod pickel_sword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (MATERIAL_KIND, 0xa)
            );
        }
    }
    pub mod pickel_table {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HP, 0x3)
                (JOSTLE_POS_Z, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (START_AREA_FRAME, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (BREAK, 0x6)
                (IS_FLAT_STAGE, 0x7)
            );
        }
    }
    pub mod pickel_trolley {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (HP, 0x3)
                (CURRENT_ROT_Z, 0x4)
                (NEXT_ROT_Z, 0x5)
                (ADD_ROT_Z, 0x6)
                (ARTICLE_POS_X, 0x7)
                (ARTICLE_POS_Y, 0x8)
                (ARTICLE_POS_Z, 0x9)
                (ARTICLE_LR, 0xa)
                (GENERATE_RAIL_POS_X, 0xb)
                (GENERATE_RAIL_POS_Y, 0xc)
                (SCALE_ON_CATCHED_FIGHTER, 0xd)
                (STICK_EFFECT_INTERVAL_COUNT, 0xe)
            );
            make_work_ids!(
                Int,
                Instance,
                (NO_GRAVITY_COUNT, 0xa)
                (LIFETIME, 0xb)
                (START_STATUS_COUNT, 0xc)
                (SPEED_SLOW_COUNT, 0xd)
                (ADD_ROT_Z_COUNT, 0xe)
                (SPECIAL_S_REPEAT_COUNT, 0xf)
                (GENERATE_RAIL_COUNT, 0x10)
                (GENERATE_RAIL_INTERVAL_COUNT, 0x11)
                (RAIL_OBJECT_ID_LEFT_END, 0x12)
                (RAIL_OBJECT_ID_RIGHT_END, 0x13)
                (CURRENT_POWERED_RAIL_OBJECT_GENERATION, 0x14)
                (DRIVE_KIND, 0x15)
                (DRIVE_KIND_PREV, 0x16)
                (IGNORE_OFF_RAIL_COUNT, 0x17)
                (KEEP_POWERED_RAIL_COUNT, 0x18)
                (POWERED_RAIL_BUTTON_AVAILABLE_COUNT, 0x19)
                (DISABLE_ATTACK_COLLISION_COUNT, 0x1a)
                (LR_COUNT, 0x1b)
                (ARTICLE_GENERATION, 0x1c)
                (ARTICLE_FOUNDER_ID, 0x1d)
                (ID_FOR_CATCH, 0x1e)
                (PICKEL_RE_RIDE_COUNT, 0x1f)
                (PICKEL_RE_RIDE_DISABLE_FRAME, 0x20)
                (PICKEL_JUMP_DISABLE_FRAME, 0x21)
                (PICKEL_RESTORE_TEAM_COUNT, 0x22)
                (DASH_EFFECT_ID, 0x23)
                (OFF_RAIL_EFFECT_ID, 0x24)
                (SITUATION_AIR_COUNT, 0x25)
                (DRIVE_SOUND_HANDLE, 0x26)
                (DRIVE_SOUND_KIND, 0x27)
                (POWERED_RAIL_EFFECT_INTERVAL, 0x28)
                (WALL_EFFECT_INTERVAL, 0x29)
                (GENERATE_RAIL_INTERVAL, 0x2a)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x15)
                (TYPE_AIR, 0x6)
                (GENERATE_POWERED_RAIL, 0x7)
                (VACANT, 0x8)
                (ARTICLE_TYPE_AIR, 0x9)
                (ARTICLE_WITH_TORCH, 0xa)
                (INIT_POS, 0xb)
                (SITUATION_KIND_WATER, 0xc)
                (IS_WALL, 0xd)
                (IS_WALL_LEFT, 0xe)
                (MURABITO_SHOOT, 0xf)
                (ATTACK_CHECK, 0x10)
                (SEARCH_CHECK_FOR_CATCH, 0x11)
                (SEARCH_CHECK_FOR_RIDE, 0x12)
                (REFLECT_COUNT_MAX, 0x13)
                (NO_ATTACK_HIT_MOTION, 0x14)
            );
        }
    }
    pub mod pickel_wing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod edge_background {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod edge_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (HIT_WALL, 0x6)
                (ATTACK, 0x7)
            );
        }
    }
    pub mod edge_flare1 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (POWER, 0x3)
                (RATIO, 0x4)
                (ANGLE, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (LIFE, 0xa)
                (FOUNDER_ID, 0xb)
                (TARGET_NUM, 0xc)
                (TARGET_ID, 0xd)
                (TARGET_ID_MAX, 0x12)
            );
            make_work_ids!(
                Flag,
                Instance,
                (HIT, 0x6)
            );
        }
    }
    pub mod edge_flare2 {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (OFFSET_X, 0x3)
                (OFFSET_Y, 0x4)
                (RADIUS, 0x5)
                (SPEED, 0x6)
                (REFLECT_X, 0x7)
                (REFLECT_Y, 0x8)
                (ANGLE, 0x9)
                (LENGTH, 0xa)
            );
            make_work_ids!(
                Int,
                Instance,
                (OBJECT_ID, 0xa)
                (INDEX, 0xb)
                (FRAME, 0xc)
                (DELAY, 0xd)
                (XLU_FRAME, 0xe)
                (LOG_GROUP, 0xf)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0xa)
                (REFLECT, 0x6)
                (PASTLOG, 0x7)
                (LAST, 0x8)
                (UN_REF_LOG_GROUP, 0x9)
            );
        }
    }
    pub mod edge_flaredummy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POWER, 0x3)
                (SPEED, 0x4)
                (RATIO, 0x5)
                (ANGLE, 0x6)
                (POWER_UP_ATTACK, 0x7)
                (POWER_UP_ATTACK_ATTR, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (INDEX, 0xa)
                (FRAME, 0xb)
                (FRAME_EXT, 0xc)
                (COUNT, 0xd)
                (OBJECT_ID, 0xe)
                (LOG_GROUP, 0xf)
                (STATUS, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (CHANGE, 0x6)
                (FINAL_VISUAL_SCENE, 0x7)
            );
        }
    }
    pub mod edge_flash {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (DAMAGE, 0x3)
                (ATTACK_RATIO, 0x4)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_ID, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (HIT, 0x6)
            );
        }
    }
    pub mod eflame_blazepillar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (ATTACK_TARGET_ID_1, 0xa)
                (ATTACK_TARGET_ID_2, 0xb)
                (ATTACK_TARGET_ID_3, 0xc)
            );
            make_work_ids!(
                Flag,
                Instance,
                (AIR, 0x6)
                (ATTACK_FINISH, 0x7)
            );
        }
    }
    pub mod eflame_esword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (FLICK, 0x6)
                (TAKE_FROM_POCKET, 0x7)
            );
        }
        pub mod status {
            use super::*;
            pub mod special_s {
                use super::*;
                make_work_ids!(
                    Float,
                    Status,
                    (SPEED_ANGLE_RAD, 0x0)
                    (BASE_ANGLE, 0x1)
                );
                make_work_ids!(
                    Int,
                    Status,
                    (GROUND_EFFECT_INTERVAL, 0x0)
                );
                make_work_ids!(
                    Flag,
                    Status,
                    (ANGLE_LOCK, 0x0)
                    (FINISH, 0x1)
                    (CATCHED, 0x2)
                    (GENERATED_LAST_GROUND_EFFECT, 0x3)
                );
            }
        }
    }
    pub mod eflame_firepillar {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod elight_beam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod elight_bunshin {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (FINISH, 0x6)
            );
        }
    }
    pub mod elight_esword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod elight_exprosiveshot {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (SPEED_X, 0x3)
                (SPEED_Y, 0x4)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (HIT_WALL, 0x6)
                (ATTACK, 0x7)
            );
        }
    }
    pub mod elight_meteor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (GROUND_COLLISION_FRAME, 0xa)
                (ATTACK_KIND, 0xb)
            );
        }
    }
    pub mod elight_spreadbullet {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (ANGLE_DEG, 0x3)
                (SPEED_X, 0x4)
                (SPEED_Y, 0x5)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (HIT_WALL, 0x6)
                (ATTACK, 0x7)
            );
        }
    }
    pub mod demon_blaster {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x9)
                (SPEED_X, 0x3)
                (SPEED_Y, 0x4)
                (FOLLOW_POS_X, 0x5)
                (FOLLOW_POS_Y, 0x6)
                (SHOT_EFFECT_POS_X, 0x7)
                (SHOT_EFFECT_POS_Y, 0x8)
            );
            make_work_ids!(
                Int,
                Instance,
                (TYPE, 0xa)
                (BEAM_EFFECT_HANDLE, 0xb)
                (SHOT_EFFECT_HANDLE, 0xc)
                (HEAD_EFFECT_HANDLE, 0xd)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x4)
                (GROUND_HIT_POS_X, 0x0)
                (GROUND_HIT_POS_Y, 0x1)
                (GROUND_HIT_NORMAL_X, 0x2)
                (GROUND_HIT_NORMAL_Y, 0x3)
            );
            make_work_ids!(
                Int,
                Status,
                (HIT_COUNT, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (HIT_GROUND, 0x0)
                (FORBID_FOLLOW_NODE, 0x1)
                (CHECK_PASSABLE_GROUND, 0x2)
            );
        }
    }
    pub mod demon_blasterchest {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod demon_blasterhead {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (EFFECT_COUNT, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (EFFECT, 0x6)
            );
        }
    }
    pub mod demon_blasterwing {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod demon_demonp {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod trail_beam {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x8)
                (POS_X, 0x3)
                (POS_Y, 0x4)
                (ANGLE, 0x5)
                (END_X, 0x6)
                (END_Y, 0x7)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (FLY_HIT, 0x0)
                (FLY_END, 0x1)
                (TERM, 0x2)
            );
        }
    }
    pub mod trail_box {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod trail_cloud {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (POWERUP, 0x3)
                (POWERUP_ATTACK, 0x4)
                (POWERUP_ATTACK_ATTR, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (TEAM, 0xa)
                (NUM, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (ENABLE_POWERUP, 0x6)
                (SITUATION_AIR, 0x7)
            );
        }
    }
    pub mod trail_fire {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Int,
                Instance,
                (MOTION_KIND, 0xa)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (HIT_WALL, 0x6)
                (ATTACK, 0x7)
            );
        }
    }
    pub mod trail_flower {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod trail_hole {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (INIT_SCALE, 0x3)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x7)
                (GROUND, 0x6)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x1)
                (INIT_SCALE, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (PULL, 0x0)
                (FINAL_SUCCESS, 0x1)
                (SEND_ATTACK_END, 0x2)
                (DONE_ADDITIONAL_ATTACK, 0x3)
            );
        }
    }
    pub mod trail_ice {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (TERM, 0x8)
                (HIT_WALL, 0x6)
                (FROM_POCKET, 0x7)
            );
        }
    }
    pub mod trail_lockoncursor {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (COUNT, 0xa)
            );
        }
    }
    pub mod trail_thunder {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x7)
                (FALL_START_POS_Y, 0x3)
                (FALL_START_SCALE, 0x4)
                (DIR, 0x5)
                (LENGTH_SWALLOWED, 0x6)
            );
            make_work_ids!(
                Int,
                Instance,
                (NUM, 0xa)
                (GENERATE_FRAME, 0xb)
            );
            make_work_ids!(
                Flag,
                Instance,
                (SET_NOT_GROUND_THROUGH, 0x6)
                (IS_PUT_IN_POCKET, 0x7)
                (SITUATION_AIR, 0x8)
                (IS_REFLECT, 0x9)
                (IS_SWALLOWED, 0xa)
            );
        }
    }
    pub mod ptrainer_mball {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x6)
                (FLY_OFFSET_X, 0x3)
                (FLY_OFFSET_Y, 0x4)
                (FLY_OFFSET_Z, 0x5)
            );
            make_work_ids!(
                Int,
                Instance,
                (START_KIND, 0xa)
                (FRAME, 0xb)
                (FLY_FRAME, 0xc)
                (MOVE_FRAME, 0xd)
                (MOVE_ELAPSED_FRAME, 0xe)
                (PLATE_EFF_ID, 0xf)
                (OPEN_WAIT_FRAME, 0x10)
                (LIFE, 0x11)
            );
            make_work_ids!(
                Flag,
                Instance,
                (ENABLE_OPEN, 0x6)
                (EXIST_PARTICLE, 0x7)
                (NO_REMOVE, 0x8)
                (SHOOT, 0x9)
                (SHOOT_OPEN, 0xa)
                (SHOOT_FIX, 0xb)
                (POKE_APPEAR, 0xc)
                (REMAIN_PARTICLE, 0xd)
            );
        }
    }
    pub mod ptrainer_plizardon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
        pub mod status {
            use super::*;
            pub mod final_ {
                use super::*;
                make_work_ids!(
                    Flag,
                    Status,
                    (LAST_DAIMONJI, 0xc)
                );
            }
        }
    }
    pub mod ptrainer_pokemon {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (POKEMON_NO, 0xa)
            );
        }
    }
    pub mod ptrainer_ptrainer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x14)
                (TARGET_X, 0x3)
                (TARGET_Y, 0x4)
                (TARGET_Z, 0x5)
                (TARGET_LR, 0x6)
                (TARGET_DIR_HORZ, 0x7)
                (TARGET_DIR_VERT, 0x8)
                (DIR, 0x9)
                (STATUS_LR, 0xa)
                (DIST, 0xb)
                (DIST_TARGET_X, 0xc)
                (DIST_TARGET_Y, 0xd)
                (PATH_DIVISION, 0xe)
                (PATH_DIST_EDGE, 0xf)
                (PATH_LR, 0x10)
                (RUN_LINE_LENGTH, 0x11)
                (POKEMON_ATTACK, 0x12)
                (TURN, 0x13)
            );
            make_work_ids!(
                Int,
                Instance,
                (FIGHTER_ENTRY_ID, 0xa)
                (WANDERING_MODULE, 0xb)
                (START_KIND, 0xc)
                (MOVE_FRAME, 0xd)
                (NO_REACTION_FRAME, 0xe)
                (FINAL_ID, 0xf)
                (OUTFIELD_FRAME, 0x10)
                (NO_RUN_FRAME, 0x11)
                (NO_CHANGE_FRAME, 0x12)
                (WIN_NO, 0x13)
                (WIN_SUB_NO, 0x14)
                (POKEMON_NO, 0x15)
                (WARP_EFF_HANDLE, 0x16)
                (CHANGE_AFTER, 0x17)
                (BEAT_AFTER, 0x18)
                (VOICE_ID, 0x19)
                (VOICE_RESERVE, 0x1a)
                (INVISIBLE_FRAME, 0x1b)
                (INVISIBLE_TYPE, 0x1c)
                (POKEMON_CHARGE, 0x1d)
            );
            make_work_ids!(
                Flag,
                Instance,
                (CHANGE_PREPARED, 0x6)
                (ENABLE_POKEMON, 0x7)
                (MBALL_UPPER, 0x8)
                (TARGET_SAME_BLOCK, 0x9)
                (NO_MOVE, 0xa)
                (TRAIT_NO_FALL, 0xb)
                (STOCK_DISTRIBUTE_WAIT, 0xc)
                (INVISIBLE, 0xd)
                (INVISIBLE_SUSPEND, 0xe)
                (ENABLE_OUTFIELD, 0xf)
                (ENABLE_INFIELD, 0x10)
                (ENABLE_CHANGE_POKEMON, 0x11)
                (PLAY_DEAD_VOICE, 0x12)
                (OUTFIELD_INVISIBLE, 0x13)
                (LOW_MODE, 0x14)
            );
        }
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TURN_DIR_SPEED, 0x0)
                (TURN_DIR_TARGET, 0x1)
                (MOTION_END_FRAME, 0x2)
            );
            make_work_ids!(
                Int,
                Status,
                (MOTION_KIND, 0x0)
                (FINAL_LOOP, 0x1)
                (FINAL_LEFT_OBJECT_ID, 0x2)
                (FINAL_LEFT_ARTICLE_KIND, 0x3)
                (FINAL_RIGHT_ARTICLE_KIND, 0x4)
                (FINAL_LEFT_POKEMON_ID, 0x5)
                (FINAL_WINDOW_KIND, 0x6)
                (FINAL_WINDOW_KIND_PREV, 0x7)
            );
            make_work_ids!(
                Flag,
                Status,
                (ON_CHANGE, 0x0)
                (FINAL_TURN, 0x1)
                (VOICE, 0x2)
                (FINAL_END, 0x3)
            );
        }
    }
    pub mod element_changer {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (FIGHTER_ENTRY_ID, 0xa)
                (CHANGE_FRAME, 0xb)
            );
        }
    }
    pub mod element_diver {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (TERM, 0x4)
                (PARENT_MODEL_SCALE, 0x3)
            );
            make_work_ids!(
                Int,
                Instance,
                (PARENT_KIND, 0xa)
                (MOTION_KIND_FINAL_START, 0xb)
                (MOTION_KIND_FINAL_AIR_START, 0xc)
                (MOTION_KIND_FINAL_ATTACK, 0xd)
                (MOTION_KIND_FINAL_AIR_ATTACK, 0xe)
                (MOTION_KIND_FINAL_END, 0xf)
                (MOTION_KIND_FINAL_AIR_END, 0x10)
            );
            make_work_ids!(
                Flag,
                Instance,
                (START, 0x5)
                (FINAL_HIT, 0x6)
                (FINAL_ATTACK_DETACH, 0x7)
                (FINAL_START_GROUND_ENABLE, 0x8)
            );
        }
    }
    pub mod element_windummy {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod element_winsword {
        use super::*;
        pub mod instance {
            use super::*;
            make_work_ids!(
                Float,
                Instance,
                (START, 0x2)
                (TERM, 0x3)
            );
        }
    }
    pub mod samus_supermissile {
        use super::*;
        pub mod status {
            use super::*;
            pub mod ready {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x0)
                );
            }
            pub mod straight {
                use super::*;
                make_work_ids!(
                    Int,
                    Status,
                    (FRAME, 0x0)
                );
            }
        }
    }
    pub mod dedede_jethammer {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Int,
                Status,
                (EFFECT_ID_HOLE, 0x0)
                (EFFECT_ID_HOLE_MAX, 0x1)
                (EFFECT_ID_HOLE2, 0x2)
                (EFFECT_ID_HOLE_MAX2, 0x3)
                (WAIT_MTRANS_KIND, 0x4)
            );
            make_work_ids!(
                Flag,
                Status,
                (PARENTS_SITUATION_CHANGE, 0x0)
                (PARENTS_SITUATION_AIR, 0x1)
                (HOLD_MAX, 0x2)
                (CONTINUE_MOT1, 0x3)
                (CONTINUE_MOT2, 0x4)
                (EFFECT_HOLD_ON, 0x5)
                (EFFECT_HOLD_MAX_ON, 0x6)
            );
        }
    }
    pub mod dedede_star {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Float,
                Status,
                (TERM, 0x0)
            );
            make_work_ids!(
                Flag,
                Status,
                (LEFT, 0x0)
            );
        }
    }
    pub mod shizue_clayrokcet {
        use super::*;
        pub mod status {
            use super::*;
            make_work_ids!(
                Flag,
                Status,
                (TERM, 0x1)
            );
        }
    }
}
